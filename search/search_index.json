{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Documentation KARTHICK. These documentation are automatically created using mkdocs Interface documentation This section contains the documentation created from 3 interfaces defined in ThunderInterfaces WPEFramework-plugins documentation This section contains the documentation created from 3 plugins defined in ThunderNanoServices","title":"Home"},{"location":"#welcome-to-documentation-karthick","text":"These documentation are automatically created using mkdocs","title":"Welcome to Documentation KARTHICK."},{"location":"#interface-documentation","text":"This section contains the documentation created from 3 interfaces defined in ThunderInterfaces","title":"Interface documentation"},{"location":"#wpeframework-plugins-documentation","text":"This section contains the documentation created from 3 plugins defined in ThunderNanoServices","title":"WPEFramework-plugins documentation"},{"location":"AVSControllerAPI/","text":"AVSController API Version: 1.0 Status: :black_circle::white_circle::white_circle: AVSController interface for Thunder framework. Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the AVSController interface. It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description AVSController JSON-RPC interface. Methods The following methods are provided by the AVSController interface: AVSController interface methods: Method Description mute Mutes the audio output of AVS record Starts or stops the voice recording, skipping keyword detection mute method Mutes the audio output of AVS. Parameters Name Type Description muted boolean Result Name Type Description result null Always null Errors Code Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.mute\", \"params\": false } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } record method Starts or stops the voice recording, skipping keyword detection. Parameters Name Type Description started boolean Result Name Type Description result null Always null Errors Code Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.record\", \"params\": false } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AVSController interface: AVSController interface events: Event Description dialoguestatechange notifies about dialogue state changes dialoguestatechange event notifies about dialogue state changes. Parameters Name Type Description state string The new state (must be one of the following: Idle , Listening , Expecting , Thinking , Speaking ) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.dialoguestatechange\", \"params\": \"SPEAKING\" }","title":"AVSControllerAPI"},{"location":"AVSControllerAPI/#avscontroller-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: AVSController interface for Thunder framework.","title":"AVSController API"},{"location":"AVSControllerAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"AVSControllerAPI/#introduction","text":"","title":"Introduction"},{"location":"AVSControllerAPI/#scope","text":"This document describes purpose and functionality of the AVSController interface. It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"AVSControllerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"AVSControllerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"AVSControllerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"AVSControllerAPI/#description","text":"AVSController JSON-RPC interface.","title":"Description"},{"location":"AVSControllerAPI/#methods","text":"The following methods are provided by the AVSController interface: AVSController interface methods: Method Description mute Mutes the audio output of AVS record Starts or stops the voice recording, skipping keyword detection","title":"Methods"},{"location":"AVSControllerAPI/#mute-method","text":"Mutes the audio output of AVS.","title":"mute method"},{"location":"AVSControllerAPI/#parameters","text":"Name Type Description muted boolean","title":"Parameters"},{"location":"AVSControllerAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"AVSControllerAPI/#errors","text":"Code Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible","title":"Errors"},{"location":"AVSControllerAPI/#example","text":"","title":"Example"},{"location":"AVSControllerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.mute\", \"params\": false }","title":"Request"},{"location":"AVSControllerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"AVSControllerAPI/#record-method","text":"Starts or stops the voice recording, skipping keyword detection.","title":"record method"},{"location":"AVSControllerAPI/#parameters_1","text":"Name Type Description started boolean","title":"Parameters"},{"location":"AVSControllerAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"AVSControllerAPI/#errors_1","text":"Code Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible","title":"Errors"},{"location":"AVSControllerAPI/#example_1","text":"","title":"Example"},{"location":"AVSControllerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.record\", \"params\": false }","title":"Request"},{"location":"AVSControllerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"AVSControllerAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AVSController interface: AVSController interface events: Event Description dialoguestatechange notifies about dialogue state changes","title":"Notifications"},{"location":"AVSControllerAPI/#dialoguestatechange-event","text":"notifies about dialogue state changes.","title":"dialoguestatechange event"},{"location":"AVSControllerAPI/#parameters_2","text":"Name Type Description state string The new state (must be one of the following: Idle , Listening , Expecting , Thinking , Speaking )","title":"Parameters"},{"location":"AVSControllerAPI/#example_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.dialoguestatechange\", \"params\": \"SPEAKING\" }","title":"Example"},{"location":"AmazonPrimeAPI/","text":"AmazonPrime API Version: 1.0 Status: :black_circle::white_circle::white_circle: AmazonPrime interface for Thunder framework. Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the AmazonPrime interface. It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description AmazonPrime JSON-RPC interface. Methods The following methods are provided by the AmazonPrime interface: AmazonPrime interface methods: Method Description send Send a message over the message bus to ignition send method Send a message over the message bus to ignition. Parameters Name Type Description message string Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AmazonPrime.1.send\", \"params\": \"...\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AmazonPrime interface: AmazonPrime interface events: Event Description receive Receive a message from the generic message bus receive event Receive a message from the generic message bus. Parameters Name Type Description message string Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.receive\", \"params\": \"...\" }","title":"AmazonPrimeAPI"},{"location":"AmazonPrimeAPI/#amazonprime-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: AmazonPrime interface for Thunder framework.","title":"AmazonPrime API"},{"location":"AmazonPrimeAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"AmazonPrimeAPI/#introduction","text":"","title":"Introduction"},{"location":"AmazonPrimeAPI/#scope","text":"This document describes purpose and functionality of the AmazonPrime interface. It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"AmazonPrimeAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"AmazonPrimeAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"AmazonPrimeAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"AmazonPrimeAPI/#description","text":"AmazonPrime JSON-RPC interface.","title":"Description"},{"location":"AmazonPrimeAPI/#methods","text":"The following methods are provided by the AmazonPrime interface: AmazonPrime interface methods: Method Description send Send a message over the message bus to ignition","title":"Methods"},{"location":"AmazonPrimeAPI/#send-method","text":"Send a message over the message bus to ignition.","title":"send method"},{"location":"AmazonPrimeAPI/#parameters","text":"Name Type Description message string","title":"Parameters"},{"location":"AmazonPrimeAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"AmazonPrimeAPI/#example","text":"","title":"Example"},{"location":"AmazonPrimeAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AmazonPrime.1.send\", \"params\": \"...\" }","title":"Request"},{"location":"AmazonPrimeAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"AmazonPrimeAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AmazonPrime interface: AmazonPrime interface events: Event Description receive Receive a message from the generic message bus","title":"Notifications"},{"location":"AmazonPrimeAPI/#receive-event","text":"Receive a message from the generic message bus.","title":"receive event"},{"location":"AmazonPrimeAPI/#parameters_1","text":"Name Type Description message string","title":"Parameters"},{"location":"AmazonPrimeAPI/#example_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.receive\", \"params\": \"...\" }","title":"Example"},{"location":"ApplicationAPI/","text":"Application API Version: 1.0 Status: :black_circle::white_circle::white_circle: Application interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Application interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Application JSON-RPC interface. Methods The following methods are provided by the Application interface: Application interface methods: Method Description reset Resets application data reset method Resets application data. Parameters Name Type Description type string Type of reset to perform (must be one of the following: Factory , Cache , Credentials , Recordings ) Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.reset\", \"params\": \"Factory\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Application interface: Application interface properties: Property Description identifier RO Application-specific identification string contentlink WO URI of the associated application-specific content launchpoint Application launching point visible Current application visibility language Current application user interface language identifier property Provides access to the application-specific identification string. This property is read-only . Value Name Type Description id string Identifier string Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.identifier\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } contentlink property Provides access to the URI of the associated application-specific content. This property is write-only . Value Name Type Description link string Content URI Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.contentlink\", \"params\": \"https://youtube.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } launchpoint property Provides access to the application launching point. Value Name Type Description point string Application launching point (must be one of the following: Undefined , Dial , DedicatedButton , DedicatedIcon , ApplicationList , IntegratedTile , SearchResult , SearchContinuation , VoiceControl , VoiceSearchResult , VisualGesture , TouchGesture , EpgGrid , ChannelNumber , ChannelZap , ChannelBar , WebBrowser , PowerOn , PowerOnFromDedicatedButton , SuspendedPowerOn , Restart , SuspendedRestart , ResumedFromScreenSaver , ResumedFromStandby , BannerAd , TitleRecommendation , ApplicationPromotion ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.launchpoint\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Undefined\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.launchpoint\", \"params\": \"Undefined\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visible property Provides access to the current application visibility. Value Name Type Description visiblity boolean Current application visibility Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.visible\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.visible\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } language property Provides access to the current application user interface language. Value Name Type Description language string Language string as per RFC5646 Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.language\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"en\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.language\", \"params\": \"en\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Application interface: Application interface events: Event Description visibilitychange Application visibility changes visibilitychange event Application visibility changes. Parameters Name Type Description hidden boolean Denotes if application is currently hidden Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": false }","title":"ApplicationAPI"},{"location":"ApplicationAPI/#application-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Application interface for Thunder framework.","title":"Application API"},{"location":"ApplicationAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"ApplicationAPI/#introduction","text":"","title":"Introduction"},{"location":"ApplicationAPI/#scope","text":"This document describes purpose and functionality of the Application interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"ApplicationAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"ApplicationAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"ApplicationAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"ApplicationAPI/#description","text":"Application JSON-RPC interface.","title":"Description"},{"location":"ApplicationAPI/#methods","text":"The following methods are provided by the Application interface: Application interface methods: Method Description reset Resets application data","title":"Methods"},{"location":"ApplicationAPI/#reset-method","text":"Resets application data.","title":"reset method"},{"location":"ApplicationAPI/#parameters","text":"Name Type Description type string Type of reset to perform (must be one of the following: Factory , Cache , Credentials , Recordings )","title":"Parameters"},{"location":"ApplicationAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"ApplicationAPI/#example","text":"","title":"Example"},{"location":"ApplicationAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.reset\", \"params\": \"Factory\" }","title":"Request"},{"location":"ApplicationAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"ApplicationAPI/#properties","text":"The following properties are provided by the Application interface: Application interface properties: Property Description identifier RO Application-specific identification string contentlink WO URI of the associated application-specific content launchpoint Application launching point visible Current application visibility language Current application user interface language","title":"Properties"},{"location":"ApplicationAPI/#identifier-property","text":"Provides access to the application-specific identification string. This property is read-only .","title":"identifier property"},{"location":"ApplicationAPI/#value","text":"Name Type Description id string Identifier string","title":"Value"},{"location":"ApplicationAPI/#example_1","text":"","title":"Example"},{"location":"ApplicationAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.identifier\" }","title":"Get Request"},{"location":"ApplicationAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"ApplicationAPI/#contentlink-property","text":"Provides access to the URI of the associated application-specific content. This property is write-only .","title":"contentlink property"},{"location":"ApplicationAPI/#value_1","text":"Name Type Description link string Content URI","title":"Value"},{"location":"ApplicationAPI/#example_2","text":"","title":"Example"},{"location":"ApplicationAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.contentlink\", \"params\": \"https://youtube.com\" }","title":"Set Request"},{"location":"ApplicationAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"ApplicationAPI/#launchpoint-property","text":"Provides access to the application launching point.","title":"launchpoint property"},{"location":"ApplicationAPI/#value_2","text":"Name Type Description point string Application launching point (must be one of the following: Undefined , Dial , DedicatedButton , DedicatedIcon , ApplicationList , IntegratedTile , SearchResult , SearchContinuation , VoiceControl , VoiceSearchResult , VisualGesture , TouchGesture , EpgGrid , ChannelNumber , ChannelZap , ChannelBar , WebBrowser , PowerOn , PowerOnFromDedicatedButton , SuspendedPowerOn , Restart , SuspendedRestart , ResumedFromScreenSaver , ResumedFromStandby , BannerAd , TitleRecommendation , ApplicationPromotion )","title":"Value"},{"location":"ApplicationAPI/#example_3","text":"","title":"Example"},{"location":"ApplicationAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.launchpoint\" }","title":"Get Request"},{"location":"ApplicationAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Undefined\" }","title":"Get Response"},{"location":"ApplicationAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.launchpoint\", \"params\": \"Undefined\" }","title":"Set Request"},{"location":"ApplicationAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"ApplicationAPI/#visible-property","text":"Provides access to the current application visibility.","title":"visible property"},{"location":"ApplicationAPI/#value_3","text":"Name Type Description visiblity boolean Current application visibility","title":"Value"},{"location":"ApplicationAPI/#example_4","text":"","title":"Example"},{"location":"ApplicationAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.visible\" }","title":"Get Request"},{"location":"ApplicationAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"ApplicationAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.visible\", \"params\": false }","title":"Set Request"},{"location":"ApplicationAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"ApplicationAPI/#language-property","text":"Provides access to the current application user interface language.","title":"language property"},{"location":"ApplicationAPI/#value_4","text":"Name Type Description language string Language string as per RFC5646","title":"Value"},{"location":"ApplicationAPI/#example_5","text":"","title":"Example"},{"location":"ApplicationAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.language\" }","title":"Get Request"},{"location":"ApplicationAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"en\" }","title":"Get Response"},{"location":"ApplicationAPI/#set-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.language\", \"params\": \"en\" }","title":"Set Request"},{"location":"ApplicationAPI/#set-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"ApplicationAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Application interface: Application interface events: Event Description visibilitychange Application visibility changes","title":"Notifications"},{"location":"ApplicationAPI/#visibilitychange-event","text":"Application visibility changes.","title":"visibilitychange event"},{"location":"ApplicationAPI/#parameters_1","text":"Name Type Description hidden boolean Denotes if application is currently hidden","title":"Parameters"},{"location":"ApplicationAPI/#example_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": false }","title":"Example"},{"location":"BluetoothControlAPI/","text":"Bluetooth Control API Version: 1.0 Status: :black_circle::white_circle::white_circle: BluetoothControl interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the BluetoothControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Bluetooth Control JSON-RPC interface. Methods The following methods are provided by the BluetoothControl interface: BluetoothControl interface methods: Method Description scan Starts active scanning for Bluetooth devices stopscanning Stops scanning procedure connect Connects to a Bluetooth device disconnect Disconnects from a connected Bluetooth device pair Pairs a Bluetooth device unpair Unpairs a paired Bluetooth device abortpairing Aborts the pairing process pincode Specifies a PIN code for authentication during a legacy pairing process passkey Specifies a passkey for authentication during a pairing process confirmpasskey Confirms a passkey for authentication during a pairing process scan method Starts active scanning for Bluetooth devices. Also see: scanstarted , scancomplete Parameters Name Type Description params object params.type string Bluetooth device type (must be one of the following: Classic , LowEnergy ) params?.timeout number (optional) Duration of the scan (in seconds); default: 10 seconds params?.duration number (optional) Duration of the scan (in seconds); default: 10 seconds Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to scan 12 ERROR_INPROGRESS Scan already in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.scan\", \"params\": { \"type\": \"LowEnergy\", \"timeout\": 60, \"duration\": 60 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } stopscanning method Stops scanning procedure. Also see: scancomplete Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to top scanning 5 ERROR_ILLEGAL_STATE No scan is in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopscanning\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } connect method Connects to a Bluetooth device. Description If the device is not available it will be automatically connected as soon it becomes available. Also see: devicestatechange Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not paired 9 ERROR_ALREADY_CONNECTED Device already connected 1 ERROR_GENERAL Failed to connect the device 27 ERROR_REQUEST_SUBMITTED Device has not been connected but will be automatically connected when available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.connect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } disconnect method Disconnects from a connected Bluetooth device. Description Device will cease to re-connect automatically. Also see: devicestatechange Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 36 ERROR_ALREADY_RELEASED Device not connected 27 ERROR_REQUEST_SUBMITTED Device is currently not connected but it's autoconnection mode has been disabled Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.disconnect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pair method Pairs a Bluetooth device. Description The client may expect PIN or passkey requests during the pairing process. The process can be cancelled any time by calling the abortpairing method Also see: devicestatechange , pincoderequest , passkeyrequest , passkeyconfirmrequest Parameters Name Type Description params object params.address string Bluetooth address params?.timeout integer (optional) Maximum time allowed for the pairing process to complete (in seconds); default: 20 seconds Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 9 ERROR_ALREADY_CONNECTED Device already paired 1 ERROR_GENERAL Failed to pair the device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"timeout\": 60 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unpair method Unpairs a paired Bluetooth device. Also see: devicestatechange Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 36 ERROR_ALREADY_RELEASED Device not paired Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.unpair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } abortpairing method Aborts the pairing process. Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.abortpairing\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pincode method Specifies a PIN code for authentication during a legacy pairing process. Description This method is to be called upon receiving a pincoderequest event during a legacy pairing process. If the specified PIN code is incorrect the pairing process will be aborted. Also see: pincoderequest Parameters Name Type Description params object params.address string Bluetooth address params.secret string A PIN code string, typically consisting of (but not limited to) four decimal digits Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing or PIN code has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pincode\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": \"0000\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } passkey method Specifies a passkey for authentication during a pairing process. Description This method is to be called upon receiving a passkeyrequest event during a pairing process. If the specified passkey is incorrect or empty the pairing process will be aborted. Also see: passkeyrequest Parameters Name Type Description params object params.address string Bluetooth address params.secret integer A six-digit decimal number passkey Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing or a passkey has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.passkey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": 123456 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } confirmpasskey method Confirms a passkey for authentication during a pairing process. Description This method is to be called upon receiving a passkeyconfirmationrequest event during a pairing process. If the confirmation is negative or the pairing process will be aborted. Also see: passkeyconfirmrequest Parameters Name Type Description params object params.address string Bluetooth address params.iscorrect boolean Specifies if the passkey sent in passkeyconfirmrequest event is correct (true) or incorrect (false) Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device is currently not pairing or passkey confirmation has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.confirmpasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"iscorrect\": true } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the BluetoothControl interface: BluetoothControl interface properties: Property Description adapters RO List of local Bluetooth adapters adapter RO Local Bluetooth adapter information devices RO List of known remote Bluetooth devices device RO Remote Bluetooth device information adapters property Provides access to the list of local Bluetooth adapters. This property is read-only . Value Name Type Description (property) array List of local Bluetooth adapters (property)[#] number Adapter ID Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapters\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0 ] } adapter property Provides access to the local Bluetooth adapter information. This property is read-only . Value Name Type Description (property) object Local Bluetooth adapter information (property).interface string Ndapter interface name (property).address string Bluetooth address (property).version number Device version (property)?.manufacturer number (optional) Device manufacturer Company Identifer (property)?.name string (optional) Device name (property)?.shortname string (optional) Device short name The adapter id argument shall be passed as the index to the property, e.g. BluetoothControl.1.adapter@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapter@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"interface\": \"hci0\", \"address\": \"81:6F:B0:91:9B:FE\", \"version\": 8, \"manufacturer\": 0, \"name\": \"Thunder\", \"shortname\": \"Thunder\" } } devices property Provides access to the list of known remote Bluetooth devices. This property is read-only . Value Name Type Description (property) array List of known remote Bluetooth devices (property)[#] string Bluetooth address Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.devices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"81:6F:B0:91:9B:FE\" ] } device property Provides access to the remote Bluetooth device information. This property is read-only . Value Name Type Description (property) object Remote Bluetooth device information (property).name string Name of the device (property).type string Bluetooth device type (must be one of the following: Classic , LowEnergy ) (property)?.class integer (optional) Class of device (3 octets) (property).connected boolean Denotes if the device is currently connected to host (property).paired boolean Denotes if the device is currently paired with host The device address argument shall be passed as the index to the property, e.g. BluetoothControl.1.device@81:6F:B0:91:9B:FE . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.device@81:6F:B0:91:9B:FE\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"Acme Bluetooth Device\", \"type\": \"LowEnergy\", \"class\": 2360324, \"connected\": true, \"paired\": true } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothControl interface: BluetoothControl interface events: Event Description scanstarted Notifies about start scanning scancomplete Notifies about scan completion devicestatechange Notifies about device state change pincoderequest Notifies about a PIN code request passkeyrequest Notifies about a passkey request passkeyconfirmrequest Notifies about a passkey confirmation request scanstarted event Notifies about start scanning. Description Register to this event to be notified about device scan start Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scanstarted\" } scancomplete event Notifies about scan completion. Description Register to this event to be notified about device scan completion Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scancomplete\" } devicestatechange event Notifies about device state change. Description Register to this event to be notified about device state changes Parameters Name Type Description params object params.address string Bluetooth address params.state string Device state (must be one of the following: Pairing , Paired , Unpaired , Connected , Disconnected ) params?.disconnectreason string (optional) Disconnection reason in case of Disconnected event (must be one of the following: ConnectionTimeout , AuthenticationFailure , RemoteLowOnResources , RemotePoweredOff , TerminatedByRemote , TerminatedByHost ) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.devicestatechange\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"state\": \"Disconnected\", \"disconnectreason\": \"ConnectionTimeout\" } } pincoderequest event Notifies about a PIN code request. Description Register to this event to be notified about PIN code requests during a legacy pairing process. Upon receiving this event the client is required to respond with a pincode call in order to complete the pairing procedure. The PIN code value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Note that this event will never be send for a Bluetooth LowEnergy device. Parameters Name Type Description params object params.address string Bluetooth address Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.pincoderequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } passkeyrequest event Notifies about a passkey request. Description Register to this event to be notified about passkey requests that may be required during a pairing process. Upon receiving this event the client is required to respond with a passkey call in order to complete the pairing procedure. The passkey value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Parameters Name Type Description params object params.address string Bluetooth address Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.passkeyrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } passkeyconfirmrequest event Notifies about a passkey confirmation request. Description Register to this event to be notified about passkey confirmation requests that may required during a pairing process. Upon receiving this event the client is required to respond with a passkeyconfirm call in order to complete the pairing procedure. The passkey confirmation would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Parameters Name Type Description params object params.address string Bluetooth address params.secret integer A six-digit decimal number passkey sent by the remote device for confirmation Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.passkeyconfirmrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": 123456 } }","title":"BluetoothControlAPI"},{"location":"BluetoothControlAPI/#bluetooth-control-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: BluetoothControl interface for Thunder framework.","title":"Bluetooth Control API"},{"location":"BluetoothControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"BluetoothControlAPI/#introduction","text":"","title":"Introduction"},{"location":"BluetoothControlAPI/#scope","text":"This document describes purpose and functionality of the BluetoothControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"BluetoothControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"BluetoothControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"BluetoothControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"BluetoothControlAPI/#description","text":"Bluetooth Control JSON-RPC interface.","title":"Description"},{"location":"BluetoothControlAPI/#methods","text":"The following methods are provided by the BluetoothControl interface: BluetoothControl interface methods: Method Description scan Starts active scanning for Bluetooth devices stopscanning Stops scanning procedure connect Connects to a Bluetooth device disconnect Disconnects from a connected Bluetooth device pair Pairs a Bluetooth device unpair Unpairs a paired Bluetooth device abortpairing Aborts the pairing process pincode Specifies a PIN code for authentication during a legacy pairing process passkey Specifies a passkey for authentication during a pairing process confirmpasskey Confirms a passkey for authentication during a pairing process","title":"Methods"},{"location":"BluetoothControlAPI/#scan-method","text":"Starts active scanning for Bluetooth devices. Also see: scanstarted , scancomplete","title":"scan method"},{"location":"BluetoothControlAPI/#parameters","text":"Name Type Description params object params.type string Bluetooth device type (must be one of the following: Classic , LowEnergy ) params?.timeout number (optional) Duration of the scan (in seconds); default: 10 seconds params?.duration number (optional) Duration of the scan (in seconds); default: 10 seconds","title":"Parameters"},{"location":"BluetoothControlAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors","text":"Code Message Description 1 ERROR_GENERAL Failed to scan 12 ERROR_INPROGRESS Scan already in progress","title":"Errors"},{"location":"BluetoothControlAPI/#example","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.scan\", \"params\": { \"type\": \"LowEnergy\", \"timeout\": 60, \"duration\": 60 } }","title":"Request"},{"location":"BluetoothControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#stopscanning-method","text":"Stops scanning procedure. Also see: scancomplete","title":"stopscanning method"},{"location":"BluetoothControlAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"BluetoothControlAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors_1","text":"Code Message Description 1 ERROR_GENERAL Failed to top scanning 5 ERROR_ILLEGAL_STATE No scan is in progress","title":"Errors"},{"location":"BluetoothControlAPI/#example_1","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopscanning\" }","title":"Request"},{"location":"BluetoothControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#connect-method","text":"Connects to a Bluetooth device.","title":"connect method"},{"location":"BluetoothControlAPI/#description_1","text":"If the device is not available it will be automatically connected as soon it becomes available. Also see: devicestatechange","title":"Description"},{"location":"BluetoothControlAPI/#parameters_2","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors_2","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not paired 9 ERROR_ALREADY_CONNECTED Device already connected 1 ERROR_GENERAL Failed to connect the device 27 ERROR_REQUEST_SUBMITTED Device has not been connected but will be automatically connected when available","title":"Errors"},{"location":"BluetoothControlAPI/#example_2","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.connect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothControlAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#disconnect-method","text":"Disconnects from a connected Bluetooth device.","title":"disconnect method"},{"location":"BluetoothControlAPI/#description_2","text":"Device will cease to re-connect automatically. Also see: devicestatechange","title":"Description"},{"location":"BluetoothControlAPI/#parameters_3","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlAPI/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors_3","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 36 ERROR_ALREADY_RELEASED Device not connected 27 ERROR_REQUEST_SUBMITTED Device is currently not connected but it's autoconnection mode has been disabled","title":"Errors"},{"location":"BluetoothControlAPI/#example_3","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.disconnect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothControlAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#pair-method","text":"Pairs a Bluetooth device.","title":"pair method"},{"location":"BluetoothControlAPI/#description_3","text":"The client may expect PIN or passkey requests during the pairing process. The process can be cancelled any time by calling the abortpairing method Also see: devicestatechange , pincoderequest , passkeyrequest , passkeyconfirmrequest","title":"Description"},{"location":"BluetoothControlAPI/#parameters_4","text":"Name Type Description params object params.address string Bluetooth address params?.timeout integer (optional) Maximum time allowed for the pairing process to complete (in seconds); default: 20 seconds","title":"Parameters"},{"location":"BluetoothControlAPI/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors_4","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 9 ERROR_ALREADY_CONNECTED Device already paired 1 ERROR_GENERAL Failed to pair the device","title":"Errors"},{"location":"BluetoothControlAPI/#example_4","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"timeout\": 60 } }","title":"Request"},{"location":"BluetoothControlAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#unpair-method","text":"Unpairs a paired Bluetooth device. Also see: devicestatechange","title":"unpair method"},{"location":"BluetoothControlAPI/#parameters_5","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlAPI/#result_5","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors_5","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 36 ERROR_ALREADY_RELEASED Device not paired","title":"Errors"},{"location":"BluetoothControlAPI/#example_5","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.unpair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothControlAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#abortpairing-method","text":"Aborts the pairing process.","title":"abortpairing method"},{"location":"BluetoothControlAPI/#parameters_6","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlAPI/#result_6","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors_6","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing","title":"Errors"},{"location":"BluetoothControlAPI/#example_6","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.abortpairing\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothControlAPI/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#pincode-method","text":"Specifies a PIN code for authentication during a legacy pairing process.","title":"pincode method"},{"location":"BluetoothControlAPI/#description_4","text":"This method is to be called upon receiving a pincoderequest event during a legacy pairing process. If the specified PIN code is incorrect the pairing process will be aborted. Also see: pincoderequest","title":"Description"},{"location":"BluetoothControlAPI/#parameters_7","text":"Name Type Description params object params.address string Bluetooth address params.secret string A PIN code string, typically consisting of (but not limited to) four decimal digits","title":"Parameters"},{"location":"BluetoothControlAPI/#result_7","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors_7","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing or PIN code has not been requested","title":"Errors"},{"location":"BluetoothControlAPI/#example_7","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pincode\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": \"0000\" } }","title":"Request"},{"location":"BluetoothControlAPI/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#passkey-method","text":"Specifies a passkey for authentication during a pairing process.","title":"passkey method"},{"location":"BluetoothControlAPI/#description_5","text":"This method is to be called upon receiving a passkeyrequest event during a pairing process. If the specified passkey is incorrect or empty the pairing process will be aborted. Also see: passkeyrequest","title":"Description"},{"location":"BluetoothControlAPI/#parameters_8","text":"Name Type Description params object params.address string Bluetooth address params.secret integer A six-digit decimal number passkey","title":"Parameters"},{"location":"BluetoothControlAPI/#result_8","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors_8","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing or a passkey has not been requested","title":"Errors"},{"location":"BluetoothControlAPI/#example_8","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.passkey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": 123456 } }","title":"Request"},{"location":"BluetoothControlAPI/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#confirmpasskey-method","text":"Confirms a passkey for authentication during a pairing process.","title":"confirmpasskey method"},{"location":"BluetoothControlAPI/#description_6","text":"This method is to be called upon receiving a passkeyconfirmationrequest event during a pairing process. If the confirmation is negative or the pairing process will be aborted. Also see: passkeyconfirmrequest","title":"Description"},{"location":"BluetoothControlAPI/#parameters_9","text":"Name Type Description params object params.address string Bluetooth address params.iscorrect boolean Specifies if the passkey sent in passkeyconfirmrequest event is correct (true) or incorrect (false)","title":"Parameters"},{"location":"BluetoothControlAPI/#result_9","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlAPI/#errors_9","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device is currently not pairing or passkey confirmation has not been requested","title":"Errors"},{"location":"BluetoothControlAPI/#example_9","text":"","title":"Example"},{"location":"BluetoothControlAPI/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.confirmpasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"iscorrect\": true } }","title":"Request"},{"location":"BluetoothControlAPI/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlAPI/#properties","text":"The following properties are provided by the BluetoothControl interface: BluetoothControl interface properties: Property Description adapters RO List of local Bluetooth adapters adapter RO Local Bluetooth adapter information devices RO List of known remote Bluetooth devices device RO Remote Bluetooth device information","title":"Properties"},{"location":"BluetoothControlAPI/#adapters-property","text":"Provides access to the list of local Bluetooth adapters. This property is read-only .","title":"adapters property"},{"location":"BluetoothControlAPI/#value","text":"Name Type Description (property) array List of local Bluetooth adapters (property)[#] number Adapter ID","title":"Value"},{"location":"BluetoothControlAPI/#example_10","text":"","title":"Example"},{"location":"BluetoothControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapters\" }","title":"Get Request"},{"location":"BluetoothControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0 ] }","title":"Get Response"},{"location":"BluetoothControlAPI/#adapter-property","text":"Provides access to the local Bluetooth adapter information. This property is read-only .","title":"adapter property"},{"location":"BluetoothControlAPI/#value_1","text":"Name Type Description (property) object Local Bluetooth adapter information (property).interface string Ndapter interface name (property).address string Bluetooth address (property).version number Device version (property)?.manufacturer number (optional) Device manufacturer Company Identifer (property)?.name string (optional) Device name (property)?.shortname string (optional) Device short name The adapter id argument shall be passed as the index to the property, e.g. BluetoothControl.1.adapter@0 .","title":"Value"},{"location":"BluetoothControlAPI/#errors_10","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"BluetoothControlAPI/#example_11","text":"","title":"Example"},{"location":"BluetoothControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapter@0\" }","title":"Get Request"},{"location":"BluetoothControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"interface\": \"hci0\", \"address\": \"81:6F:B0:91:9B:FE\", \"version\": 8, \"manufacturer\": 0, \"name\": \"Thunder\", \"shortname\": \"Thunder\" } }","title":"Get Response"},{"location":"BluetoothControlAPI/#devices-property","text":"Provides access to the list of known remote Bluetooth devices. This property is read-only .","title":"devices property"},{"location":"BluetoothControlAPI/#value_2","text":"Name Type Description (property) array List of known remote Bluetooth devices (property)[#] string Bluetooth address","title":"Value"},{"location":"BluetoothControlAPI/#example_12","text":"","title":"Example"},{"location":"BluetoothControlAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.devices\" }","title":"Get Request"},{"location":"BluetoothControlAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"81:6F:B0:91:9B:FE\" ] }","title":"Get Response"},{"location":"BluetoothControlAPI/#device-property","text":"Provides access to the remote Bluetooth device information. This property is read-only .","title":"device property"},{"location":"BluetoothControlAPI/#value_3","text":"Name Type Description (property) object Remote Bluetooth device information (property).name string Name of the device (property).type string Bluetooth device type (must be one of the following: Classic , LowEnergy ) (property)?.class integer (optional) Class of device (3 octets) (property).connected boolean Denotes if the device is currently connected to host (property).paired boolean Denotes if the device is currently paired with host The device address argument shall be passed as the index to the property, e.g. BluetoothControl.1.device@81:6F:B0:91:9B:FE .","title":"Value"},{"location":"BluetoothControlAPI/#errors_11","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"BluetoothControlAPI/#example_13","text":"","title":"Example"},{"location":"BluetoothControlAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.device@81:6F:B0:91:9B:FE\" }","title":"Get Request"},{"location":"BluetoothControlAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"Acme Bluetooth Device\", \"type\": \"LowEnergy\", \"class\": 2360324, \"connected\": true, \"paired\": true } }","title":"Get Response"},{"location":"BluetoothControlAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothControl interface: BluetoothControl interface events: Event Description scanstarted Notifies about start scanning scancomplete Notifies about scan completion devicestatechange Notifies about device state change pincoderequest Notifies about a PIN code request passkeyrequest Notifies about a passkey request passkeyconfirmrequest Notifies about a passkey confirmation request","title":"Notifications"},{"location":"BluetoothControlAPI/#scanstarted-event","text":"Notifies about start scanning.","title":"scanstarted event"},{"location":"BluetoothControlAPI/#description_7","text":"Register to this event to be notified about device scan start","title":"Description"},{"location":"BluetoothControlAPI/#parameters_10","text":"This event carries no parameters.","title":"Parameters"},{"location":"BluetoothControlAPI/#example_14","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scanstarted\" }","title":"Example"},{"location":"BluetoothControlAPI/#scancomplete-event","text":"Notifies about scan completion.","title":"scancomplete event"},{"location":"BluetoothControlAPI/#description_8","text":"Register to this event to be notified about device scan completion","title":"Description"},{"location":"BluetoothControlAPI/#parameters_11","text":"This event carries no parameters.","title":"Parameters"},{"location":"BluetoothControlAPI/#example_15","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scancomplete\" }","title":"Example"},{"location":"BluetoothControlAPI/#devicestatechange-event","text":"Notifies about device state change.","title":"devicestatechange event"},{"location":"BluetoothControlAPI/#description_9","text":"Register to this event to be notified about device state changes","title":"Description"},{"location":"BluetoothControlAPI/#parameters_12","text":"Name Type Description params object params.address string Bluetooth address params.state string Device state (must be one of the following: Pairing , Paired , Unpaired , Connected , Disconnected ) params?.disconnectreason string (optional) Disconnection reason in case of Disconnected event (must be one of the following: ConnectionTimeout , AuthenticationFailure , RemoteLowOnResources , RemotePoweredOff , TerminatedByRemote , TerminatedByHost )","title":"Parameters"},{"location":"BluetoothControlAPI/#example_16","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.devicestatechange\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"state\": \"Disconnected\", \"disconnectreason\": \"ConnectionTimeout\" } }","title":"Example"},{"location":"BluetoothControlAPI/#pincoderequest-event","text":"Notifies about a PIN code request.","title":"pincoderequest event"},{"location":"BluetoothControlAPI/#description_10","text":"Register to this event to be notified about PIN code requests during a legacy pairing process. Upon receiving this event the client is required to respond with a pincode call in order to complete the pairing procedure. The PIN code value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Note that this event will never be send for a Bluetooth LowEnergy device.","title":"Description"},{"location":"BluetoothControlAPI/#parameters_13","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlAPI/#example_17","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.pincoderequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Example"},{"location":"BluetoothControlAPI/#passkeyrequest-event","text":"Notifies about a passkey request.","title":"passkeyrequest event"},{"location":"BluetoothControlAPI/#description_11","text":"Register to this event to be notified about passkey requests that may be required during a pairing process. Upon receiving this event the client is required to respond with a passkey call in order to complete the pairing procedure. The passkey value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted.","title":"Description"},{"location":"BluetoothControlAPI/#parameters_14","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlAPI/#example_18","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.passkeyrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Example"},{"location":"BluetoothControlAPI/#passkeyconfirmrequest-event","text":"Notifies about a passkey confirmation request.","title":"passkeyconfirmrequest event"},{"location":"BluetoothControlAPI/#description_12","text":"Register to this event to be notified about passkey confirmation requests that may required during a pairing process. Upon receiving this event the client is required to respond with a passkeyconfirm call in order to complete the pairing procedure. The passkey confirmation would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted.","title":"Description"},{"location":"BluetoothControlAPI/#parameters_15","text":"Name Type Description params object params.address string Bluetooth address params.secret integer A six-digit decimal number passkey sent by the remote device for confirmation","title":"Parameters"},{"location":"BluetoothControlAPI/#example_19","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.passkeyconfirmrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": 123456 } }","title":"Example"},{"location":"BluetoothControlPlugin/","text":"Bluetooth Control Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: BluetoothControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the BluetoothControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Bluetooth Control plugin allows Bluetooth device administration. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothControl ) classname string Class name: BluetoothControl locator string Library name: libWPEFrameworkBluetoothControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.interface number (optional) ID of interface configuration?.name String (optional) Name of interface configuration?.class number (optional) Number of Class configuration?.autopasskeyconfirm boolean (optional) Enable autopass confirm configuration?.persistmac boolean (optional) Enable persistent MAC Methods The following methods are provided by the BluetoothControl plugin: BluetoothControl interface methods: Method Description scan Starts active scanning for Bluetooth devices stopscanning Stops scanning procedure connect Connects to a Bluetooth device disconnect Disconnects from a connected Bluetooth device pair Pairs a Bluetooth device unpair Unpairs a paired Bluetooth device abortpairing Aborts the pairing process pincode Specifies a PIN code for authentication during a legacy pairing process passkey Specifies a passkey for authentication during a pairing process confirmpasskey Confirms a passkey for authentication during a pairing process scan method Starts active scanning for Bluetooth devices. Also see: scanstarted , scancomplete Parameters Name Type Description params object params.type string Bluetooth device type (must be one of the following: Classic , LowEnergy ) params?.timeout number (optional) Duration of the scan (in seconds); default: 10 seconds params?.duration number (optional) Duration of the scan (in seconds); default: 10 seconds Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to scan 12 ERROR_INPROGRESS Scan already in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.scan\", \"params\": { \"type\": \"LowEnergy\", \"timeout\": 60, \"duration\": 60 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } stopscanning method Stops scanning procedure. Also see: scancomplete Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to top scanning 5 ERROR_ILLEGAL_STATE No scan is in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopscanning\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } connect method Connects to a Bluetooth device. Description If the device is not available it will be automatically connected as soon it becomes available. Also see: devicestatechange Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not paired 9 ERROR_ALREADY_CONNECTED Device already connected 1 ERROR_GENERAL Failed to connect the device 27 ERROR_REQUEST_SUBMITTED Device has not been connected but will be automatically connected when available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.connect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } disconnect method Disconnects from a connected Bluetooth device. Description Device will cease to re-connect automatically. Also see: devicestatechange Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 36 ERROR_ALREADY_RELEASED Device not connected 27 ERROR_REQUEST_SUBMITTED Device is currently not connected but it's autoconnection mode has been disabled Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.disconnect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pair method Pairs a Bluetooth device. Description The client may expect PIN or passkey requests during the pairing process. The process can be cancelled any time by calling the abortpairing method Also see: devicestatechange , pincoderequest , passkeyrequest , passkeyconfirmrequest Parameters Name Type Description params object params.address string Bluetooth address params?.timeout integer (optional) Maximum time allowed for the pairing process to complete (in seconds); default: 20 seconds Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 9 ERROR_ALREADY_CONNECTED Device already paired 1 ERROR_GENERAL Failed to pair the device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"timeout\": 60 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unpair method Unpairs a paired Bluetooth device. Also see: devicestatechange Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 36 ERROR_ALREADY_RELEASED Device not paired Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.unpair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } abortpairing method Aborts the pairing process. Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.abortpairing\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pincode method Specifies a PIN code for authentication during a legacy pairing process. Description This method is to be called upon receiving a pincoderequest event during a legacy pairing process. If the specified PIN code is incorrect the pairing process will be aborted. Also see: pincoderequest Parameters Name Type Description params object params.address string Bluetooth address params.secret string A PIN code string, typically consisting of (but not limited to) four decimal digits Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing or PIN code has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pincode\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": \"0000\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } passkey method Specifies a passkey for authentication during a pairing process. Description This method is to be called upon receiving a passkeyrequest event during a pairing process. If the specified passkey is incorrect or empty the pairing process will be aborted. Also see: passkeyrequest Parameters Name Type Description params object params.address string Bluetooth address params.secret integer A six-digit decimal number passkey Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing or a passkey has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.passkey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": 123456 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } confirmpasskey method Confirms a passkey for authentication during a pairing process. Description This method is to be called upon receiving a passkeyconfirmationrequest event during a pairing process. If the confirmation is negative or the pairing process will be aborted. Also see: passkeyconfirmrequest Parameters Name Type Description params object params.address string Bluetooth address params.iscorrect boolean Specifies if the passkey sent in passkeyconfirmrequest event is correct (true) or incorrect (false) Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device is currently not pairing or passkey confirmation has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.confirmpasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"iscorrect\": true } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the BluetoothControl plugin: BluetoothControl interface properties: Property Description adapters RO List of local Bluetooth adapters adapter RO Local Bluetooth adapter information devices RO List of known remote Bluetooth devices device RO Remote Bluetooth device information adapters property Provides access to the list of local Bluetooth adapters. This property is read-only . Value Name Type Description (property) array List of local Bluetooth adapters (property)[#] number Adapter ID Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapters\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0 ] } adapter property Provides access to the local Bluetooth adapter information. This property is read-only . Value Name Type Description (property) object Local Bluetooth adapter information (property).interface string Ndapter interface name (property).address string Bluetooth address (property).version number Device version (property)?.manufacturer number (optional) Device manufacturer Company Identifer (property)?.name string (optional) Device name (property)?.shortname string (optional) Device short name The adapter id argument shall be passed as the index to the property, e.g. BluetoothControl.1.adapter@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapter@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"interface\": \"hci0\", \"address\": \"81:6F:B0:91:9B:FE\", \"version\": 8, \"manufacturer\": 0, \"name\": \"Thunder\", \"shortname\": \"Thunder\" } } devices property Provides access to the list of known remote Bluetooth devices. This property is read-only . Value Name Type Description (property) array List of known remote Bluetooth devices (property)[#] string Bluetooth address Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.devices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"81:6F:B0:91:9B:FE\" ] } device property Provides access to the remote Bluetooth device information. This property is read-only . Value Name Type Description (property) object Remote Bluetooth device information (property).name string Name of the device (property).type string Bluetooth device type (must be one of the following: Classic , LowEnergy ) (property)?.class integer (optional) Class of device (3 octets) (property).connected boolean Denotes if the device is currently connected to host (property).paired boolean Denotes if the device is currently paired with host The device address argument shall be passed as the index to the property, e.g. BluetoothControl.1.device@81:6F:B0:91:9B:FE . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.device@81:6F:B0:91:9B:FE\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"Acme Bluetooth Device\", \"type\": \"LowEnergy\", \"class\": 2360324, \"connected\": true, \"paired\": true } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothControl plugin: BluetoothControl interface events: Event Description scanstarted Notifies about start scanning scancomplete Notifies about scan completion devicestatechange Notifies about device state change pincoderequest Notifies about a PIN code request passkeyrequest Notifies about a passkey request passkeyconfirmrequest Notifies about a passkey confirmation request scanstarted event Notifies about start scanning. Description Register to this event to be notified about device scan start Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scanstarted\" } scancomplete event Notifies about scan completion. Description Register to this event to be notified about device scan completion Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scancomplete\" } devicestatechange event Notifies about device state change. Description Register to this event to be notified about device state changes Parameters Name Type Description params object params.address string Bluetooth address params.state string Device state (must be one of the following: Pairing , Paired , Unpaired , Connected , Disconnected ) params?.disconnectreason string (optional) Disconnection reason in case of Disconnected event (must be one of the following: ConnectionTimeout , AuthenticationFailure , RemoteLowOnResources , RemotePoweredOff , TerminatedByRemote , TerminatedByHost ) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.devicestatechange\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"state\": \"Disconnected\", \"disconnectreason\": \"ConnectionTimeout\" } } pincoderequest event Notifies about a PIN code request. Description Register to this event to be notified about PIN code requests during a legacy pairing process. Upon receiving this event the client is required to respond with a pincode call in order to complete the pairing procedure. The PIN code value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Note that this event will never be send for a Bluetooth LowEnergy device. Parameters Name Type Description params object params.address string Bluetooth address Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.pincoderequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } passkeyrequest event Notifies about a passkey request. Description Register to this event to be notified about passkey requests that may be required during a pairing process. Upon receiving this event the client is required to respond with a passkey call in order to complete the pairing procedure. The passkey value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Parameters Name Type Description params object params.address string Bluetooth address Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.passkeyrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } passkeyconfirmrequest event Notifies about a passkey confirmation request. Description Register to this event to be notified about passkey confirmation requests that may required during a pairing process. Upon receiving this event the client is required to respond with a passkeyconfirm call in order to complete the pairing procedure. The passkey confirmation would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Parameters Name Type Description params object params.address string Bluetooth address params.secret integer A six-digit decimal number passkey sent by the remote device for confirmation Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.passkeyconfirmrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": 123456 } }","title":"BluetoothControlPlugin"},{"location":"BluetoothControlPlugin/#bluetooth-control-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: BluetoothControl plugin for Thunder framework.","title":"Bluetooth Control Plugin"},{"location":"BluetoothControlPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"BluetoothControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"BluetoothControlPlugin/#scope","text":"This document describes purpose and functionality of the BluetoothControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"BluetoothControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"BluetoothControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"BluetoothControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"BluetoothControlPlugin/#description","text":"The Bluetooth Control plugin allows Bluetooth device administration. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"BluetoothControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothControl ) classname string Class name: BluetoothControl locator string Library name: libWPEFrameworkBluetoothControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.interface number (optional) ID of interface configuration?.name String (optional) Name of interface configuration?.class number (optional) Number of Class configuration?.autopasskeyconfirm boolean (optional) Enable autopass confirm configuration?.persistmac boolean (optional) Enable persistent MAC","title":"Configuration"},{"location":"BluetoothControlPlugin/#methods","text":"The following methods are provided by the BluetoothControl plugin: BluetoothControl interface methods: Method Description scan Starts active scanning for Bluetooth devices stopscanning Stops scanning procedure connect Connects to a Bluetooth device disconnect Disconnects from a connected Bluetooth device pair Pairs a Bluetooth device unpair Unpairs a paired Bluetooth device abortpairing Aborts the pairing process pincode Specifies a PIN code for authentication during a legacy pairing process passkey Specifies a passkey for authentication during a pairing process confirmpasskey Confirms a passkey for authentication during a pairing process","title":"Methods"},{"location":"BluetoothControlPlugin/#scan-method","text":"Starts active scanning for Bluetooth devices. Also see: scanstarted , scancomplete","title":"scan method"},{"location":"BluetoothControlPlugin/#parameters","text":"Name Type Description params object params.type string Bluetooth device type (must be one of the following: Classic , LowEnergy ) params?.timeout number (optional) Duration of the scan (in seconds); default: 10 seconds params?.duration number (optional) Duration of the scan (in seconds); default: 10 seconds","title":"Parameters"},{"location":"BluetoothControlPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors","text":"Code Message Description 1 ERROR_GENERAL Failed to scan 12 ERROR_INPROGRESS Scan already in progress","title":"Errors"},{"location":"BluetoothControlPlugin/#example","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.scan\", \"params\": { \"type\": \"LowEnergy\", \"timeout\": 60, \"duration\": 60 } }","title":"Request"},{"location":"BluetoothControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#stopscanning-method","text":"Stops scanning procedure. Also see: scancomplete","title":"stopscanning method"},{"location":"BluetoothControlPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"BluetoothControlPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors_1","text":"Code Message Description 1 ERROR_GENERAL Failed to top scanning 5 ERROR_ILLEGAL_STATE No scan is in progress","title":"Errors"},{"location":"BluetoothControlPlugin/#example_1","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopscanning\" }","title":"Request"},{"location":"BluetoothControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#connect-method","text":"Connects to a Bluetooth device.","title":"connect method"},{"location":"BluetoothControlPlugin/#description_1","text":"If the device is not available it will be automatically connected as soon it becomes available. Also see: devicestatechange","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_2","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlPlugin/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors_2","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not paired 9 ERROR_ALREADY_CONNECTED Device already connected 1 ERROR_GENERAL Failed to connect the device 27 ERROR_REQUEST_SUBMITTED Device has not been connected but will be automatically connected when available","title":"Errors"},{"location":"BluetoothControlPlugin/#example_2","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.connect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothControlPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#disconnect-method","text":"Disconnects from a connected Bluetooth device.","title":"disconnect method"},{"location":"BluetoothControlPlugin/#description_2","text":"Device will cease to re-connect automatically. Also see: devicestatechange","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_3","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlPlugin/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors_3","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 36 ERROR_ALREADY_RELEASED Device not connected 27 ERROR_REQUEST_SUBMITTED Device is currently not connected but it's autoconnection mode has been disabled","title":"Errors"},{"location":"BluetoothControlPlugin/#example_3","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.disconnect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothControlPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#pair-method","text":"Pairs a Bluetooth device.","title":"pair method"},{"location":"BluetoothControlPlugin/#description_3","text":"The client may expect PIN or passkey requests during the pairing process. The process can be cancelled any time by calling the abortpairing method Also see: devicestatechange , pincoderequest , passkeyrequest , passkeyconfirmrequest","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_4","text":"Name Type Description params object params.address string Bluetooth address params?.timeout integer (optional) Maximum time allowed for the pairing process to complete (in seconds); default: 20 seconds","title":"Parameters"},{"location":"BluetoothControlPlugin/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors_4","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 9 ERROR_ALREADY_CONNECTED Device already paired 1 ERROR_GENERAL Failed to pair the device","title":"Errors"},{"location":"BluetoothControlPlugin/#example_4","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"timeout\": 60 } }","title":"Request"},{"location":"BluetoothControlPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#unpair-method","text":"Unpairs a paired Bluetooth device. Also see: devicestatechange","title":"unpair method"},{"location":"BluetoothControlPlugin/#parameters_5","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlPlugin/#result_5","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors_5","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 36 ERROR_ALREADY_RELEASED Device not paired","title":"Errors"},{"location":"BluetoothControlPlugin/#example_5","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.unpair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothControlPlugin/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#abortpairing-method","text":"Aborts the pairing process.","title":"abortpairing method"},{"location":"BluetoothControlPlugin/#parameters_6","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlPlugin/#result_6","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors_6","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing","title":"Errors"},{"location":"BluetoothControlPlugin/#example_6","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.abortpairing\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothControlPlugin/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#pincode-method","text":"Specifies a PIN code for authentication during a legacy pairing process.","title":"pincode method"},{"location":"BluetoothControlPlugin/#description_4","text":"This method is to be called upon receiving a pincoderequest event during a legacy pairing process. If the specified PIN code is incorrect the pairing process will be aborted. Also see: pincoderequest","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_7","text":"Name Type Description params object params.address string Bluetooth address params.secret string A PIN code string, typically consisting of (but not limited to) four decimal digits","title":"Parameters"},{"location":"BluetoothControlPlugin/#result_7","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors_7","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing or PIN code has not been requested","title":"Errors"},{"location":"BluetoothControlPlugin/#example_7","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pincode\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": \"0000\" } }","title":"Request"},{"location":"BluetoothControlPlugin/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#passkey-method","text":"Specifies a passkey for authentication during a pairing process.","title":"passkey method"},{"location":"BluetoothControlPlugin/#description_5","text":"This method is to be called upon receiving a passkeyrequest event during a pairing process. If the specified passkey is incorrect or empty the pairing process will be aborted. Also see: passkeyrequest","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_8","text":"Name Type Description params object params.address string Bluetooth address params.secret integer A six-digit decimal number passkey","title":"Parameters"},{"location":"BluetoothControlPlugin/#result_8","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors_8","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device not currently pairing or a passkey has not been requested","title":"Errors"},{"location":"BluetoothControlPlugin/#example_8","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.passkey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": 123456 } }","title":"Request"},{"location":"BluetoothControlPlugin/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#confirmpasskey-method","text":"Confirms a passkey for authentication during a pairing process.","title":"confirmpasskey method"},{"location":"BluetoothControlPlugin/#description_6","text":"This method is to be called upon receiving a passkeyconfirmationrequest event during a pairing process. If the confirmation is negative or the pairing process will be aborted. Also see: passkeyconfirmrequest","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_9","text":"Name Type Description params object params.address string Bluetooth address params.iscorrect boolean Specifies if the passkey sent in passkeyconfirmrequest event is correct (true) or incorrect (false)","title":"Parameters"},{"location":"BluetoothControlPlugin/#result_9","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothControlPlugin/#errors_9","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device 5 ERROR_ILLEGAL_STATE Device is currently not pairing or passkey confirmation has not been requested","title":"Errors"},{"location":"BluetoothControlPlugin/#example_9","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.confirmpasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"iscorrect\": true } }","title":"Request"},{"location":"BluetoothControlPlugin/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothControlPlugin/#properties","text":"The following properties are provided by the BluetoothControl plugin: BluetoothControl interface properties: Property Description adapters RO List of local Bluetooth adapters adapter RO Local Bluetooth adapter information devices RO List of known remote Bluetooth devices device RO Remote Bluetooth device information","title":"Properties"},{"location":"BluetoothControlPlugin/#adapters-property","text":"Provides access to the list of local Bluetooth adapters. This property is read-only .","title":"adapters property"},{"location":"BluetoothControlPlugin/#value","text":"Name Type Description (property) array List of local Bluetooth adapters (property)[#] number Adapter ID","title":"Value"},{"location":"BluetoothControlPlugin/#example_10","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapters\" }","title":"Get Request"},{"location":"BluetoothControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0 ] }","title":"Get Response"},{"location":"BluetoothControlPlugin/#adapter-property","text":"Provides access to the local Bluetooth adapter information. This property is read-only .","title":"adapter property"},{"location":"BluetoothControlPlugin/#value_1","text":"Name Type Description (property) object Local Bluetooth adapter information (property).interface string Ndapter interface name (property).address string Bluetooth address (property).version number Device version (property)?.manufacturer number (optional) Device manufacturer Company Identifer (property)?.name string (optional) Device name (property)?.shortname string (optional) Device short name The adapter id argument shall be passed as the index to the property, e.g. BluetoothControl.1.adapter@0 .","title":"Value"},{"location":"BluetoothControlPlugin/#errors_10","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"BluetoothControlPlugin/#example_11","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapter@0\" }","title":"Get Request"},{"location":"BluetoothControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"interface\": \"hci0\", \"address\": \"81:6F:B0:91:9B:FE\", \"version\": 8, \"manufacturer\": 0, \"name\": \"Thunder\", \"shortname\": \"Thunder\" } }","title":"Get Response"},{"location":"BluetoothControlPlugin/#devices-property","text":"Provides access to the list of known remote Bluetooth devices. This property is read-only .","title":"devices property"},{"location":"BluetoothControlPlugin/#value_2","text":"Name Type Description (property) array List of known remote Bluetooth devices (property)[#] string Bluetooth address","title":"Value"},{"location":"BluetoothControlPlugin/#example_12","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.devices\" }","title":"Get Request"},{"location":"BluetoothControlPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"81:6F:B0:91:9B:FE\" ] }","title":"Get Response"},{"location":"BluetoothControlPlugin/#device-property","text":"Provides access to the remote Bluetooth device information. This property is read-only .","title":"device property"},{"location":"BluetoothControlPlugin/#value_3","text":"Name Type Description (property) object Remote Bluetooth device information (property).name string Name of the device (property).type string Bluetooth device type (must be one of the following: Classic , LowEnergy ) (property)?.class integer (optional) Class of device (3 octets) (property).connected boolean Denotes if the device is currently connected to host (property).paired boolean Denotes if the device is currently paired with host The device address argument shall be passed as the index to the property, e.g. BluetoothControl.1.device@81:6F:B0:91:9B:FE .","title":"Value"},{"location":"BluetoothControlPlugin/#errors_11","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"BluetoothControlPlugin/#example_13","text":"","title":"Example"},{"location":"BluetoothControlPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.device@81:6F:B0:91:9B:FE\" }","title":"Get Request"},{"location":"BluetoothControlPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"Acme Bluetooth Device\", \"type\": \"LowEnergy\", \"class\": 2360324, \"connected\": true, \"paired\": true } }","title":"Get Response"},{"location":"BluetoothControlPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothControl plugin: BluetoothControl interface events: Event Description scanstarted Notifies about start scanning scancomplete Notifies about scan completion devicestatechange Notifies about device state change pincoderequest Notifies about a PIN code request passkeyrequest Notifies about a passkey request passkeyconfirmrequest Notifies about a passkey confirmation request","title":"Notifications"},{"location":"BluetoothControlPlugin/#scanstarted-event","text":"Notifies about start scanning.","title":"scanstarted event"},{"location":"BluetoothControlPlugin/#description_7","text":"Register to this event to be notified about device scan start","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_10","text":"This event carries no parameters.","title":"Parameters"},{"location":"BluetoothControlPlugin/#example_14","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scanstarted\" }","title":"Example"},{"location":"BluetoothControlPlugin/#scancomplete-event","text":"Notifies about scan completion.","title":"scancomplete event"},{"location":"BluetoothControlPlugin/#description_8","text":"Register to this event to be notified about device scan completion","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_11","text":"This event carries no parameters.","title":"Parameters"},{"location":"BluetoothControlPlugin/#example_15","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scancomplete\" }","title":"Example"},{"location":"BluetoothControlPlugin/#devicestatechange-event","text":"Notifies about device state change.","title":"devicestatechange event"},{"location":"BluetoothControlPlugin/#description_9","text":"Register to this event to be notified about device state changes","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_12","text":"Name Type Description params object params.address string Bluetooth address params.state string Device state (must be one of the following: Pairing , Paired , Unpaired , Connected , Disconnected ) params?.disconnectreason string (optional) Disconnection reason in case of Disconnected event (must be one of the following: ConnectionTimeout , AuthenticationFailure , RemoteLowOnResources , RemotePoweredOff , TerminatedByRemote , TerminatedByHost )","title":"Parameters"},{"location":"BluetoothControlPlugin/#example_16","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.devicestatechange\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"state\": \"Disconnected\", \"disconnectreason\": \"ConnectionTimeout\" } }","title":"Example"},{"location":"BluetoothControlPlugin/#pincoderequest-event","text":"Notifies about a PIN code request.","title":"pincoderequest event"},{"location":"BluetoothControlPlugin/#description_10","text":"Register to this event to be notified about PIN code requests during a legacy pairing process. Upon receiving this event the client is required to respond with a pincode call in order to complete the pairing procedure. The PIN code value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Note that this event will never be send for a Bluetooth LowEnergy device.","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_13","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlPlugin/#example_17","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.pincoderequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Example"},{"location":"BluetoothControlPlugin/#passkeyrequest-event","text":"Notifies about a passkey request.","title":"passkeyrequest event"},{"location":"BluetoothControlPlugin/#description_11","text":"Register to this event to be notified about passkey requests that may be required during a pairing process. Upon receiving this event the client is required to respond with a passkey call in order to complete the pairing procedure. The passkey value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted.","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_14","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothControlPlugin/#example_18","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.passkeyrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Example"},{"location":"BluetoothControlPlugin/#passkeyconfirmrequest-event","text":"Notifies about a passkey confirmation request.","title":"passkeyconfirmrequest event"},{"location":"BluetoothControlPlugin/#description_12","text":"Register to this event to be notified about passkey confirmation requests that may required during a pairing process. Upon receiving this event the client is required to respond with a passkeyconfirm call in order to complete the pairing procedure. The passkey confirmation would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted.","title":"Description"},{"location":"BluetoothControlPlugin/#parameters_15","text":"Name Type Description params object params.address string Bluetooth address params.secret integer A six-digit decimal number passkey sent by the remote device for confirmation","title":"Parameters"},{"location":"BluetoothControlPlugin/#example_19","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.passkeyconfirmrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"secret\": 123456 } }","title":"Example"},{"location":"BluetoothRemoteControlAPI/","text":"Bluetooth Remote Control API Version: 1.0 Status: :black_circle::white_circle::white_circle: BluetoothRemoteControl interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the BluetoothRemoteControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Bluetooth Remote Control JSON-RPC interface. Methods The following methods are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface methods: Method Description assign Assigns a bluetooth device as a remote control unit revoke Revokes the current remote control assignment assign method Assigns a bluetooth device as a remote control unit. Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Bluetooth unavailable 22 ERROR_UNKNOWN_KEY Device unknown 1 ERROR_GENERAL Failed to assign the device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.assign\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } revoke method Revokes the current remote control assignment. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 5 ERROR_ILLEGAL_STATE Remote not assigned Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.revoke\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface properties: Property Description name RO Unit name address RO Bluetooth address of the unit info RO Unit auxiliary information batterylevel RO Battery level voice Enable or Disable the flow of Voice data fragments from the remote audioprofile RO Audio profile details name property Provides access to the unit name. This property is read-only . Value Name Type Description (property) string Name of the remote control unit Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.name\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Acme Bluetooth RCU\" } address property Provides access to the bluetooth address of the unit. This property is read-only . Value Name Type Description (property) string Bluetooth address Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.address\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"81:6F:B0:91:9B:FE\" } info property Provides access to the unit auxiliary information. This property is read-only . Value Name Type Description (property) object Unit auxiliary information (property)?.model string (optional) Unit model name or number (property)?.serial string (optional) Unit serial number (property)?.firmware string (optional) Unit firmware revision (property)?.software string (optional) Unit software revision (property)?.manufacturer string (optional) Unit manufacturer name Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 1 ERROR_GENERAL Failed to retrieve information Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.info\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Acme 1500 Plus\", \"serial\": \"1234567890\", \"firmware\": \"1.0\", \"software\": \"1.0\", \"manufacturer\": \"Acme Inc.\" } } batterylevel property Provides access to the battery level. This property is read-only . Value Name Type Description (property) number Remote control unit's battery level in percentage Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 1 ERROR_GENERAL Failed to retrieve battery level Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.batterylevel\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 50 } voice property Provides access to the enable or Disable the flow of Voice data fragments from the remote. Value Name Type Description (property) boolean enable (true) or disable (false) flow of voice data Errors Code Message Description 1 ERROR_GENERAL Failed to set the voice flow Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } audioprofile property Provides access to the audio profile details. This property is read-only . Value Name Type Description (property) object Audio profile details (property).codec string Name of the audio codec ( pcm for uncompressed audio) (must be one of the following: PCM , ADPCM ) (property).channels number Number of audio channels (1: mono, 2: stereo, etc.) (property).rate number Sample rate (in Hz) (property).resolution number Sample resolution (in bits per sample) Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 22 ERROR_UNKNOWN_KEY The supplied audio profile is unknown Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.audioprofile\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"ADPCM\", \"channels\": 1, \"rate\": 16000, \"resolution\": 16 } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface events: Event Description audiotransmission Notifies about audio data transmission audioframe Notifies about new audio data available batterylevelchange Notifies about battery level changes audiotransmission event Notifies about audio data transmission. Description Register to this event to be notified about audio transmission status Parameters Name Type Description params object params?.profile string (optional) Type of audio profile, marking start of transmission; empty in case of end of transmission Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.audiotransmission\", \"params\": { \"profile\": \"pcm\" } } audioframe event Notifies about new audio data available. Description Register to this event to be notified about audio data Parameters Name Type Description params object params?.seq number (optional) Sequence number of the audio frame within current audio transmission params.data string Base64 representation of the binary data of the audio frame; format of the data is specified by the audio profile denoted by the most recent audiotransmission notification Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.audioframe\", \"params\": { \"seq\": 1, \"data\": \"yKMHiYh6qJiDspB6S7ihlKOAbivApYEQDCgY0aECCQhpkAqZogP1ECk9GbHGEAkwG8Ax8wArgaAtEMjGQIoYCKKgGCuzBSA/iuWkKEwamLKzOKoCeR2hwQQZKqgBKKqELoGQwQ==\" } } batterylevelchange event Notifies about battery level changes. Description Register to this event to be notified about battery level drops Parameters Name Type Description params object params.level number Battery level (in percentage) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.batterylevelchange\", \"params\": { \"level\": 50 } }","title":"BluetoothRemoteControlAPI"},{"location":"BluetoothRemoteControlAPI/#bluetooth-remote-control-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: BluetoothRemoteControl interface for Thunder framework.","title":"Bluetooth Remote Control API"},{"location":"BluetoothRemoteControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"BluetoothRemoteControlAPI/#introduction","text":"","title":"Introduction"},{"location":"BluetoothRemoteControlAPI/#scope","text":"This document describes purpose and functionality of the BluetoothRemoteControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"BluetoothRemoteControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"BluetoothRemoteControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"BluetoothRemoteControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"BluetoothRemoteControlAPI/#description","text":"Bluetooth Remote Control JSON-RPC interface.","title":"Description"},{"location":"BluetoothRemoteControlAPI/#methods","text":"The following methods are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface methods: Method Description assign Assigns a bluetooth device as a remote control unit revoke Revokes the current remote control assignment","title":"Methods"},{"location":"BluetoothRemoteControlAPI/#assign-method","text":"Assigns a bluetooth device as a remote control unit.","title":"assign method"},{"location":"BluetoothRemoteControlAPI/#parameters","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothRemoteControlAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothRemoteControlAPI/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Bluetooth unavailable 22 ERROR_UNKNOWN_KEY Device unknown 1 ERROR_GENERAL Failed to assign the device","title":"Errors"},{"location":"BluetoothRemoteControlAPI/#example","text":"","title":"Example"},{"location":"BluetoothRemoteControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.assign\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothRemoteControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothRemoteControlAPI/#revoke-method","text":"Revokes the current remote control assignment.","title":"revoke method"},{"location":"BluetoothRemoteControlAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"BluetoothRemoteControlAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothRemoteControlAPI/#errors_1","text":"Code Message Description 5 ERROR_ILLEGAL_STATE Remote not assigned","title":"Errors"},{"location":"BluetoothRemoteControlAPI/#example_1","text":"","title":"Example"},{"location":"BluetoothRemoteControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.revoke\" }","title":"Request"},{"location":"BluetoothRemoteControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothRemoteControlAPI/#properties","text":"The following properties are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface properties: Property Description name RO Unit name address RO Bluetooth address of the unit info RO Unit auxiliary information batterylevel RO Battery level voice Enable or Disable the flow of Voice data fragments from the remote audioprofile RO Audio profile details","title":"Properties"},{"location":"BluetoothRemoteControlAPI/#name-property","text":"Provides access to the unit name. This property is read-only .","title":"name property"},{"location":"BluetoothRemoteControlAPI/#value","text":"Name Type Description (property) string Name of the remote control unit","title":"Value"},{"location":"BluetoothRemoteControlAPI/#errors_2","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned","title":"Errors"},{"location":"BluetoothRemoteControlAPI/#example_2","text":"","title":"Example"},{"location":"BluetoothRemoteControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.name\" }","title":"Get Request"},{"location":"BluetoothRemoteControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Acme Bluetooth RCU\" }","title":"Get Response"},{"location":"BluetoothRemoteControlAPI/#address-property","text":"Provides access to the bluetooth address of the unit. This property is read-only .","title":"address property"},{"location":"BluetoothRemoteControlAPI/#value_1","text":"Name Type Description (property) string Bluetooth address","title":"Value"},{"location":"BluetoothRemoteControlAPI/#errors_3","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned","title":"Errors"},{"location":"BluetoothRemoteControlAPI/#example_3","text":"","title":"Example"},{"location":"BluetoothRemoteControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.address\" }","title":"Get Request"},{"location":"BluetoothRemoteControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"81:6F:B0:91:9B:FE\" }","title":"Get Response"},{"location":"BluetoothRemoteControlAPI/#info-property","text":"Provides access to the unit auxiliary information. This property is read-only .","title":"info property"},{"location":"BluetoothRemoteControlAPI/#value_2","text":"Name Type Description (property) object Unit auxiliary information (property)?.model string (optional) Unit model name or number (property)?.serial string (optional) Unit serial number (property)?.firmware string (optional) Unit firmware revision (property)?.software string (optional) Unit software revision (property)?.manufacturer string (optional) Unit manufacturer name","title":"Value"},{"location":"BluetoothRemoteControlAPI/#errors_4","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 1 ERROR_GENERAL Failed to retrieve information","title":"Errors"},{"location":"BluetoothRemoteControlAPI/#example_4","text":"","title":"Example"},{"location":"BluetoothRemoteControlAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.info\" }","title":"Get Request"},{"location":"BluetoothRemoteControlAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Acme 1500 Plus\", \"serial\": \"1234567890\", \"firmware\": \"1.0\", \"software\": \"1.0\", \"manufacturer\": \"Acme Inc.\" } }","title":"Get Response"},{"location":"BluetoothRemoteControlAPI/#batterylevel-property","text":"Provides access to the battery level. This property is read-only .","title":"batterylevel property"},{"location":"BluetoothRemoteControlAPI/#value_3","text":"Name Type Description (property) number Remote control unit's battery level in percentage","title":"Value"},{"location":"BluetoothRemoteControlAPI/#errors_5","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 1 ERROR_GENERAL Failed to retrieve battery level","title":"Errors"},{"location":"BluetoothRemoteControlAPI/#example_5","text":"","title":"Example"},{"location":"BluetoothRemoteControlAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.batterylevel\" }","title":"Get Request"},{"location":"BluetoothRemoteControlAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 50 }","title":"Get Response"},{"location":"BluetoothRemoteControlAPI/#voice-property","text":"Provides access to the enable or Disable the flow of Voice data fragments from the remote.","title":"voice property"},{"location":"BluetoothRemoteControlAPI/#value_4","text":"Name Type Description (property) boolean enable (true) or disable (false) flow of voice data","title":"Value"},{"location":"BluetoothRemoteControlAPI/#errors_6","text":"Code Message Description 1 ERROR_GENERAL Failed to set the voice flow","title":"Errors"},{"location":"BluetoothRemoteControlAPI/#example_6","text":"","title":"Example"},{"location":"BluetoothRemoteControlAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\" }","title":"Get Request"},{"location":"BluetoothRemoteControlAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"BluetoothRemoteControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\", \"params\": false }","title":"Set Request"},{"location":"BluetoothRemoteControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"BluetoothRemoteControlAPI/#audioprofile-property","text":"Provides access to the audio profile details. This property is read-only .","title":"audioprofile property"},{"location":"BluetoothRemoteControlAPI/#value_5","text":"Name Type Description (property) object Audio profile details (property).codec string Name of the audio codec ( pcm for uncompressed audio) (must be one of the following: PCM , ADPCM ) (property).channels number Number of audio channels (1: mono, 2: stereo, etc.) (property).rate number Sample rate (in Hz) (property).resolution number Sample resolution (in bits per sample)","title":"Value"},{"location":"BluetoothRemoteControlAPI/#errors_7","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 22 ERROR_UNKNOWN_KEY The supplied audio profile is unknown","title":"Errors"},{"location":"BluetoothRemoteControlAPI/#example_7","text":"","title":"Example"},{"location":"BluetoothRemoteControlAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.audioprofile\" }","title":"Get Request"},{"location":"BluetoothRemoteControlAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"ADPCM\", \"channels\": 1, \"rate\": 16000, \"resolution\": 16 } }","title":"Get Response"},{"location":"BluetoothRemoteControlAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface events: Event Description audiotransmission Notifies about audio data transmission audioframe Notifies about new audio data available batterylevelchange Notifies about battery level changes","title":"Notifications"},{"location":"BluetoothRemoteControlAPI/#audiotransmission-event","text":"Notifies about audio data transmission.","title":"audiotransmission event"},{"location":"BluetoothRemoteControlAPI/#description_1","text":"Register to this event to be notified about audio transmission status","title":"Description"},{"location":"BluetoothRemoteControlAPI/#parameters_2","text":"Name Type Description params object params?.profile string (optional) Type of audio profile, marking start of transmission; empty in case of end of transmission","title":"Parameters"},{"location":"BluetoothRemoteControlAPI/#example_8","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.audiotransmission\", \"params\": { \"profile\": \"pcm\" } }","title":"Example"},{"location":"BluetoothRemoteControlAPI/#audioframe-event","text":"Notifies about new audio data available.","title":"audioframe event"},{"location":"BluetoothRemoteControlAPI/#description_2","text":"Register to this event to be notified about audio data","title":"Description"},{"location":"BluetoothRemoteControlAPI/#parameters_3","text":"Name Type Description params object params?.seq number (optional) Sequence number of the audio frame within current audio transmission params.data string Base64 representation of the binary data of the audio frame; format of the data is specified by the audio profile denoted by the most recent audiotransmission notification","title":"Parameters"},{"location":"BluetoothRemoteControlAPI/#example_9","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.audioframe\", \"params\": { \"seq\": 1, \"data\": \"yKMHiYh6qJiDspB6S7ihlKOAbivApYEQDCgY0aECCQhpkAqZogP1ECk9GbHGEAkwG8Ax8wArgaAtEMjGQIoYCKKgGCuzBSA/iuWkKEwamLKzOKoCeR2hwQQZKqgBKKqELoGQwQ==\" } }","title":"Example"},{"location":"BluetoothRemoteControlAPI/#batterylevelchange-event","text":"Notifies about battery level changes.","title":"batterylevelchange event"},{"location":"BluetoothRemoteControlAPI/#description_3","text":"Register to this event to be notified about battery level drops","title":"Description"},{"location":"BluetoothRemoteControlAPI/#parameters_4","text":"Name Type Description params object params.level number Battery level (in percentage)","title":"Parameters"},{"location":"BluetoothRemoteControlAPI/#example_10","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.batterylevelchange\", \"params\": { \"level\": 50 } }","title":"Example"},{"location":"BluetoothRemoteControlPlugin/","text":"Bluetooth Remote Control Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: BluetoothRemoteControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the BluetoothRemoteControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Bluetooth Remote Control plugin allows configuring and enabling Bluetooth remote control units. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothRemoteControl ) classname string Class name: BluetoothRemoteControl locator string Library name: libWPEFrameworkBluetoothRemoteControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.controller string (optional) Controller configuration?.keymap string (optional) Keymap configuration?.keyingest boolean (optional) Enable keyingest configuration?.recorder enum (optional) Recorder Methods The following methods are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface methods: Method Description assign Assigns a bluetooth device as a remote control unit revoke Revokes the current remote control assignment assign method Assigns a bluetooth device as a remote control unit. Parameters Name Type Description params object params.address string Bluetooth address Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Bluetooth unavailable 22 ERROR_UNKNOWN_KEY Device unknown 1 ERROR_GENERAL Failed to assign the device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.assign\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } revoke method Revokes the current remote control assignment. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 5 ERROR_ILLEGAL_STATE Remote not assigned Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.revoke\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface properties: Property Description name RO Unit name address RO Bluetooth address of the unit info RO Unit auxiliary information batterylevel RO Battery level voice Enable or Disable the flow of Voice data fragments from the remote audioprofile RO Audio profile details name property Provides access to the unit name. This property is read-only . Value Name Type Description (property) string Name of the remote control unit Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.name\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Acme Bluetooth RCU\" } address property Provides access to the bluetooth address of the unit. This property is read-only . Value Name Type Description (property) string Bluetooth address Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.address\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"81:6F:B0:91:9B:FE\" } info property Provides access to the unit auxiliary information. This property is read-only . Value Name Type Description (property) object Unit auxiliary information (property)?.model string (optional) Unit model name or number (property)?.serial string (optional) Unit serial number (property)?.firmware string (optional) Unit firmware revision (property)?.software string (optional) Unit software revision (property)?.manufacturer string (optional) Unit manufacturer name Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 1 ERROR_GENERAL Failed to retrieve information Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.info\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Acme 1500 Plus\", \"serial\": \"1234567890\", \"firmware\": \"1.0\", \"software\": \"1.0\", \"manufacturer\": \"Acme Inc.\" } } batterylevel property Provides access to the battery level. This property is read-only . Value Name Type Description (property) number Remote control unit's battery level in percentage Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 1 ERROR_GENERAL Failed to retrieve battery level Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.batterylevel\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 50 } voice property Provides access to the enable or Disable the flow of Voice data fragments from the remote. Value Name Type Description (property) boolean enable (true) or disable (false) flow of voice data Errors Code Message Description 1 ERROR_GENERAL Failed to set the voice flow Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } audioprofile property Provides access to the audio profile details. This property is read-only . Value Name Type Description (property) object Audio profile details (property).codec string Name of the audio codec ( pcm for uncompressed audio) (must be one of the following: PCM , ADPCM ) (property).channels number Number of audio channels (1: mono, 2: stereo, etc.) (property).rate number Sample rate (in Hz) (property).resolution number Sample resolution (in bits per sample) Errors Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 22 ERROR_UNKNOWN_KEY The supplied audio profile is unknown Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.audioprofile\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"ADPCM\", \"channels\": 1, \"rate\": 16000, \"resolution\": 16 } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface events: Event Description audiotransmission Notifies about audio data transmission audioframe Notifies about new audio data available batterylevelchange Notifies about battery level changes audiotransmission event Notifies about audio data transmission. Description Register to this event to be notified about audio transmission status Parameters Name Type Description params object params?.profile string (optional) Type of audio profile, marking start of transmission; empty in case of end of transmission Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.audiotransmission\", \"params\": { \"profile\": \"pcm\" } } audioframe event Notifies about new audio data available. Description Register to this event to be notified about audio data Parameters Name Type Description params object params?.seq number (optional) Sequence number of the audio frame within current audio transmission params.data string Base64 representation of the binary data of the audio frame; format of the data is specified by the audio profile denoted by the most recent audiotransmission notification Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.audioframe\", \"params\": { \"seq\": 1, \"data\": \"yKMHiYh6qJiDspB6S7ihlKOAbivApYEQDCgY0aECCQhpkAqZogP1ECk9GbHGEAkwG8Ax8wArgaAtEMjGQIoYCKKgGCuzBSA/iuWkKEwamLKzOKoCeR2hwQQZKqgBKKqELoGQwQ==\" } } batterylevelchange event Notifies about battery level changes. Description Register to this event to be notified about battery level drops Parameters Name Type Description params object params.level number Battery level (in percentage) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.batterylevelchange\", \"params\": { \"level\": 50 } }","title":"BluetoothRemoteControlPlugin"},{"location":"BluetoothRemoteControlPlugin/#bluetooth-remote-control-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: BluetoothRemoteControl plugin for Thunder framework.","title":"Bluetooth Remote Control Plugin"},{"location":"BluetoothRemoteControlPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"BluetoothRemoteControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"BluetoothRemoteControlPlugin/#scope","text":"This document describes purpose and functionality of the BluetoothRemoteControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"BluetoothRemoteControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"BluetoothRemoteControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"BluetoothRemoteControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"BluetoothRemoteControlPlugin/#description","text":"The Bluetooth Remote Control plugin allows configuring and enabling Bluetooth remote control units. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"BluetoothRemoteControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothRemoteControl ) classname string Class name: BluetoothRemoteControl locator string Library name: libWPEFrameworkBluetoothRemoteControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.controller string (optional) Controller configuration?.keymap string (optional) Keymap configuration?.keyingest boolean (optional) Enable keyingest configuration?.recorder enum (optional) Recorder","title":"Configuration"},{"location":"BluetoothRemoteControlPlugin/#methods","text":"The following methods are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface methods: Method Description assign Assigns a bluetooth device as a remote control unit revoke Revokes the current remote control assignment","title":"Methods"},{"location":"BluetoothRemoteControlPlugin/#assign-method","text":"Assigns a bluetooth device as a remote control unit.","title":"assign method"},{"location":"BluetoothRemoteControlPlugin/#parameters","text":"Name Type Description params object params.address string Bluetooth address","title":"Parameters"},{"location":"BluetoothRemoteControlPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothRemoteControlPlugin/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Bluetooth unavailable 22 ERROR_UNKNOWN_KEY Device unknown 1 ERROR_GENERAL Failed to assign the device","title":"Errors"},{"location":"BluetoothRemoteControlPlugin/#example","text":"","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.assign\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"BluetoothRemoteControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothRemoteControlPlugin/#revoke-method","text":"Revokes the current remote control assignment.","title":"revoke method"},{"location":"BluetoothRemoteControlPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"BluetoothRemoteControlPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"BluetoothRemoteControlPlugin/#errors_1","text":"Code Message Description 5 ERROR_ILLEGAL_STATE Remote not assigned","title":"Errors"},{"location":"BluetoothRemoteControlPlugin/#example_1","text":"","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.revoke\" }","title":"Request"},{"location":"BluetoothRemoteControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BluetoothRemoteControlPlugin/#properties","text":"The following properties are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface properties: Property Description name RO Unit name address RO Bluetooth address of the unit info RO Unit auxiliary information batterylevel RO Battery level voice Enable or Disable the flow of Voice data fragments from the remote audioprofile RO Audio profile details","title":"Properties"},{"location":"BluetoothRemoteControlPlugin/#name-property","text":"Provides access to the unit name. This property is read-only .","title":"name property"},{"location":"BluetoothRemoteControlPlugin/#value","text":"Name Type Description (property) string Name of the remote control unit","title":"Value"},{"location":"BluetoothRemoteControlPlugin/#errors_2","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned","title":"Errors"},{"location":"BluetoothRemoteControlPlugin/#example_2","text":"","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.name\" }","title":"Get Request"},{"location":"BluetoothRemoteControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Acme Bluetooth RCU\" }","title":"Get Response"},{"location":"BluetoothRemoteControlPlugin/#address-property","text":"Provides access to the bluetooth address of the unit. This property is read-only .","title":"address property"},{"location":"BluetoothRemoteControlPlugin/#value_1","text":"Name Type Description (property) string Bluetooth address","title":"Value"},{"location":"BluetoothRemoteControlPlugin/#errors_3","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned","title":"Errors"},{"location":"BluetoothRemoteControlPlugin/#example_3","text":"","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.address\" }","title":"Get Request"},{"location":"BluetoothRemoteControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"81:6F:B0:91:9B:FE\" }","title":"Get Response"},{"location":"BluetoothRemoteControlPlugin/#info-property","text":"Provides access to the unit auxiliary information. This property is read-only .","title":"info property"},{"location":"BluetoothRemoteControlPlugin/#value_2","text":"Name Type Description (property) object Unit auxiliary information (property)?.model string (optional) Unit model name or number (property)?.serial string (optional) Unit serial number (property)?.firmware string (optional) Unit firmware revision (property)?.software string (optional) Unit software revision (property)?.manufacturer string (optional) Unit manufacturer name","title":"Value"},{"location":"BluetoothRemoteControlPlugin/#errors_4","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 1 ERROR_GENERAL Failed to retrieve information","title":"Errors"},{"location":"BluetoothRemoteControlPlugin/#example_4","text":"","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.info\" }","title":"Get Request"},{"location":"BluetoothRemoteControlPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Acme 1500 Plus\", \"serial\": \"1234567890\", \"firmware\": \"1.0\", \"software\": \"1.0\", \"manufacturer\": \"Acme Inc.\" } }","title":"Get Response"},{"location":"BluetoothRemoteControlPlugin/#batterylevel-property","text":"Provides access to the battery level. This property is read-only .","title":"batterylevel property"},{"location":"BluetoothRemoteControlPlugin/#value_3","text":"Name Type Description (property) number Remote control unit's battery level in percentage","title":"Value"},{"location":"BluetoothRemoteControlPlugin/#errors_5","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 1 ERROR_GENERAL Failed to retrieve battery level","title":"Errors"},{"location":"BluetoothRemoteControlPlugin/#example_5","text":"","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.batterylevel\" }","title":"Get Request"},{"location":"BluetoothRemoteControlPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 50 }","title":"Get Response"},{"location":"BluetoothRemoteControlPlugin/#voice-property","text":"Provides access to the enable or Disable the flow of Voice data fragments from the remote.","title":"voice property"},{"location":"BluetoothRemoteControlPlugin/#value_4","text":"Name Type Description (property) boolean enable (true) or disable (false) flow of voice data","title":"Value"},{"location":"BluetoothRemoteControlPlugin/#errors_6","text":"Code Message Description 1 ERROR_GENERAL Failed to set the voice flow","title":"Errors"},{"location":"BluetoothRemoteControlPlugin/#example_6","text":"","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\" }","title":"Get Request"},{"location":"BluetoothRemoteControlPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"BluetoothRemoteControlPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\", \"params\": false }","title":"Set Request"},{"location":"BluetoothRemoteControlPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"BluetoothRemoteControlPlugin/#audioprofile-property","text":"Provides access to the audio profile details. This property is read-only .","title":"audioprofile property"},{"location":"BluetoothRemoteControlPlugin/#value_5","text":"Name Type Description (property) object Audio profile details (property).codec string Name of the audio codec ( pcm for uncompressed audio) (must be one of the following: PCM , ADPCM ) (property).channels number Number of audio channels (1: mono, 2: stereo, etc.) (property).rate number Sample rate (in Hz) (property).resolution number Sample resolution (in bits per sample)","title":"Value"},{"location":"BluetoothRemoteControlPlugin/#errors_7","text":"Code Message Description 5 ERROR_ILLEGAL_STATE No remote has been assigned 22 ERROR_UNKNOWN_KEY The supplied audio profile is unknown","title":"Errors"},{"location":"BluetoothRemoteControlPlugin/#example_7","text":"","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.audioprofile\" }","title":"Get Request"},{"location":"BluetoothRemoteControlPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"ADPCM\", \"channels\": 1, \"rate\": 16000, \"resolution\": 16 } }","title":"Get Response"},{"location":"BluetoothRemoteControlPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface events: Event Description audiotransmission Notifies about audio data transmission audioframe Notifies about new audio data available batterylevelchange Notifies about battery level changes","title":"Notifications"},{"location":"BluetoothRemoteControlPlugin/#audiotransmission-event","text":"Notifies about audio data transmission.","title":"audiotransmission event"},{"location":"BluetoothRemoteControlPlugin/#description_1","text":"Register to this event to be notified about audio transmission status","title":"Description"},{"location":"BluetoothRemoteControlPlugin/#parameters_2","text":"Name Type Description params object params?.profile string (optional) Type of audio profile, marking start of transmission; empty in case of end of transmission","title":"Parameters"},{"location":"BluetoothRemoteControlPlugin/#example_8","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.audiotransmission\", \"params\": { \"profile\": \"pcm\" } }","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#audioframe-event","text":"Notifies about new audio data available.","title":"audioframe event"},{"location":"BluetoothRemoteControlPlugin/#description_2","text":"Register to this event to be notified about audio data","title":"Description"},{"location":"BluetoothRemoteControlPlugin/#parameters_3","text":"Name Type Description params object params?.seq number (optional) Sequence number of the audio frame within current audio transmission params.data string Base64 representation of the binary data of the audio frame; format of the data is specified by the audio profile denoted by the most recent audiotransmission notification","title":"Parameters"},{"location":"BluetoothRemoteControlPlugin/#example_9","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.audioframe\", \"params\": { \"seq\": 1, \"data\": \"yKMHiYh6qJiDspB6S7ihlKOAbivApYEQDCgY0aECCQhpkAqZogP1ECk9GbHGEAkwG8Ax8wArgaAtEMjGQIoYCKKgGCuzBSA/iuWkKEwamLKzOKoCeR2hwQQZKqgBKKqELoGQwQ==\" } }","title":"Example"},{"location":"BluetoothRemoteControlPlugin/#batterylevelchange-event","text":"Notifies about battery level changes.","title":"batterylevelchange event"},{"location":"BluetoothRemoteControlPlugin/#description_3","text":"Register to this event to be notified about battery level drops","title":"Description"},{"location":"BluetoothRemoteControlPlugin/#parameters_4","text":"Name Type Description params object params.level number Battery level (in percentage)","title":"Parameters"},{"location":"BluetoothRemoteControlPlugin/#example_10","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.batterylevelchange\", \"params\": { \"level\": 50 } }","title":"Example"},{"location":"BrowserAPI/","text":"Browser API Version: 1.0 Status: :black_circle::white_circle::white_circle: Browser interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Browser interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Browser JSON-RPC interface. Methods The following methods are provided by the Browser interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Browser interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Errors Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden ) Errors Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Name Type Description (property) number Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Browser interface: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window urlchange event Signals a URL change in the browser. Parameters Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange event Signals a visibility change of the browser. Parameters Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } } pageclosure event Notifies that the web page requests to close its window. Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.pageclosure\" }","title":"BrowserAPI"},{"location":"BrowserAPI/#browser-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Browser interface for Thunder framework.","title":"Browser API"},{"location":"BrowserAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"BrowserAPI/#introduction","text":"","title":"Introduction"},{"location":"BrowserAPI/#scope","text":"This document describes purpose and functionality of the Browser interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"BrowserAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"BrowserAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"BrowserAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"BrowserAPI/#description","text":"Browser JSON-RPC interface.","title":"Description"},{"location":"BrowserAPI/#methods","text":"The following methods are provided by the Browser interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"BrowserAPI/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"BrowserAPI/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"BrowserAPI/#parameters","text":"Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"BrowserAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"BrowserAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"BrowserAPI/#example","text":"","title":"Example"},{"location":"BrowserAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"BrowserAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"BrowserAPI/#properties","text":"The following properties are provided by the Browser interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering","title":"Properties"},{"location":"BrowserAPI/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"BrowserAPI/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"BrowserAPI/#errors_1","text":"Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"BrowserAPI/#example_1","text":"","title":"Example"},{"location":"BrowserAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.url\" }","title":"Get Request"},{"location":"BrowserAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"BrowserAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"BrowserAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"BrowserAPI/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"BrowserAPI/#value_1","text":"Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden )","title":"Value"},{"location":"BrowserAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"BrowserAPI/#example_2","text":"","title":"Example"},{"location":"BrowserAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.visibility\" }","title":"Get Request"},{"location":"BrowserAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"BrowserAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"BrowserAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"BrowserAPI/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"BrowserAPI/#value_2","text":"Name Type Description (property) number Current number of frames per second the browser is rendering","title":"Value"},{"location":"BrowserAPI/#example_3","text":"","title":"Example"},{"location":"BrowserAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.fps\" }","title":"Get Request"},{"location":"BrowserAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"BrowserAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Browser interface: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window","title":"Notifications"},{"location":"BrowserAPI/#urlchange-event","text":"Signals a URL change in the browser.","title":"urlchange event"},{"location":"BrowserAPI/#parameters_1","text":"Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false)","title":"Parameters"},{"location":"BrowserAPI/#example_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Example"},{"location":"BrowserAPI/#visibilitychange-event","text":"Signals a visibility change of the browser.","title":"visibilitychange event"},{"location":"BrowserAPI/#parameters_2","text":"Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"BrowserAPI/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Example"},{"location":"BrowserAPI/#pageclosure-event","text":"Notifies that the web page requests to close its window.","title":"pageclosure event"},{"location":"BrowserAPI/#parameters_3","text":"This event carries no parameters.","title":"Parameters"},{"location":"BrowserAPI/#example_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.pageclosure\" }","title":"Example"},{"location":"BrowserResourcesAPI/","text":"BrowserResources API Version: 1.0 Status: :black_circle::white_circle::white_circle: BrowserResources interface for Thunder framework. Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the BrowserResources interface. It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description BrowserResources JSON-RPC interface. Properties The following properties are provided by the BrowserResources interface: BrowserResources interface properties: Property Description userscripts User scripts used by the browser userstylesheets User style sheets used by the browser userscripts property Provides access to the user scripts used by the browser. Value Name Type Description uris array JSON array containing URIs pointing to user scripts, supported protocols: file:// uris[#] string Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userscripts\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userscripts\", \"params\": [ \"...\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } userstylesheets property Provides access to the user style sheets used by the browser. Value Name Type Description uris array JSON array containing URIs pointing to user style sheets, supported protocols: file:// uris[#] string Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userstylesheets\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userstylesheets\", \"params\": [ \"...\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"BrowserResourcesAPI"},{"location":"BrowserResourcesAPI/#browserresources-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: BrowserResources interface for Thunder framework.","title":"BrowserResources API"},{"location":"BrowserResourcesAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"BrowserResourcesAPI/#introduction","text":"","title":"Introduction"},{"location":"BrowserResourcesAPI/#scope","text":"This document describes purpose and functionality of the BrowserResources interface. It includes detailed specification about its properties provided.","title":"Scope"},{"location":"BrowserResourcesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"BrowserResourcesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"BrowserResourcesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"BrowserResourcesAPI/#description","text":"BrowserResources JSON-RPC interface.","title":"Description"},{"location":"BrowserResourcesAPI/#properties","text":"The following properties are provided by the BrowserResources interface: BrowserResources interface properties: Property Description userscripts User scripts used by the browser userstylesheets User style sheets used by the browser","title":"Properties"},{"location":"BrowserResourcesAPI/#userscripts-property","text":"Provides access to the user scripts used by the browser.","title":"userscripts property"},{"location":"BrowserResourcesAPI/#value","text":"Name Type Description uris array JSON array containing URIs pointing to user scripts, supported protocols: file:// uris[#] string","title":"Value"},{"location":"BrowserResourcesAPI/#example","text":"","title":"Example"},{"location":"BrowserResourcesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userscripts\" }","title":"Get Request"},{"location":"BrowserResourcesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"BrowserResourcesAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userscripts\", \"params\": [ \"...\" ] }","title":"Set Request"},{"location":"BrowserResourcesAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"BrowserResourcesAPI/#userstylesheets-property","text":"Provides access to the user style sheets used by the browser.","title":"userstylesheets property"},{"location":"BrowserResourcesAPI/#value_1","text":"Name Type Description uris array JSON array containing URIs pointing to user style sheets, supported protocols: file:// uris[#] string","title":"Value"},{"location":"BrowserResourcesAPI/#example_1","text":"","title":"Example"},{"location":"BrowserResourcesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userstylesheets\" }","title":"Get Request"},{"location":"BrowserResourcesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"BrowserResourcesAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userstylesheets\", \"params\": [ \"...\" ] }","title":"Set Request"},{"location":"BrowserResourcesAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"BrowserSecurityAPI/","text":"BrowserSecurity API Version: 1.0 Status: :black_circle::white_circle::white_circle: BrowserSecurity interface for Thunder framework. Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the BrowserSecurity interface. It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description BrowserSecurity JSON-RPC interface. Properties The following properties are provided by the BrowserSecurity interface: BrowserSecurity interface properties: Property Description securityprofile Security profile for secure connections mixedcontentpolicy Mixed content policy securityprofile property Provides access to the security profile for secure connections. Value Name Type Description profile string Security profile for secure connections Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.securityprofile\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"compatible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.securityprofile\", \"params\": \"compatible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } mixedcontentpolicy property Provides access to the mixed content policy. Value Name Type Description policy string Mixed content policy type (must be one of the following: allowed , blocked ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.mixedcontentpolicy\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"allowed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.mixedcontentpolicy\", \"params\": \"allowed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"BrowserSecurityAPI"},{"location":"BrowserSecurityAPI/#browsersecurity-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: BrowserSecurity interface for Thunder framework.","title":"BrowserSecurity API"},{"location":"BrowserSecurityAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"BrowserSecurityAPI/#introduction","text":"","title":"Introduction"},{"location":"BrowserSecurityAPI/#scope","text":"This document describes purpose and functionality of the BrowserSecurity interface. It includes detailed specification about its properties provided.","title":"Scope"},{"location":"BrowserSecurityAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"BrowserSecurityAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"BrowserSecurityAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"BrowserSecurityAPI/#description","text":"BrowserSecurity JSON-RPC interface.","title":"Description"},{"location":"BrowserSecurityAPI/#properties","text":"The following properties are provided by the BrowserSecurity interface: BrowserSecurity interface properties: Property Description securityprofile Security profile for secure connections mixedcontentpolicy Mixed content policy","title":"Properties"},{"location":"BrowserSecurityAPI/#securityprofile-property","text":"Provides access to the security profile for secure connections.","title":"securityprofile property"},{"location":"BrowserSecurityAPI/#value","text":"Name Type Description profile string Security profile for secure connections","title":"Value"},{"location":"BrowserSecurityAPI/#example","text":"","title":"Example"},{"location":"BrowserSecurityAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.securityprofile\" }","title":"Get Request"},{"location":"BrowserSecurityAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"compatible\" }","title":"Get Response"},{"location":"BrowserSecurityAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.securityprofile\", \"params\": \"compatible\" }","title":"Set Request"},{"location":"BrowserSecurityAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"BrowserSecurityAPI/#mixedcontentpolicy-property","text":"Provides access to the mixed content policy.","title":"mixedcontentpolicy property"},{"location":"BrowserSecurityAPI/#value_1","text":"Name Type Description policy string Mixed content policy type (must be one of the following: allowed , blocked )","title":"Value"},{"location":"BrowserSecurityAPI/#example_1","text":"","title":"Example"},{"location":"BrowserSecurityAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.mixedcontentpolicy\" }","title":"Get Request"},{"location":"BrowserSecurityAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"allowed\" }","title":"Get Response"},{"location":"BrowserSecurityAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.mixedcontentpolicy\", \"params\": \"allowed\" }","title":"Set Request"},{"location":"BrowserSecurityAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"ButlerAPI/","text":"Butler API Version: 1.0 Status: :black_circle::white_circle::white_circle: Butler interface for Thunder framework. Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the Butler interface. It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Butler JSON-RPC interface. Properties The following properties are provided by the Butler interface: Butler interface properties: Property Description orphans RO List of devices not attached to any nodes device RO Device specific information value Set or Get the value of the device group Get the names part of a group link link an external ID to a node move move a node to another location branch create a new group delete destroy an existing, empty group orphans property Provides access to the list of devices not attached to any nodes. This property is read-only . Value Name Type Description (property) array List of devices not attached to any nodes (property)[#] object (property)[#].id integer Identifier of the device (property)[#].name string Name given to this device (property)[#]?.callsign string (optional) The callsign that owns this external (property)[#].basic string Basic description of the device (measure or control) (must be one of the following: control , measure ) (property)[#].specific string More eleborated description of the device (must be one of the following: general , electricity , water , gas , air , smoke , carbonMonoxide , carbonDioxide , temperature , accessControl , burglar , powerManagement , system , emergency , clock ) (property)[#].dimension string What is the dimension of the value that is returned by the device (must be one of the following: logic , percentage , kwh , kvah , pulses , degrees , units ) (property)[#].minimum integer Minimum value that the device can reach (property)[#].decimals integer Number of digits that should be considered fractional (property)[#].maximum integer Maximum value that the device can reach (property)[#]?.value number (optional) The module index argument shall be passed as the index to the property, e.g. Butler.1.orphans@[ {}, {}, {} ] . 0 = any module, >0 orphans from the requested module. Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.orphans@[ {}, {}, {} ]\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": 123456, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"minimum\": -80, \"decimals\": 0, \"maximum\": 200, \"value\": 1 } ] } device property Provides access to the device specific information. This property is read-only . Value Name Type Description (property) object Device specific information (property).id integer Identifier of the device (property).name string Name given to this device (property)?.callsign string (optional) The callsign that owns this external (property).basic string Basic description of the device (measure or control) (must be one of the following: control , measure ) (property).specific string More eleborated description of the device (must be one of the following: general , electricity , water , gas , air , smoke , carbonMonoxide , carbonDioxide , temperature , accessControl , burglar , powerManagement , system , emergency , clock ) (property).dimension string What is the dimension of the value that is returned by the device (must be one of the following: logic , percentage , kwh , kvah , pulses , degrees , units ) (property).minimum integer Minimum value that the device can reach (property).decimals integer Number of digits that should be considered fractional (property).maximum integer Maximum value that the device can reach (property)?.value number (optional) The device name argument shall be passed as the index to the property, e.g. Butler.1.device@The name of the device or the Id of the device . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.device@The name of the device or the Id of the device\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": 123456, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"minimum\": -80, \"decimals\": 0, \"maximum\": 200, \"value\": 1 } } value property Provides access to the set or Get the value of the device. Value Name Type Description (property) number Set or Get the value of the device The device name argument shall be passed as the index to the property, e.g. Butler.1.value@The name of the device (name) or the numerical identifier of the device . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.value@The name of the device (name) or the numerical identifier of the device\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.value@The name of the device (name) or the numerical identifier of the device\", \"params\": 1 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } group property Provides access to the get the names part of a group. Value Name Type Description (property) object Get the names part of a group (property)?.parent integer (optional) Identifier of the group to wich this group belongs (property)?.id integer (optional) Identifier of this group (property)?.base string (optional) Path identifier leading up to this group (property)?.members array (optional) (property)?.members[#] object (optional) (property)?.members[#]?.name string (optional) Name of a room or sensor (property)?.members[#]?.id integer (optional) Identifier of this memeber (property)?.members[#]?.type string (optional) Type ot this member (property)?.members[#]?.callsign string (optional) The callsign that owns this external (property)?.members[#]?.basic string (optional) Basic description of the device (measure or control) (must be one of the following: control , measure ) (property)?.members[#]?.value number (optional) Set or Get the value of the device (property)?.members[#]?.children integer (optional) number of children, this element has","title":"ButlerAPI"},{"location":"ButlerAPI/#butler-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Butler interface for Thunder framework.","title":"Butler API"},{"location":"ButlerAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"ButlerAPI/#introduction","text":"","title":"Introduction"},{"location":"ButlerAPI/#scope","text":"This document describes purpose and functionality of the Butler interface. It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"ButlerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"ButlerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"ButlerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"ButlerAPI/#description","text":"Butler JSON-RPC interface.","title":"Description"},{"location":"ButlerAPI/#properties","text":"The following properties are provided by the Butler interface: Butler interface properties: Property Description orphans RO List of devices not attached to any nodes device RO Device specific information value Set or Get the value of the device group Get the names part of a group link link an external ID to a node move move a node to another location branch create a new group delete destroy an existing, empty group","title":"Properties"},{"location":"ButlerAPI/#orphans-property","text":"Provides access to the list of devices not attached to any nodes. This property is read-only .","title":"orphans property"},{"location":"ButlerAPI/#value","text":"Name Type Description (property) array List of devices not attached to any nodes (property)[#] object (property)[#].id integer Identifier of the device (property)[#].name string Name given to this device (property)[#]?.callsign string (optional) The callsign that owns this external (property)[#].basic string Basic description of the device (measure or control) (must be one of the following: control , measure ) (property)[#].specific string More eleborated description of the device (must be one of the following: general , electricity , water , gas , air , smoke , carbonMonoxide , carbonDioxide , temperature , accessControl , burglar , powerManagement , system , emergency , clock ) (property)[#].dimension string What is the dimension of the value that is returned by the device (must be one of the following: logic , percentage , kwh , kvah , pulses , degrees , units ) (property)[#].minimum integer Minimum value that the device can reach (property)[#].decimals integer Number of digits that should be considered fractional (property)[#].maximum integer Maximum value that the device can reach (property)[#]?.value number (optional) The module index argument shall be passed as the index to the property, e.g. Butler.1.orphans@[ {}, {}, {} ] . 0 = any module, >0 orphans from the requested module.","title":"Value"},{"location":"ButlerAPI/#example","text":"","title":"Example"},{"location":"ButlerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.orphans@[ {}, {}, {} ]\" }","title":"Get Request"},{"location":"ButlerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": 123456, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"minimum\": -80, \"decimals\": 0, \"maximum\": 200, \"value\": 1 } ] }","title":"Get Response"},{"location":"ButlerAPI/#device-property","text":"Provides access to the device specific information. This property is read-only .","title":"device property"},{"location":"ButlerAPI/#value_1","text":"Name Type Description (property) object Device specific information (property).id integer Identifier of the device (property).name string Name given to this device (property)?.callsign string (optional) The callsign that owns this external (property).basic string Basic description of the device (measure or control) (must be one of the following: control , measure ) (property).specific string More eleborated description of the device (must be one of the following: general , electricity , water , gas , air , smoke , carbonMonoxide , carbonDioxide , temperature , accessControl , burglar , powerManagement , system , emergency , clock ) (property).dimension string What is the dimension of the value that is returned by the device (must be one of the following: logic , percentage , kwh , kvah , pulses , degrees , units ) (property).minimum integer Minimum value that the device can reach (property).decimals integer Number of digits that should be considered fractional (property).maximum integer Maximum value that the device can reach (property)?.value number (optional) The device name argument shall be passed as the index to the property, e.g. Butler.1.device@The name of the device or the Id of the device .","title":"Value"},{"location":"ButlerAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"ButlerAPI/#example_1","text":"","title":"Example"},{"location":"ButlerAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.device@The name of the device or the Id of the device\" }","title":"Get Request"},{"location":"ButlerAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": 123456, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"minimum\": -80, \"decimals\": 0, \"maximum\": 200, \"value\": 1 } }","title":"Get Response"},{"location":"ButlerAPI/#value-property","text":"Provides access to the set or Get the value of the device.","title":"value property"},{"location":"ButlerAPI/#value_2","text":"Name Type Description (property) number Set or Get the value of the device The device name argument shall be passed as the index to the property, e.g. Butler.1.value@The name of the device (name) or the numerical identifier of the device .","title":"Value"},{"location":"ButlerAPI/#errors_1","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"ButlerAPI/#example_2","text":"","title":"Example"},{"location":"ButlerAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.value@The name of the device (name) or the numerical identifier of the device\" }","title":"Get Request"},{"location":"ButlerAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 }","title":"Get Response"},{"location":"ButlerAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.value@The name of the device (name) or the numerical identifier of the device\", \"params\": 1 }","title":"Set Request"},{"location":"ButlerAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"ButlerAPI/#group-property","text":"Provides access to the get the names part of a group.","title":"group property"},{"location":"ButlerAPI/#value_3","text":"Name Type Description (property) object Get the names part of a group (property)?.parent integer (optional) Identifier of the group to wich this group belongs (property)?.id integer (optional) Identifier of this group (property)?.base string (optional) Path identifier leading up to this group (property)?.members array (optional) (property)?.members[#] object (optional) (property)?.members[#]?.name string (optional) Name of a room or sensor (property)?.members[#]?.id integer (optional) Identifier of this memeber (property)?.members[#]?.type string (optional) Type ot this member (property)?.members[#]?.callsign string (optional) The callsign that owns this external (property)?.members[#]?.basic string (optional) Basic description of the device (measure or control) (must be one of the following: control , measure ) (property)?.members[#]?.value number (optional) Set or Get the value of the device (property)?.members[#]?.children integer (optional) number of children, this element has","title":"Value"},{"location":"CobaltAPI/","text":"Cobalt API Version: 1.0 Status: :black_circle::white_circle::white_circle: Cobalt interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Cobalt interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Cobalt JSON-RPC interface. Methods The following methods are provided by the Cobalt interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Cobalt interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Errors Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden ) Errors Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Name Type Description (property) number Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Cobalt interface: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Event Description statechange Signals a state change of the service urlchange event Signals a URL change in the browser. Parameters Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange event Signals a visibility change of the browser. Parameters Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } } statechange event Signals a state change of the service. Parameters Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"CobaltAPI"},{"location":"CobaltAPI/#cobalt-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Cobalt interface for Thunder framework.","title":"Cobalt API"},{"location":"CobaltAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"CobaltAPI/#introduction","text":"","title":"Introduction"},{"location":"CobaltAPI/#scope","text":"This document describes purpose and functionality of the Cobalt interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"CobaltAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"CobaltAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"CobaltAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"CobaltAPI/#description","text":"Cobalt JSON-RPC interface.","title":"Description"},{"location":"CobaltAPI/#methods","text":"The following methods are provided by the Cobalt interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"CobaltAPI/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"CobaltAPI/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"CobaltAPI/#parameters","text":"Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"CobaltAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"CobaltAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"CobaltAPI/#example","text":"","title":"Example"},{"location":"CobaltAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"CobaltAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"CobaltAPI/#properties","text":"The following properties are provided by the Cobalt interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"CobaltAPI/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"CobaltAPI/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"CobaltAPI/#errors_1","text":"Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"CobaltAPI/#example_1","text":"","title":"Example"},{"location":"CobaltAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\" }","title":"Get Request"},{"location":"CobaltAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"CobaltAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"CobaltAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CobaltAPI/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"CobaltAPI/#value_1","text":"Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden )","title":"Value"},{"location":"CobaltAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"CobaltAPI/#example_2","text":"","title":"Example"},{"location":"CobaltAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\" }","title":"Get Request"},{"location":"CobaltAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"CobaltAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"CobaltAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CobaltAPI/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"CobaltAPI/#value_2","text":"Name Type Description (property) number Current number of frames per second the browser is rendering","title":"Value"},{"location":"CobaltAPI/#example_3","text":"","title":"Example"},{"location":"CobaltAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.fps\" }","title":"Get Request"},{"location":"CobaltAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"CobaltAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"CobaltAPI/#value_3","text":"Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended )","title":"Value"},{"location":"CobaltAPI/#example_4","text":"","title":"Example"},{"location":"CobaltAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\" }","title":"Get Request"},{"location":"CobaltAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"CobaltAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"CobaltAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CobaltAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Cobalt interface: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Event Description statechange Signals a state change of the service","title":"Notifications"},{"location":"CobaltAPI/#urlchange-event","text":"Signals a URL change in the browser.","title":"urlchange event"},{"location":"CobaltAPI/#parameters_1","text":"Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false)","title":"Parameters"},{"location":"CobaltAPI/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Example"},{"location":"CobaltAPI/#visibilitychange-event","text":"Signals a visibility change of the browser.","title":"visibilitychange event"},{"location":"CobaltAPI/#parameters_2","text":"Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"CobaltAPI/#example_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Example"},{"location":"CobaltAPI/#statechange-event","text":"Signals a state change of the service.","title":"statechange event"},{"location":"CobaltAPI/#parameters_3","text":"Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"CobaltAPI/#example_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"Example"},{"location":"CobaltPlugin/","text":"Cobalt Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: Cobalt plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Cobalt plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Cobalt plugin provides web browsing functionality based on the Cobalt engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Cobalt ) classname string Class name: Cobalt locator string Library name: libWPEFrameworkCobalt.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.url string (optional) The URL that is loaded upon starting the browser configuration?.width number (optional) The width in pixels of the surface to be used by the application configuration?.height number (optional) The height in pixels of the surface to be used by the application configuration?.repeatstart number (optional) The number of milliseconds a key should be pressed to start reapeating (set max to adhere to Thunder) configuration?.repeatinterval number (optional) The number of milliseconds the repeated key is send after it started repeating (set max to adhere to Thunder) configuration?.clientidentifier string (optional) An identifier, used during the surface creation as additional information configuration?.operatorname string (optional) The name of the operator that owns the infrastructure on which this device is running configuration?.language string (optional) The language to be used to for user interaction configuration?.connection string (optional) The type of connection that is used for internet connectivity (must be one of the following: cable , wireless ) configuration?.playbackrates boolean (optional) If enabled, Cobalt supports different rates, otherwise, it supports only 0 and 1 (default: true) Methods The following methods are provided by the Cobalt plugin: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Cobalt plugin: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Errors Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden ) Errors Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Name Type Description (property) number Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Cobalt plugin: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Event Description statechange Signals a state change of the service urlchange event Signals a URL change in the browser. Parameters Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange event Signals a visibility change of the browser. Parameters Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } } statechange event Signals a state change of the service. Parameters Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"CobaltPlugin"},{"location":"CobaltPlugin/#cobalt-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Cobalt plugin for Thunder framework.","title":"Cobalt Plugin"},{"location":"CobaltPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"CobaltPlugin/#introduction","text":"","title":"Introduction"},{"location":"CobaltPlugin/#scope","text":"This document describes purpose and functionality of the Cobalt plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"CobaltPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"CobaltPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"CobaltPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"CobaltPlugin/#description","text":"The Cobalt plugin provides web browsing functionality based on the Cobalt engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"CobaltPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Cobalt ) classname string Class name: Cobalt locator string Library name: libWPEFrameworkCobalt.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.url string (optional) The URL that is loaded upon starting the browser configuration?.width number (optional) The width in pixels of the surface to be used by the application configuration?.height number (optional) The height in pixels of the surface to be used by the application configuration?.repeatstart number (optional) The number of milliseconds a key should be pressed to start reapeating (set max to adhere to Thunder) configuration?.repeatinterval number (optional) The number of milliseconds the repeated key is send after it started repeating (set max to adhere to Thunder) configuration?.clientidentifier string (optional) An identifier, used during the surface creation as additional information configuration?.operatorname string (optional) The name of the operator that owns the infrastructure on which this device is running configuration?.language string (optional) The language to be used to for user interaction configuration?.connection string (optional) The type of connection that is used for internet connectivity (must be one of the following: cable , wireless ) configuration?.playbackrates boolean (optional) If enabled, Cobalt supports different rates, otherwise, it supports only 0 and 1 (default: true)","title":"Configuration"},{"location":"CobaltPlugin/#methods","text":"The following methods are provided by the Cobalt plugin: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"CobaltPlugin/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"CobaltPlugin/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"CobaltPlugin/#parameters","text":"Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"CobaltPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"CobaltPlugin/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"CobaltPlugin/#example","text":"","title":"Example"},{"location":"CobaltPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"CobaltPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"CobaltPlugin/#properties","text":"The following properties are provided by the Cobalt plugin: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"CobaltPlugin/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"CobaltPlugin/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"CobaltPlugin/#errors_1","text":"Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"CobaltPlugin/#example_1","text":"","title":"Example"},{"location":"CobaltPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\" }","title":"Get Request"},{"location":"CobaltPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"CobaltPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"CobaltPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CobaltPlugin/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"CobaltPlugin/#value_1","text":"Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden )","title":"Value"},{"location":"CobaltPlugin/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"CobaltPlugin/#example_2","text":"","title":"Example"},{"location":"CobaltPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\" }","title":"Get Request"},{"location":"CobaltPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"CobaltPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"CobaltPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CobaltPlugin/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"CobaltPlugin/#value_2","text":"Name Type Description (property) number Current number of frames per second the browser is rendering","title":"Value"},{"location":"CobaltPlugin/#example_3","text":"","title":"Example"},{"location":"CobaltPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.fps\" }","title":"Get Request"},{"location":"CobaltPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"CobaltPlugin/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"CobaltPlugin/#value_3","text":"Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended )","title":"Value"},{"location":"CobaltPlugin/#example_4","text":"","title":"Example"},{"location":"CobaltPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\" }","title":"Get Request"},{"location":"CobaltPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"CobaltPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"CobaltPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CobaltPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Cobalt plugin: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Event Description statechange Signals a state change of the service","title":"Notifications"},{"location":"CobaltPlugin/#urlchange-event","text":"Signals a URL change in the browser.","title":"urlchange event"},{"location":"CobaltPlugin/#parameters_1","text":"Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false)","title":"Parameters"},{"location":"CobaltPlugin/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Example"},{"location":"CobaltPlugin/#visibilitychange-event","text":"Signals a visibility change of the browser.","title":"visibilitychange event"},{"location":"CobaltPlugin/#parameters_2","text":"Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"CobaltPlugin/#example_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Example"},{"location":"CobaltPlugin/#statechange-event","text":"Signals a state change of the service.","title":"statechange event"},{"location":"CobaltPlugin/#parameters_3","text":"Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"CobaltPlugin/#example_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"Example"},{"location":"CommanderPlugin/","text":"Commander Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: Commander plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the Commander plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Commander plugin provides web browsing functionality based on the Commander engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Commander ) classname string Class name: Commander locator string Library name: libWPEFrameworkCommander.so autostart boolean Determines if the plugin shall be started automatically along with the framework sequencers array (optional) List of sequencers sequencers[#] string (optional)","title":"CommanderPlugin"},{"location":"CommanderPlugin/#commander-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Commander plugin for Thunder framework.","title":"Commander Plugin"},{"location":"CommanderPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"CommanderPlugin/#introduction","text":"","title":"Introduction"},{"location":"CommanderPlugin/#scope","text":"This document describes purpose and functionality of the Commander plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"CommanderPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"CommanderPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"CommanderPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"CommanderPlugin/#description","text":"The Commander plugin provides web browsing functionality based on the Commander engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"CommanderPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Commander ) classname string Class name: Commander locator string Library name: libWPEFrameworkCommander.so autostart boolean Determines if the plugin shall be started automatically along with the framework sequencers array (optional) List of sequencers sequencers[#] string (optional)","title":"Configuration"},{"location":"CompositorAPI/","text":"Compositor API Version: 1.0 Status: :black_circle::white_circle::white_circle: Compositor interface for Thunder framework. Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the Compositor interface. It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Compositor JSON-RPC interface. Methods The following methods are provided by the Compositor interface: Compositor interface methods: Method Description putontop Puts client surface on top in z-order putbelow Puts client surface below another surface select Directs the input to the given client, disabling all the others putontop method Puts client surface on top in z-order. Description Use this method to get a client's surface to the top position. Parameters Name Type Description params object params.client string Client name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putontop\", \"params\": { \"client\": \"Netflix\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } putbelow method Puts client surface below another surface. Description Use this method to reorder client surfaces in the z-order list. Parameters Name Type Description params object params.client string Client name to change z-order position params.relative string Client to put the other surface below Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Client(s) not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putbelow\", \"params\": { \"client\": \"Netflix\", \"relative\": \"WebKitBrowser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } select method Directs the input to the given client, disabling all the others. Description Use this method to direct all inputs to this client. The client that is receiving the inputs prior to this call will nolonger receive it anymore after this call. Parameters Name Type Description params object params.client string Client name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.select\", \"params\": { \"client\": \"Netflix\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Compositor interface: Compositor interface properties: Property Description resolution Screen resolution zorder RO List of compositor clients sorted by z-order brightness Brightness of SDR graphics in HDR display geometry Client surface geometry visiblity WO Client surface visibility opacity WO Client surface opacity resolution property Provides access to the screen resolution. Description Use this property to set or retrieve the current resolution of the screen. Value Name Type Description (property) string Screen resolution (must be one of the following: unknown , 480i , 480p , 720p50 , 720p60 , 1080p24 , 1080i50 , 1080p50 , 1080p60 , 2160p50 , 2160p60 ) Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown resolution 2 ERROR_UNAVAILABLE Set resolution is not supported or failed 1 ERROR_GENERAL Failed to set resolution Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1080p24\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\", \"params\": \"1080p24\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } zorder property Provides access to the list of compositor clients sorted by z-order. This property is read-only . Description Use this property to retrieve the list of all clients in z-order. Each client has an z-order-value that determines its position with respect to the screen. The ordering is that the top position is closest to the screen, the next z-order-value first behind the top, and so on. Value Name Type Description (property) array List of compositor clients sorted by z-order (property)[#] string Client name Errors Code Message Description 1 ERROR_GENERAL Failed to get z-order Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.zorder\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Netflix\" ] } brightness property Provides access to the brightness of SDR graphics in HDR display. Description Use this property to set or retrieve the brightness of the SDR graphics. Value Name Type Description (property) string Brightness of SDR graphics in HDR display (must be one of the following: default , match_video , max ) Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown brightness 2 ERROR_UNAVAILABLE Set brightness is not supported or failed 1 ERROR_GENERAL Failed to set brightness Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"match_video\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\", \"params\": \"match_video\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } geometry property Provides access to the client surface geometry. Description Use this property to update or retrieve the geometry of a client's surface. Value Name Type Description (property) object Client surface geometry (property).x number Horizontal coordinate of the surface (property).y number Vertical coordinate of the surface (property).width number Surface width (property).height number Surface height The client argument shall be passed as the index to the property, e.g. Compositor.1.geometry@Netflix . Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visiblity property Provides access to the client surface visibility. This property is write-only . Description Use this property to set the client's surface visibility. Value Name Type Description (property) string Client surface visibility (must be one of the following: visible , hidden ) The client argument shall be passed as the index to the property, e.g. Compositor.1.visiblity@Netflix . Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.visiblity@Netflix\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } opacity property Provides access to the client surface opacity. This property is write-only . Description Use this property to set the client's surface opacity level. Value Name Type Description (property) number Opacity level (0 to 255; 0: fully transparent, 255: fully opaque) The client argument shall be passed as the index to the property, e.g. Compositor.1.opacity@Netflix . Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.opacity@Netflix\", \"params\": 127 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"CompositorAPI"},{"location":"CompositorAPI/#compositor-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Compositor interface for Thunder framework.","title":"Compositor API"},{"location":"CompositorAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"CompositorAPI/#introduction","text":"","title":"Introduction"},{"location":"CompositorAPI/#scope","text":"This document describes purpose and functionality of the Compositor interface. It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"CompositorAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"CompositorAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"CompositorAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"CompositorAPI/#description","text":"Compositor JSON-RPC interface.","title":"Description"},{"location":"CompositorAPI/#methods","text":"The following methods are provided by the Compositor interface: Compositor interface methods: Method Description putontop Puts client surface on top in z-order putbelow Puts client surface below another surface select Directs the input to the given client, disabling all the others","title":"Methods"},{"location":"CompositorAPI/#putontop-method","text":"Puts client surface on top in z-order.","title":"putontop method"},{"location":"CompositorAPI/#description_1","text":"Use this method to get a client's surface to the top position.","title":"Description"},{"location":"CompositorAPI/#parameters","text":"Name Type Description params object params.client string Client name","title":"Parameters"},{"location":"CompositorAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"CompositorAPI/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorAPI/#example","text":"","title":"Example"},{"location":"CompositorAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putontop\", \"params\": { \"client\": \"Netflix\" } }","title":"Request"},{"location":"CompositorAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"CompositorAPI/#putbelow-method","text":"Puts client surface below another surface.","title":"putbelow method"},{"location":"CompositorAPI/#description_2","text":"Use this method to reorder client surfaces in the z-order list.","title":"Description"},{"location":"CompositorAPI/#parameters_1","text":"Name Type Description params object params.client string Client name to change z-order position params.relative string Client to put the other surface below","title":"Parameters"},{"location":"CompositorAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"CompositorAPI/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Client(s) not found","title":"Errors"},{"location":"CompositorAPI/#example_1","text":"","title":"Example"},{"location":"CompositorAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putbelow\", \"params\": { \"client\": \"Netflix\", \"relative\": \"WebKitBrowser\" } }","title":"Request"},{"location":"CompositorAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"CompositorAPI/#select-method","text":"Directs the input to the given client, disabling all the others.","title":"select method"},{"location":"CompositorAPI/#description_3","text":"Use this method to direct all inputs to this client. The client that is receiving the inputs prior to this call will nolonger receive it anymore after this call.","title":"Description"},{"location":"CompositorAPI/#parameters_2","text":"Name Type Description params object params.client string Client name","title":"Parameters"},{"location":"CompositorAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"CompositorAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorAPI/#example_2","text":"","title":"Example"},{"location":"CompositorAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.select\", \"params\": { \"client\": \"Netflix\" } }","title":"Request"},{"location":"CompositorAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"CompositorAPI/#properties","text":"The following properties are provided by the Compositor interface: Compositor interface properties: Property Description resolution Screen resolution zorder RO List of compositor clients sorted by z-order brightness Brightness of SDR graphics in HDR display geometry Client surface geometry visiblity WO Client surface visibility opacity WO Client surface opacity","title":"Properties"},{"location":"CompositorAPI/#resolution-property","text":"Provides access to the screen resolution.","title":"resolution property"},{"location":"CompositorAPI/#description_4","text":"Use this property to set or retrieve the current resolution of the screen.","title":"Description"},{"location":"CompositorAPI/#value","text":"Name Type Description (property) string Screen resolution (must be one of the following: unknown , 480i , 480p , 720p50 , 720p60 , 1080p24 , 1080i50 , 1080p50 , 1080p60 , 2160p50 , 2160p60 )","title":"Value"},{"location":"CompositorAPI/#errors_3","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown resolution 2 ERROR_UNAVAILABLE Set resolution is not supported or failed 1 ERROR_GENERAL Failed to set resolution","title":"Errors"},{"location":"CompositorAPI/#example_3","text":"","title":"Example"},{"location":"CompositorAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\" }","title":"Get Request"},{"location":"CompositorAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1080p24\" }","title":"Get Response"},{"location":"CompositorAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\", \"params\": \"1080p24\" }","title":"Set Request"},{"location":"CompositorAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CompositorAPI/#zorder-property","text":"Provides access to the list of compositor clients sorted by z-order. This property is read-only .","title":"zorder property"},{"location":"CompositorAPI/#description_5","text":"Use this property to retrieve the list of all clients in z-order. Each client has an z-order-value that determines its position with respect to the screen. The ordering is that the top position is closest to the screen, the next z-order-value first behind the top, and so on.","title":"Description"},{"location":"CompositorAPI/#value_1","text":"Name Type Description (property) array List of compositor clients sorted by z-order (property)[#] string Client name","title":"Value"},{"location":"CompositorAPI/#errors_4","text":"Code Message Description 1 ERROR_GENERAL Failed to get z-order","title":"Errors"},{"location":"CompositorAPI/#example_4","text":"","title":"Example"},{"location":"CompositorAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.zorder\" }","title":"Get Request"},{"location":"CompositorAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Netflix\" ] }","title":"Get Response"},{"location":"CompositorAPI/#brightness-property","text":"Provides access to the brightness of SDR graphics in HDR display.","title":"brightness property"},{"location":"CompositorAPI/#description_6","text":"Use this property to set or retrieve the brightness of the SDR graphics.","title":"Description"},{"location":"CompositorAPI/#value_2","text":"Name Type Description (property) string Brightness of SDR graphics in HDR display (must be one of the following: default , match_video , max )","title":"Value"},{"location":"CompositorAPI/#errors_5","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown brightness 2 ERROR_UNAVAILABLE Set brightness is not supported or failed 1 ERROR_GENERAL Failed to set brightness","title":"Errors"},{"location":"CompositorAPI/#example_5","text":"","title":"Example"},{"location":"CompositorAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\" }","title":"Get Request"},{"location":"CompositorAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"match_video\" }","title":"Get Response"},{"location":"CompositorAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\", \"params\": \"match_video\" }","title":"Set Request"},{"location":"CompositorAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CompositorAPI/#geometry-property","text":"Provides access to the client surface geometry.","title":"geometry property"},{"location":"CompositorAPI/#description_7","text":"Use this property to update or retrieve the geometry of a client's surface.","title":"Description"},{"location":"CompositorAPI/#value_3","text":"Name Type Description (property) object Client surface geometry (property).x number Horizontal coordinate of the surface (property).y number Vertical coordinate of the surface (property).width number Surface width (property).height number Surface height The client argument shall be passed as the index to the property, e.g. Compositor.1.geometry@Netflix .","title":"Value"},{"location":"CompositorAPI/#errors_6","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorAPI/#example_6","text":"","title":"Example"},{"location":"CompositorAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\" }","title":"Get Request"},{"location":"CompositorAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } }","title":"Get Response"},{"location":"CompositorAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } }","title":"Set Request"},{"location":"CompositorAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CompositorAPI/#visiblity-property","text":"Provides access to the client surface visibility. This property is write-only .","title":"visiblity property"},{"location":"CompositorAPI/#description_8","text":"Use this property to set the client's surface visibility.","title":"Description"},{"location":"CompositorAPI/#value_4","text":"Name Type Description (property) string Client surface visibility (must be one of the following: visible , hidden ) The client argument shall be passed as the index to the property, e.g. Compositor.1.visiblity@Netflix .","title":"Value"},{"location":"CompositorAPI/#errors_7","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorAPI/#example_7","text":"","title":"Example"},{"location":"CompositorAPI/#set-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.visiblity@Netflix\", \"params\": \"visible\" }","title":"Set Request"},{"location":"CompositorAPI/#set-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CompositorAPI/#opacity-property","text":"Provides access to the client surface opacity. This property is write-only .","title":"opacity property"},{"location":"CompositorAPI/#description_9","text":"Use this property to set the client's surface opacity level.","title":"Description"},{"location":"CompositorAPI/#value_5","text":"Name Type Description (property) number Opacity level (0 to 255; 0: fully transparent, 255: fully opaque) The client argument shall be passed as the index to the property, e.g. Compositor.1.opacity@Netflix .","title":"Value"},{"location":"CompositorAPI/#errors_8","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorAPI/#example_8","text":"","title":"Example"},{"location":"CompositorAPI/#set-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.opacity@Netflix\", \"params\": 127 }","title":"Set Request"},{"location":"CompositorAPI/#set-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CompositorPlugin/","text":"Compositor Plugin Version: 1.0 Status: :black_circle::black_circle::black_circle: Compositor plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Introduction Scope This document describes purpose and functionality of the Compositor plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Compositor gives you control over what is displayed on screen. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Compositor ) classname string Class name: Compositor locator string Library name: libWPEFrameworkCompositor.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.hardwareready number (optional) Hardware delay (Nexus) configuration?.resolution string (optional) Screen resolution (Nexus) configuration?.allowedclients array (optional) List of allowed clients (Nexus) configuration?.allowedclients[#] string (optional) configuration?.connector enum (optional) Resolution (Wayland) configuration?.join boolean (optional) Enable join (Wayland) configuration?.display string (optional) Display (Westeros) configuration?.renderer string (optional) Path of renderer (Westeros) configuration?.glname string (optional) Name of GL-library (Westeros) configuration?.width string (optional) Screen width (Westeros) configuration?.height string (optional) Screen height (Westeros) Methods The following methods are provided by the Compositor plugin: Compositor interface methods: Method Description putontop Puts client surface on top in z-order putbelow Puts client surface below another surface select Directs the input to the given client, disabling all the others putontop method Puts client surface on top in z-order. Description Use this method to get a client's surface to the top position. Parameters Name Type Description params object params.client string Client name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putontop\", \"params\": { \"client\": \"Netflix\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } putbelow method Puts client surface below another surface. Description Use this method to reorder client surfaces in the z-order list. Parameters Name Type Description params object params.client string Client name to change z-order position params.relative string Client to put the other surface below Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Client(s) not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putbelow\", \"params\": { \"client\": \"Netflix\", \"relative\": \"WebKitBrowser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } select method Directs the input to the given client, disabling all the others. Description Use this method to direct all inputs to this client. The client that is receiving the inputs prior to this call will nolonger receive it anymore after this call. Parameters Name Type Description params object params.client string Client name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.select\", \"params\": { \"client\": \"Netflix\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Compositor plugin: Compositor interface properties: Property Description resolution Screen resolution zorder RO List of compositor clients sorted by z-order brightness Brightness of SDR graphics in HDR display geometry Client surface geometry visiblity WO Client surface visibility opacity WO Client surface opacity resolution property Provides access to the screen resolution. Description Use this property to set or retrieve the current resolution of the screen. Value Name Type Description (property) string Screen resolution (must be one of the following: unknown , 480i , 480p , 720p50 , 720p60 , 1080p24 , 1080i50 , 1080p50 , 1080p60 , 2160p50 , 2160p60 ) Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown resolution 2 ERROR_UNAVAILABLE Set resolution is not supported or failed 1 ERROR_GENERAL Failed to set resolution Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1080p24\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\", \"params\": \"1080p24\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } zorder property Provides access to the list of compositor clients sorted by z-order. This property is read-only . Description Use this property to retrieve the list of all clients in z-order. Each client has an z-order-value that determines its position with respect to the screen. The ordering is that the top position is closest to the screen, the next z-order-value first behind the top, and so on. Value Name Type Description (property) array List of compositor clients sorted by z-order (property)[#] string Client name Errors Code Message Description 1 ERROR_GENERAL Failed to get z-order Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.zorder\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Netflix\" ] } brightness property Provides access to the brightness of SDR graphics in HDR display. Description Use this property to set or retrieve the brightness of the SDR graphics. Value Name Type Description (property) string Brightness of SDR graphics in HDR display (must be one of the following: default , match_video , max ) Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown brightness 2 ERROR_UNAVAILABLE Set brightness is not supported or failed 1 ERROR_GENERAL Failed to set brightness Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"match_video\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\", \"params\": \"match_video\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } geometry property Provides access to the client surface geometry. Description Use this property to update or retrieve the geometry of a client's surface. Value Name Type Description (property) object Client surface geometry (property).x number Horizontal coordinate of the surface (property).y number Vertical coordinate of the surface (property).width number Surface width (property).height number Surface height The client argument shall be passed as the index to the property, e.g. Compositor.1.geometry@Netflix . Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visiblity property Provides access to the client surface visibility. This property is write-only . Description Use this property to set the client's surface visibility. Value Name Type Description (property) string Client surface visibility (must be one of the following: visible , hidden ) The client argument shall be passed as the index to the property, e.g. Compositor.1.visiblity@Netflix . Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.visiblity@Netflix\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } opacity property Provides access to the client surface opacity. This property is write-only . Description Use this property to set the client's surface opacity level. Value Name Type Description (property) number Opacity level (0 to 255; 0: fully transparent, 255: fully opaque) The client argument shall be passed as the index to the property, e.g. Compositor.1.opacity@Netflix . Errors Code Message Description 2 ERROR_UNAVAILABLE Client not found Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.opacity@Netflix\", \"params\": 127 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"CompositorPlugin"},{"location":"CompositorPlugin/#compositor-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::black_circle: Compositor plugin for Thunder framework.","title":"Compositor Plugin"},{"location":"CompositorPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties","title":"Table of Contents"},{"location":"CompositorPlugin/#introduction","text":"","title":"Introduction"},{"location":"CompositorPlugin/#scope","text":"This document describes purpose and functionality of the Compositor plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"CompositorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"CompositorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"CompositorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"CompositorPlugin/#description","text":"Compositor gives you control over what is displayed on screen. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"CompositorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Compositor ) classname string Class name: Compositor locator string Library name: libWPEFrameworkCompositor.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.hardwareready number (optional) Hardware delay (Nexus) configuration?.resolution string (optional) Screen resolution (Nexus) configuration?.allowedclients array (optional) List of allowed clients (Nexus) configuration?.allowedclients[#] string (optional) configuration?.connector enum (optional) Resolution (Wayland) configuration?.join boolean (optional) Enable join (Wayland) configuration?.display string (optional) Display (Westeros) configuration?.renderer string (optional) Path of renderer (Westeros) configuration?.glname string (optional) Name of GL-library (Westeros) configuration?.width string (optional) Screen width (Westeros) configuration?.height string (optional) Screen height (Westeros)","title":"Configuration"},{"location":"CompositorPlugin/#methods","text":"The following methods are provided by the Compositor plugin: Compositor interface methods: Method Description putontop Puts client surface on top in z-order putbelow Puts client surface below another surface select Directs the input to the given client, disabling all the others","title":"Methods"},{"location":"CompositorPlugin/#putontop-method","text":"Puts client surface on top in z-order.","title":"putontop method"},{"location":"CompositorPlugin/#description_1","text":"Use this method to get a client's surface to the top position.","title":"Description"},{"location":"CompositorPlugin/#parameters","text":"Name Type Description params object params.client string Client name","title":"Parameters"},{"location":"CompositorPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"CompositorPlugin/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorPlugin/#example","text":"","title":"Example"},{"location":"CompositorPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putontop\", \"params\": { \"client\": \"Netflix\" } }","title":"Request"},{"location":"CompositorPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"CompositorPlugin/#putbelow-method","text":"Puts client surface below another surface.","title":"putbelow method"},{"location":"CompositorPlugin/#description_2","text":"Use this method to reorder client surfaces in the z-order list.","title":"Description"},{"location":"CompositorPlugin/#parameters_1","text":"Name Type Description params object params.client string Client name to change z-order position params.relative string Client to put the other surface below","title":"Parameters"},{"location":"CompositorPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"CompositorPlugin/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Client(s) not found","title":"Errors"},{"location":"CompositorPlugin/#example_1","text":"","title":"Example"},{"location":"CompositorPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putbelow\", \"params\": { \"client\": \"Netflix\", \"relative\": \"WebKitBrowser\" } }","title":"Request"},{"location":"CompositorPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"CompositorPlugin/#select-method","text":"Directs the input to the given client, disabling all the others.","title":"select method"},{"location":"CompositorPlugin/#description_3","text":"Use this method to direct all inputs to this client. The client that is receiving the inputs prior to this call will nolonger receive it anymore after this call.","title":"Description"},{"location":"CompositorPlugin/#parameters_2","text":"Name Type Description params object params.client string Client name","title":"Parameters"},{"location":"CompositorPlugin/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"CompositorPlugin/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorPlugin/#example_2","text":"","title":"Example"},{"location":"CompositorPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.select\", \"params\": { \"client\": \"Netflix\" } }","title":"Request"},{"location":"CompositorPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"CompositorPlugin/#properties","text":"The following properties are provided by the Compositor plugin: Compositor interface properties: Property Description resolution Screen resolution zorder RO List of compositor clients sorted by z-order brightness Brightness of SDR graphics in HDR display geometry Client surface geometry visiblity WO Client surface visibility opacity WO Client surface opacity","title":"Properties"},{"location":"CompositorPlugin/#resolution-property","text":"Provides access to the screen resolution.","title":"resolution property"},{"location":"CompositorPlugin/#description_4","text":"Use this property to set or retrieve the current resolution of the screen.","title":"Description"},{"location":"CompositorPlugin/#value","text":"Name Type Description (property) string Screen resolution (must be one of the following: unknown , 480i , 480p , 720p50 , 720p60 , 1080p24 , 1080i50 , 1080p50 , 1080p60 , 2160p50 , 2160p60 )","title":"Value"},{"location":"CompositorPlugin/#errors_3","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown resolution 2 ERROR_UNAVAILABLE Set resolution is not supported or failed 1 ERROR_GENERAL Failed to set resolution","title":"Errors"},{"location":"CompositorPlugin/#example_3","text":"","title":"Example"},{"location":"CompositorPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\" }","title":"Get Request"},{"location":"CompositorPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1080p24\" }","title":"Get Response"},{"location":"CompositorPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\", \"params\": \"1080p24\" }","title":"Set Request"},{"location":"CompositorPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CompositorPlugin/#zorder-property","text":"Provides access to the list of compositor clients sorted by z-order. This property is read-only .","title":"zorder property"},{"location":"CompositorPlugin/#description_5","text":"Use this property to retrieve the list of all clients in z-order. Each client has an z-order-value that determines its position with respect to the screen. The ordering is that the top position is closest to the screen, the next z-order-value first behind the top, and so on.","title":"Description"},{"location":"CompositorPlugin/#value_1","text":"Name Type Description (property) array List of compositor clients sorted by z-order (property)[#] string Client name","title":"Value"},{"location":"CompositorPlugin/#errors_4","text":"Code Message Description 1 ERROR_GENERAL Failed to get z-order","title":"Errors"},{"location":"CompositorPlugin/#example_4","text":"","title":"Example"},{"location":"CompositorPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.zorder\" }","title":"Get Request"},{"location":"CompositorPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Netflix\" ] }","title":"Get Response"},{"location":"CompositorPlugin/#brightness-property","text":"Provides access to the brightness of SDR graphics in HDR display.","title":"brightness property"},{"location":"CompositorPlugin/#description_6","text":"Use this property to set or retrieve the brightness of the SDR graphics.","title":"Description"},{"location":"CompositorPlugin/#value_2","text":"Name Type Description (property) string Brightness of SDR graphics in HDR display (must be one of the following: default , match_video , max )","title":"Value"},{"location":"CompositorPlugin/#errors_5","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown brightness 2 ERROR_UNAVAILABLE Set brightness is not supported or failed 1 ERROR_GENERAL Failed to set brightness","title":"Errors"},{"location":"CompositorPlugin/#example_5","text":"","title":"Example"},{"location":"CompositorPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\" }","title":"Get Request"},{"location":"CompositorPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"match_video\" }","title":"Get Response"},{"location":"CompositorPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\", \"params\": \"match_video\" }","title":"Set Request"},{"location":"CompositorPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CompositorPlugin/#geometry-property","text":"Provides access to the client surface geometry.","title":"geometry property"},{"location":"CompositorPlugin/#description_7","text":"Use this property to update or retrieve the geometry of a client's surface.","title":"Description"},{"location":"CompositorPlugin/#value_3","text":"Name Type Description (property) object Client surface geometry (property).x number Horizontal coordinate of the surface (property).y number Vertical coordinate of the surface (property).width number Surface width (property).height number Surface height The client argument shall be passed as the index to the property, e.g. Compositor.1.geometry@Netflix .","title":"Value"},{"location":"CompositorPlugin/#errors_6","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorPlugin/#example_6","text":"","title":"Example"},{"location":"CompositorPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\" }","title":"Get Request"},{"location":"CompositorPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } }","title":"Get Response"},{"location":"CompositorPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } }","title":"Set Request"},{"location":"CompositorPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CompositorPlugin/#visiblity-property","text":"Provides access to the client surface visibility. This property is write-only .","title":"visiblity property"},{"location":"CompositorPlugin/#description_8","text":"Use this property to set the client's surface visibility.","title":"Description"},{"location":"CompositorPlugin/#value_4","text":"Name Type Description (property) string Client surface visibility (must be one of the following: visible , hidden ) The client argument shall be passed as the index to the property, e.g. Compositor.1.visiblity@Netflix .","title":"Value"},{"location":"CompositorPlugin/#errors_7","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorPlugin/#example_7","text":"","title":"Example"},{"location":"CompositorPlugin/#set-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.visiblity@Netflix\", \"params\": \"visible\" }","title":"Set Request"},{"location":"CompositorPlugin/#set-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"CompositorPlugin/#opacity-property","text":"Provides access to the client surface opacity. This property is write-only .","title":"opacity property"},{"location":"CompositorPlugin/#description_9","text":"Use this property to set the client's surface opacity level.","title":"Description"},{"location":"CompositorPlugin/#value_5","text":"Name Type Description (property) number Opacity level (0 to 255; 0: fully transparent, 255: fully opaque) The client argument shall be passed as the index to the property, e.g. Compositor.1.opacity@Netflix .","title":"Value"},{"location":"CompositorPlugin/#errors_8","text":"Code Message Description 2 ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"CompositorPlugin/#example_8","text":"","title":"Example"},{"location":"CompositorPlugin/#set-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.opacity@Netflix\", \"params\": 127 }","title":"Set Request"},{"location":"CompositorPlugin/#set-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"ConnectionPropertiesAPI/","text":"ConnectionProperties API Version: 1.0 Status: :black_circle::white_circle::white_circle: ConnectionProperties interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the ConnectionProperties interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description ConnectionProperties JSON-RPC interface. Methods The following methods are provided by the ConnectionProperties interface: ConnectionProperties interface methods: Method Description edid TV's Extended Display Identification Data widthincentimeters Horizontal size in centimeters heightincentimeters Vertical size in centimeters edid method TV's Extended Display Identification Data. Parameters Name Type Description params object params.length integer Result Name Type Description result object result.length integer result.data string Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.edid\", \"params\": { \"length\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"length\": 0, \"data\": \"...\" } } widthincentimeters method Horizontal size in centimeters. Parameters This method takes no parameters. Result Name Type Description width integer width in cm Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.widthincentimeters\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } heightincentimeters method Vertical size in centimeters. Parameters This method takes no parameters. Result Name Type Description heigth integer Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.heightincentimeters\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } Properties The following properties are provided by the ConnectionProperties interface: ConnectionProperties interface properties: Property Description isaudiopassthrough RO Current audio passthrough status on HDMI connected RO Current HDMI connection status width RO Horizontal resolution of TV height RO Vertical resolution of TV verticalfreq RO Vertical Frequency hdcpprotection HDCP protocol used for transmission portname RO Video output port on the STB used for connection to TV isaudiopassthrough property Provides access to the current audio passthrough status on HDMI. This property is read-only . Value Name Type Description passthru boolean enabled/disabled Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.isaudiopassthrough\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } connected property Provides access to the current HDMI connection status. This property is read-only . Value Name Type Description isconnected boolean connected/disconnected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.connected\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } width property Provides access to the horizontal resolution of TV. This property is read-only . Value Name Type Description width integer width of TV in pixels Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.width\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } height property Provides access to the vertical resolution of TV. This property is read-only . Value Name Type Description height integer height of TV in pixels Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.height\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } verticalfreq property Provides access to the vertical Frequency. This property is read-only . Value Name Type Description vf integer vertical freq Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.verticalfreq\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } hdcpprotection property Provides access to the HDCP protocol used for transmission. Value Name Type Description value string protocol (must be one of the following: HdcpUnencrypted , Hdcp1X , Hdcp2X , HdcpAuto ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.hdcpprotection\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdcpUnencrypted\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.hdcpprotection\", \"params\": \"HdcpUnencrypted\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } portname property Provides access to the video output port on the STB used for connection to TV. This property is read-only . Value Name Type Description name string video output port name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.portname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the ConnectionProperties interface: ConnectionProperties interface events: Event Description updated updated event Parameters Name Type Description params object params.event string (must be one of the following: PreResolutionChange , PostResolutionChange , HdmiChange , HdcpChange ) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.updated\", \"params\": { \"event\": \"PreResolutionChange\" } }","title":"ConnectionPropertiesAPI"},{"location":"ConnectionPropertiesAPI/#connectionproperties-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: ConnectionProperties interface for Thunder framework.","title":"ConnectionProperties API"},{"location":"ConnectionPropertiesAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"ConnectionPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"ConnectionPropertiesAPI/#scope","text":"This document describes purpose and functionality of the ConnectionProperties interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"ConnectionPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"ConnectionPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"ConnectionPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"ConnectionPropertiesAPI/#description","text":"ConnectionProperties JSON-RPC interface.","title":"Description"},{"location":"ConnectionPropertiesAPI/#methods","text":"The following methods are provided by the ConnectionProperties interface: ConnectionProperties interface methods: Method Description edid TV's Extended Display Identification Data widthincentimeters Horizontal size in centimeters heightincentimeters Vertical size in centimeters","title":"Methods"},{"location":"ConnectionPropertiesAPI/#edid-method","text":"TV's Extended Display Identification Data.","title":"edid method"},{"location":"ConnectionPropertiesAPI/#parameters","text":"Name Type Description params object params.length integer","title":"Parameters"},{"location":"ConnectionPropertiesAPI/#result","text":"Name Type Description result object result.length integer result.data string","title":"Result"},{"location":"ConnectionPropertiesAPI/#example","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.edid\", \"params\": { \"length\": 0 } }","title":"Request"},{"location":"ConnectionPropertiesAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"length\": 0, \"data\": \"...\" } }","title":"Response"},{"location":"ConnectionPropertiesAPI/#widthincentimeters-method","text":"Horizontal size in centimeters.","title":"widthincentimeters method"},{"location":"ConnectionPropertiesAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"ConnectionPropertiesAPI/#result_1","text":"Name Type Description width integer width in cm","title":"Result"},{"location":"ConnectionPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.widthincentimeters\" }","title":"Request"},{"location":"ConnectionPropertiesAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"ConnectionPropertiesAPI/#heightincentimeters-method","text":"Vertical size in centimeters.","title":"heightincentimeters method"},{"location":"ConnectionPropertiesAPI/#parameters_2","text":"This method takes no parameters.","title":"Parameters"},{"location":"ConnectionPropertiesAPI/#result_2","text":"Name Type Description heigth integer","title":"Result"},{"location":"ConnectionPropertiesAPI/#example_2","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.heightincentimeters\" }","title":"Request"},{"location":"ConnectionPropertiesAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"ConnectionPropertiesAPI/#properties","text":"The following properties are provided by the ConnectionProperties interface: ConnectionProperties interface properties: Property Description isaudiopassthrough RO Current audio passthrough status on HDMI connected RO Current HDMI connection status width RO Horizontal resolution of TV height RO Vertical resolution of TV verticalfreq RO Vertical Frequency hdcpprotection HDCP protocol used for transmission portname RO Video output port on the STB used for connection to TV","title":"Properties"},{"location":"ConnectionPropertiesAPI/#isaudiopassthrough-property","text":"Provides access to the current audio passthrough status on HDMI. This property is read-only .","title":"isaudiopassthrough property"},{"location":"ConnectionPropertiesAPI/#value","text":"Name Type Description passthru boolean enabled/disabled","title":"Value"},{"location":"ConnectionPropertiesAPI/#example_3","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.isaudiopassthrough\" }","title":"Get Request"},{"location":"ConnectionPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"ConnectionPropertiesAPI/#connected-property","text":"Provides access to the current HDMI connection status. This property is read-only .","title":"connected property"},{"location":"ConnectionPropertiesAPI/#value_1","text":"Name Type Description isconnected boolean connected/disconnected","title":"Value"},{"location":"ConnectionPropertiesAPI/#example_4","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.connected\" }","title":"Get Request"},{"location":"ConnectionPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"ConnectionPropertiesAPI/#width-property","text":"Provides access to the horizontal resolution of TV. This property is read-only .","title":"width property"},{"location":"ConnectionPropertiesAPI/#value_2","text":"Name Type Description width integer width of TV in pixels","title":"Value"},{"location":"ConnectionPropertiesAPI/#example_5","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.width\" }","title":"Get Request"},{"location":"ConnectionPropertiesAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"ConnectionPropertiesAPI/#height-property","text":"Provides access to the vertical resolution of TV. This property is read-only .","title":"height property"},{"location":"ConnectionPropertiesAPI/#value_3","text":"Name Type Description height integer height of TV in pixels","title":"Value"},{"location":"ConnectionPropertiesAPI/#example_6","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.height\" }","title":"Get Request"},{"location":"ConnectionPropertiesAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"ConnectionPropertiesAPI/#verticalfreq-property","text":"Provides access to the vertical Frequency. This property is read-only .","title":"verticalfreq property"},{"location":"ConnectionPropertiesAPI/#value_4","text":"Name Type Description vf integer vertical freq","title":"Value"},{"location":"ConnectionPropertiesAPI/#example_7","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.verticalfreq\" }","title":"Get Request"},{"location":"ConnectionPropertiesAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"ConnectionPropertiesAPI/#hdcpprotection-property","text":"Provides access to the HDCP protocol used for transmission.","title":"hdcpprotection property"},{"location":"ConnectionPropertiesAPI/#value_5","text":"Name Type Description value string protocol (must be one of the following: HdcpUnencrypted , Hdcp1X , Hdcp2X , HdcpAuto )","title":"Value"},{"location":"ConnectionPropertiesAPI/#example_8","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.hdcpprotection\" }","title":"Get Request"},{"location":"ConnectionPropertiesAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdcpUnencrypted\" }","title":"Get Response"},{"location":"ConnectionPropertiesAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.hdcpprotection\", \"params\": \"HdcpUnencrypted\" }","title":"Set Request"},{"location":"ConnectionPropertiesAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"ConnectionPropertiesAPI/#portname-property","text":"Provides access to the video output port on the STB used for connection to TV. This property is read-only .","title":"portname property"},{"location":"ConnectionPropertiesAPI/#value_6","text":"Name Type Description name string video output port name","title":"Value"},{"location":"ConnectionPropertiesAPI/#example_9","text":"","title":"Example"},{"location":"ConnectionPropertiesAPI/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.portname\" }","title":"Get Request"},{"location":"ConnectionPropertiesAPI/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"ConnectionPropertiesAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the ConnectionProperties interface: ConnectionProperties interface events: Event Description updated","title":"Notifications"},{"location":"ConnectionPropertiesAPI/#updated-event","text":"","title":"updated event"},{"location":"ConnectionPropertiesAPI/#parameters_3","text":"Name Type Description params object params.event string (must be one of the following: PreResolutionChange , PostResolutionChange , HdmiChange , HdcpChange )","title":"Parameters"},{"location":"ConnectionPropertiesAPI/#example_10","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.updated\", \"params\": { \"event\": \"PreResolutionChange\" } }","title":"Example"},{"location":"CustomerCareOperationsAPI/","text":"CustomerCareOperations API Version: 1.0 Status: :black_circle::white_circle::white_circle: CustomerCareOperations interface for Thunder framework. Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the CustomerCareOperations interface. It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description CustomerCareOperations JSON-RPC interface. Methods The following methods are provided by the CustomerCareOperations interface: CustomerCareOperations interface methods: Method Description factoryreset Executes all operations needed for a plugin's factory reset factoryreset method Executes all operations needed for a plugin's factory reset. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"CustomerCareOperations.1.factoryreset\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"CustomerCareOperationsAPI"},{"location":"CustomerCareOperationsAPI/#customercareoperations-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: CustomerCareOperations interface for Thunder framework.","title":"CustomerCareOperations API"},{"location":"CustomerCareOperationsAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"CustomerCareOperationsAPI/#introduction","text":"","title":"Introduction"},{"location":"CustomerCareOperationsAPI/#scope","text":"This document describes purpose and functionality of the CustomerCareOperations interface. It includes detailed specification about its methods provided.","title":"Scope"},{"location":"CustomerCareOperationsAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"CustomerCareOperationsAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"CustomerCareOperationsAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"CustomerCareOperationsAPI/#description","text":"CustomerCareOperations JSON-RPC interface.","title":"Description"},{"location":"CustomerCareOperationsAPI/#methods","text":"The following methods are provided by the CustomerCareOperations interface: CustomerCareOperations interface methods: Method Description factoryreset Executes all operations needed for a plugin's factory reset","title":"Methods"},{"location":"CustomerCareOperationsAPI/#factoryreset-method","text":"Executes all operations needed for a plugin's factory reset.","title":"factoryreset method"},{"location":"CustomerCareOperationsAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"CustomerCareOperationsAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"CustomerCareOperationsAPI/#example","text":"","title":"Example"},{"location":"CustomerCareOperationsAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"CustomerCareOperations.1.factoryreset\" }","title":"Request"},{"location":"CustomerCareOperationsAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"DHCPServerAPI/","text":"DHCP Server API Version: 1.0 Status: :black_circle::white_circle::white_circle: DHCPServer interface for Thunder framework. Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the DHCPServer interface. It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DHCP Server JSON-RPC interface. Methods The following methods are provided by the DHCPServer interface: DHCPServer interface methods: Method Description activate Activates a DHCP server deactivate Deactivates a DHCP server activate method Activates a DHCP server. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to activate server 22 ERROR_UNKNOWN_KEY Invalid interface name given 5 ERROR_ILLEGAL_STATE Server is already activated Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.activate\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } deactivate method Deactivates a DHCP server. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to deactivate server 22 ERROR_UNKNOWN_KEY Invalid interface name given 5 ERROR_ILLEGAL_STATE Server is not activated Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.deactivate\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the DHCPServer interface: DHCPServer interface properties: Property Description status RO Server status status property Provides access to the server status. This property is read-only . Value Name Type Description (property) array List of configured servers (property)[#] object (property)[#].interface string Network interface name (property)[#].active boolean Denotes if server is currently active (property)[#]?.begin string (optional) IP address pool start (property)[#]?.end string (optional) IP address pool end (property)[#]?.router string (optional) Router IP address (property)[#]?.leases array (optional) List of IP address leases (property)[#]?.leases[#] object (optional) Lease description (property)[#]?.leases[#].name string Client identifier (or client hardware address if identifier is absent) (property)[#]?.leases[#].ip string Client IP address (property)[#]?.leases[#]?.expires string (optional) Client IP expiration time (in ISO8601 format, empty: never expires) The server argument shall be passed as the index to the property, e.g. DHCPServer.1.status@eth0 . If omitted, status of all configured servers is returned. Errors Code Message Description 22 ERROR_UNKNOWN_KEY Invalid server name given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.status@eth0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"active\": true, \"begin\": \"192.168.0.10\", \"end\": \"192.168.0.100\", \"router\": \"192.168.0.1\", \"leases\": [ { \"name\": \"00e04c326c56\", \"ip\": \"192.168.0.10\", \"expires\": \"2019-05-07T07:20:26Z\" } ] } ] }","title":"DHCPServerAPI"},{"location":"DHCPServerAPI/#dhcp-server-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: DHCPServer interface for Thunder framework.","title":"DHCP Server API"},{"location":"DHCPServerAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"DHCPServerAPI/#introduction","text":"","title":"Introduction"},{"location":"DHCPServerAPI/#scope","text":"This document describes purpose and functionality of the DHCPServer interface. It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"DHCPServerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DHCPServerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DHCPServerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DHCPServerAPI/#description","text":"DHCP Server JSON-RPC interface.","title":"Description"},{"location":"DHCPServerAPI/#methods","text":"The following methods are provided by the DHCPServer interface: DHCPServer interface methods: Method Description activate Activates a DHCP server deactivate Deactivates a DHCP server","title":"Methods"},{"location":"DHCPServerAPI/#activate-method","text":"Activates a DHCP server.","title":"activate method"},{"location":"DHCPServerAPI/#parameters","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"DHCPServerAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"DHCPServerAPI/#errors","text":"Code Message Description 1 ERROR_GENERAL Failed to activate server 22 ERROR_UNKNOWN_KEY Invalid interface name given 5 ERROR_ILLEGAL_STATE Server is already activated","title":"Errors"},{"location":"DHCPServerAPI/#example","text":"","title":"Example"},{"location":"DHCPServerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.activate\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"DHCPServerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"DHCPServerAPI/#deactivate-method","text":"Deactivates a DHCP server.","title":"deactivate method"},{"location":"DHCPServerAPI/#parameters_1","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"DHCPServerAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"DHCPServerAPI/#errors_1","text":"Code Message Description 1 ERROR_GENERAL Failed to deactivate server 22 ERROR_UNKNOWN_KEY Invalid interface name given 5 ERROR_ILLEGAL_STATE Server is not activated","title":"Errors"},{"location":"DHCPServerAPI/#example_1","text":"","title":"Example"},{"location":"DHCPServerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.deactivate\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"DHCPServerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"DHCPServerAPI/#properties","text":"The following properties are provided by the DHCPServer interface: DHCPServer interface properties: Property Description status RO Server status","title":"Properties"},{"location":"DHCPServerAPI/#status-property","text":"Provides access to the server status. This property is read-only .","title":"status property"},{"location":"DHCPServerAPI/#value","text":"Name Type Description (property) array List of configured servers (property)[#] object (property)[#].interface string Network interface name (property)[#].active boolean Denotes if server is currently active (property)[#]?.begin string (optional) IP address pool start (property)[#]?.end string (optional) IP address pool end (property)[#]?.router string (optional) Router IP address (property)[#]?.leases array (optional) List of IP address leases (property)[#]?.leases[#] object (optional) Lease description (property)[#]?.leases[#].name string Client identifier (or client hardware address if identifier is absent) (property)[#]?.leases[#].ip string Client IP address (property)[#]?.leases[#]?.expires string (optional) Client IP expiration time (in ISO8601 format, empty: never expires) The server argument shall be passed as the index to the property, e.g. DHCPServer.1.status@eth0 . If omitted, status of all configured servers is returned.","title":"Value"},{"location":"DHCPServerAPI/#errors_2","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Invalid server name given","title":"Errors"},{"location":"DHCPServerAPI/#example_2","text":"","title":"Example"},{"location":"DHCPServerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.status@eth0\" }","title":"Get Request"},{"location":"DHCPServerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"active\": true, \"begin\": \"192.168.0.10\", \"end\": \"192.168.0.100\", \"router\": \"192.168.0.1\", \"leases\": [ { \"name\": \"00e04c326c56\", \"ip\": \"192.168.0.10\", \"expires\": \"2019-05-07T07:20:26Z\" } ] } ] }","title":"Get Response"},{"location":"DHCPServerPlugin/","text":"DHCP Server Plugin Version: 1.0 Status: :black_circle::black_circle::black_circle: DHCPServer plugin for Thunder framework. Table of Contents Introduction Configuration Methods Properties Introduction Scope This document describes purpose and functionality of the DHCPServer plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface DHCP Dynamic Host Configuration Protocol HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description DHCP DHCP protocol specification (RFC2131) HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DHCPServer ) classname string Class name: DHCPServer locator string Library name: libWPEFrameworkDHCPServer.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object Server configuration configuration.name string Name of the server configuration.servers array List of configured DHCP servers configuration.servers[#] object Configuration of a server configuration.servers[#].interface string Name of the network interface to bind to configuration.servers[#].poolstart number IP pool start number configuration.servers[#].poolsize number IP pool size (in IP numbers) configuration.servers[#]?.router number (optional) IP of router Methods The following methods are provided by the DHCPServer plugin: DHCPServer interface methods: Method Description activate Activates a DHCP server deactivate Deactivates a DHCP server activate method Activates a DHCP server. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to activate server 22 ERROR_UNKNOWN_KEY Invalid interface name given 5 ERROR_ILLEGAL_STATE Server is already activated Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.activate\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } deactivate method Deactivates a DHCP server. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to deactivate server 22 ERROR_UNKNOWN_KEY Invalid interface name given 5 ERROR_ILLEGAL_STATE Server is not activated Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.deactivate\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the DHCPServer plugin: DHCPServer interface properties: Property Description status RO Server status status property Provides access to the server status. This property is read-only . Value Name Type Description (property) array List of configured servers (property)[#] object (property)[#].interface string Network interface name (property)[#].active boolean Denotes if server is currently active (property)[#]?.begin string (optional) IP address pool start (property)[#]?.end string (optional) IP address pool end (property)[#]?.router string (optional) Router IP address (property)[#]?.leases array (optional) List of IP address leases (property)[#]?.leases[#] object (optional) Lease description (property)[#]?.leases[#].name string Client identifier (or client hardware address if identifier is absent) (property)[#]?.leases[#].ip string Client IP address (property)[#]?.leases[#]?.expires string (optional) Client IP expiration time (in ISO8601 format, empty: never expires) The server argument shall be passed as the index to the property, e.g. DHCPServer.1.status@eth0 . If omitted, status of all configured servers is returned. Errors Code Message Description 22 ERROR_UNKNOWN_KEY Invalid server name given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.status@eth0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"active\": true, \"begin\": \"192.168.0.10\", \"end\": \"192.168.0.100\", \"router\": \"192.168.0.1\", \"leases\": [ { \"name\": \"00e04c326c56\", \"ip\": \"192.168.0.10\", \"expires\": \"2019-05-07T07:20:26Z\" } ] } ] }","title":"DHCPServerPlugin"},{"location":"DHCPServerPlugin/#dhcp-server-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::black_circle: DHCPServer plugin for Thunder framework.","title":"DHCP Server Plugin"},{"location":"DHCPServerPlugin/#table-of-contents","text":"Introduction Configuration Methods Properties","title":"Table of Contents"},{"location":"DHCPServerPlugin/#introduction","text":"","title":"Introduction"},{"location":"DHCPServerPlugin/#scope","text":"This document describes purpose and functionality of the DHCPServer plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"DHCPServerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DHCPServerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface DHCP Dynamic Host Configuration Protocol HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DHCPServerPlugin/#references","text":"Ref ID Description DHCP DHCP protocol specification (RFC2131) HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DHCPServerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DHCPServer ) classname string Class name: DHCPServer locator string Library name: libWPEFrameworkDHCPServer.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object Server configuration configuration.name string Name of the server configuration.servers array List of configured DHCP servers configuration.servers[#] object Configuration of a server configuration.servers[#].interface string Name of the network interface to bind to configuration.servers[#].poolstart number IP pool start number configuration.servers[#].poolsize number IP pool size (in IP numbers) configuration.servers[#]?.router number (optional) IP of router","title":"Configuration"},{"location":"DHCPServerPlugin/#methods","text":"The following methods are provided by the DHCPServer plugin: DHCPServer interface methods: Method Description activate Activates a DHCP server deactivate Deactivates a DHCP server","title":"Methods"},{"location":"DHCPServerPlugin/#activate-method","text":"Activates a DHCP server.","title":"activate method"},{"location":"DHCPServerPlugin/#parameters","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"DHCPServerPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"DHCPServerPlugin/#errors","text":"Code Message Description 1 ERROR_GENERAL Failed to activate server 22 ERROR_UNKNOWN_KEY Invalid interface name given 5 ERROR_ILLEGAL_STATE Server is already activated","title":"Errors"},{"location":"DHCPServerPlugin/#example","text":"","title":"Example"},{"location":"DHCPServerPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.activate\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"DHCPServerPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"DHCPServerPlugin/#deactivate-method","text":"Deactivates a DHCP server.","title":"deactivate method"},{"location":"DHCPServerPlugin/#parameters_1","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"DHCPServerPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"DHCPServerPlugin/#errors_1","text":"Code Message Description 1 ERROR_GENERAL Failed to deactivate server 22 ERROR_UNKNOWN_KEY Invalid interface name given 5 ERROR_ILLEGAL_STATE Server is not activated","title":"Errors"},{"location":"DHCPServerPlugin/#example_1","text":"","title":"Example"},{"location":"DHCPServerPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.deactivate\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"DHCPServerPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"DHCPServerPlugin/#properties","text":"The following properties are provided by the DHCPServer plugin: DHCPServer interface properties: Property Description status RO Server status","title":"Properties"},{"location":"DHCPServerPlugin/#status-property","text":"Provides access to the server status. This property is read-only .","title":"status property"},{"location":"DHCPServerPlugin/#value","text":"Name Type Description (property) array List of configured servers (property)[#] object (property)[#].interface string Network interface name (property)[#].active boolean Denotes if server is currently active (property)[#]?.begin string (optional) IP address pool start (property)[#]?.end string (optional) IP address pool end (property)[#]?.router string (optional) Router IP address (property)[#]?.leases array (optional) List of IP address leases (property)[#]?.leases[#] object (optional) Lease description (property)[#]?.leases[#].name string Client identifier (or client hardware address if identifier is absent) (property)[#]?.leases[#].ip string Client IP address (property)[#]?.leases[#]?.expires string (optional) Client IP expiration time (in ISO8601 format, empty: never expires) The server argument shall be passed as the index to the property, e.g. DHCPServer.1.status@eth0 . If omitted, status of all configured servers is returned.","title":"Value"},{"location":"DHCPServerPlugin/#errors_2","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Invalid server name given","title":"Errors"},{"location":"DHCPServerPlugin/#example_2","text":"","title":"Example"},{"location":"DHCPServerPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.status@eth0\" }","title":"Get Request"},{"location":"DHCPServerPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"active\": true, \"begin\": \"192.168.0.10\", \"end\": \"192.168.0.100\", \"router\": \"192.168.0.1\", \"leases\": [ { \"name\": \"00e04c326c56\", \"ip\": \"192.168.0.10\", \"expires\": \"2019-05-07T07:20:26Z\" } ] } ] }","title":"Get Response"},{"location":"DIALServerAPI/","text":"DIAL Server API Version: 1.0 Status: :black_circle::white_circle::white_circle: DIALServer interface for Thunder framework. Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the DIALServer interface. It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DIAL Server JSON-RPC interface. Properties The following properties are provided by the DIALServer interface: DIALServer interface properties: Property Description state Current application running state state property Provides access to the current application running state. Description This property can be used to update the running status of an un-managed application (i.e. running in passive mode ). For DIALServer-managed applications this property shall be considered read-only . Value Name Type Description (property) string Current application running state (must be one of the following: Stopped , Started , Hidden ) The application name argument shall be passed as the index to the property, e.g. DIALServer.1.state@YouTube . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Specified application does not exist 5 ERROR_ILLEGAL_STATE Specified application is running in active mode Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Stopped\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\", \"params\": \"Stopped\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DIALServer interface: DIALServer interface events: Event Description start Signals that application launch (or show if previously hidden) was requested over DIAL stop Signals that application stop was requested over DIAL hide Signals that application hide was requested over DIAL show Signals that application show was requested over DIAL change Signals that application URL change was requested over DIAL start event Signals that application launch (or show if previously hidden) was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name params?.parameters string (optional) Additional application-specific parameters params?.payload string (optional) Additional application-specific payload Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.start\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\", \"payload\": \"...\" } } stop event Signals that application stop was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name params?.parameters string (optional) Additional application-specific parameters Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.stop\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\" } } hide event Signals that application hide was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.hide\", \"params\": { \"application\": \"YouTube\" } } show event Signals that application show was requested over DIAL. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.show\", \"params\": { \"application\": \"YouTube\" } } change event Signals that application URL change was requested over DIAL. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.change\", \"params\": { \"application\": \"YouTube\" } }","title":"DIALServerAPI"},{"location":"DIALServerAPI/#dial-server-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: DIALServer interface for Thunder framework.","title":"DIAL Server API"},{"location":"DIALServerAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"DIALServerAPI/#introduction","text":"","title":"Introduction"},{"location":"DIALServerAPI/#scope","text":"This document describes purpose and functionality of the DIALServer interface. It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"DIALServerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DIALServerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DIALServerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DIALServerAPI/#description","text":"DIAL Server JSON-RPC interface.","title":"Description"},{"location":"DIALServerAPI/#properties","text":"The following properties are provided by the DIALServer interface: DIALServer interface properties: Property Description state Current application running state","title":"Properties"},{"location":"DIALServerAPI/#state-property","text":"Provides access to the current application running state.","title":"state property"},{"location":"DIALServerAPI/#description_1","text":"This property can be used to update the running status of an un-managed application (i.e. running in passive mode ). For DIALServer-managed applications this property shall be considered read-only .","title":"Description"},{"location":"DIALServerAPI/#value","text":"Name Type Description (property) string Current application running state (must be one of the following: Stopped , Started , Hidden ) The application name argument shall be passed as the index to the property, e.g. DIALServer.1.state@YouTube .","title":"Value"},{"location":"DIALServerAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Specified application does not exist 5 ERROR_ILLEGAL_STATE Specified application is running in active mode","title":"Errors"},{"location":"DIALServerAPI/#example","text":"","title":"Example"},{"location":"DIALServerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\" }","title":"Get Request"},{"location":"DIALServerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Stopped\" }","title":"Get Response"},{"location":"DIALServerAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\", \"params\": \"Stopped\" }","title":"Set Request"},{"location":"DIALServerAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"DIALServerAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DIALServer interface: DIALServer interface events: Event Description start Signals that application launch (or show if previously hidden) was requested over DIAL stop Signals that application stop was requested over DIAL hide Signals that application hide was requested over DIAL show Signals that application show was requested over DIAL change Signals that application URL change was requested over DIAL","title":"Notifications"},{"location":"DIALServerAPI/#start-event","text":"Signals that application launch (or show if previously hidden) was requested over DIAL.","title":"start event"},{"location":"DIALServerAPI/#description_2","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerAPI/#parameters","text":"Name Type Description params object params.application string Application name params?.parameters string (optional) Additional application-specific parameters params?.payload string (optional) Additional application-specific payload","title":"Parameters"},{"location":"DIALServerAPI/#example_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.start\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\", \"payload\": \"...\" } }","title":"Example"},{"location":"DIALServerAPI/#stop-event","text":"Signals that application stop was requested over DIAL.","title":"stop event"},{"location":"DIALServerAPI/#description_3","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerAPI/#parameters_1","text":"Name Type Description params object params.application string Application name params?.parameters string (optional) Additional application-specific parameters","title":"Parameters"},{"location":"DIALServerAPI/#example_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.stop\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\" } }","title":"Example"},{"location":"DIALServerAPI/#hide-event","text":"Signals that application hide was requested over DIAL.","title":"hide event"},{"location":"DIALServerAPI/#description_4","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerAPI/#parameters_2","text":"Name Type Description params object params.application string Application name","title":"Parameters"},{"location":"DIALServerAPI/#example_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.hide\", \"params\": { \"application\": \"YouTube\" } }","title":"Example"},{"location":"DIALServerAPI/#show-event","text":"Signals that application show was requested over DIAL. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations.","title":"show event"},{"location":"DIALServerAPI/#description_5","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerAPI/#parameters_3","text":"Name Type Description params object params.application string Application name","title":"Parameters"},{"location":"DIALServerAPI/#example_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.show\", \"params\": { \"application\": \"YouTube\" } }","title":"Example"},{"location":"DIALServerAPI/#change-event","text":"Signals that application URL change was requested over DIAL. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations.","title":"change event"},{"location":"DIALServerAPI/#description_6","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerAPI/#parameters_4","text":"Name Type Description params object params.application string Application name","title":"Parameters"},{"location":"DIALServerAPI/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.change\", \"params\": { \"application\": \"YouTube\" } }","title":"Example"},{"location":"DIALServerPlugin/","text":"DIAL Server Plugin Version: 1.0 Status: :black_circle::black_circle::white_circle: DIALServer plugin for Thunder framework. Table of Contents Introduction Description Configuration Properties Notifications Introduction Scope This document describes purpose and functionality of the DIALServer plugin. It includes detailed specification about its configuration, properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface DIAL Discovery and Launch HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON REST Representational State Transfer SSDP Simple Service Discovery Protocol The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description Controller An internal plugin that allows activating and deactivating of services/plugins configured for use in the framework. callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description DIAL DIAL protocol specification HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The DIAL Server plugin implements the server side of the DIAL protocol, allowing second-screen devices discovering and launching applications on a first-screen device, utilizing SSDP protocol and RESTful API. For more invormation about the DIAL protocol please refer to [ DIAL ]. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DIALServer ) classname string Class name: DIALServer locator string Library name: libWPEFrameworkDIALServer.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object Server configuration configuration.name string User-friendly name of the device configuration.model string Name of the device model configuration.description string Short description of the device configuration?.modelnumber string (optional) Device model number configuration?.modelurl string (optional) URL to device model website configuration.manufacturer string Name of the device manufacturer configuration?.manufacturerurl string (optional) URL to manufacturer website configuration?.serialnumber string (optional) Device serial number configuration?.upc string (optional) Device UPC barcode number (Universal Product Code) configuration?.interface string (optional) Server interface IP and port (default: SSDP multicast address and port) configuration?.webserver string (optional) Callsign of a service implementing the web server functionality (default: WebServer ) configuration?.switchboard string (optional) Callsign of a service implementing the switchboard functionality (default: SwitchBoard ). If defined and the service is available then start/stop requests will be relayed to the SwitchBoard rather than handled by the Controller directly. This is used only in non-passive mode configuration.apps array List of supported applications configuration.apps[#] object (an application definition) configuration.apps[#].name string Name of the application configuration.apps[#]?.handler string (optional) Name of the application handler. If not defined then name will be used instead configuration.apps[#]?.callsign string (optional) Callsign of the service implementing the application. If defined and the service is available then the Controller will be used to unconditionally start/stop the application by activating/deactivating its service directly (active mode), or by the SwitchBoard if selected and available (switchboard mode). If not defined then these operations will be handed over to JavaScript, by sending a notification and using handler (or name ) property to identify the application (passive mode) configuration.apps[#]?.url string (optional) A URL related to the application configuration.apps[#]?.allowstop boolean (optional) Denotes if the application can be stopped (true) or not (false, default) Properties The following properties are provided by the DIALServer plugin: DIALServer interface properties: Property Description state Current application running state state property Provides access to the current application running state. Description This property can be used to update the running status of an un-managed application (i.e. running in passive mode ). For DIALServer-managed applications this property shall be considered read-only . Value Name Type Description (property) string Current application running state (must be one of the following: Stopped , Started , Hidden ) The application name argument shall be passed as the index to the property, e.g. DIALServer.1.state@YouTube . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Specified application does not exist 5 ERROR_ILLEGAL_STATE Specified application is running in active mode Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Stopped\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\", \"params\": \"Stopped\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DIALServer plugin: DIALServer interface events: Event Description start Signals that application launch (or show if previously hidden) was requested over DIAL stop Signals that application stop was requested over DIAL hide Signals that application hide was requested over DIAL show Signals that application show was requested over DIAL change Signals that application URL change was requested over DIAL start event Signals that application launch (or show if previously hidden) was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name params?.parameters string (optional) Additional application-specific parameters params?.payload string (optional) Additional application-specific payload Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.start\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\", \"payload\": \"...\" } } stop event Signals that application stop was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name params?.parameters string (optional) Additional application-specific parameters Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.stop\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\" } } hide event Signals that application hide was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.hide\", \"params\": { \"application\": \"YouTube\" } } show event Signals that application show was requested over DIAL. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.show\", \"params\": { \"application\": \"YouTube\" } } change event Signals that application URL change was requested over DIAL. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object params.application string Application name Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.change\", \"params\": { \"application\": \"YouTube\" } }","title":"DIALServerPlugin"},{"location":"DIALServerPlugin/#dial-server-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::white_circle: DIALServer plugin for Thunder framework.","title":"DIAL Server Plugin"},{"location":"DIALServerPlugin/#table-of-contents","text":"Introduction Description Configuration Properties Notifications","title":"Table of Contents"},{"location":"DIALServerPlugin/#introduction","text":"","title":"Introduction"},{"location":"DIALServerPlugin/#scope","text":"This document describes purpose and functionality of the DIALServer plugin. It includes detailed specification about its configuration, properties provided and notifications sent.","title":"Scope"},{"location":"DIALServerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DIALServerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface DIAL Discovery and Launch HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON REST Representational State Transfer SSDP Simple Service Discovery Protocol The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description Controller An internal plugin that allows activating and deactivating of services/plugins configured for use in the framework. callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DIALServerPlugin/#references","text":"Ref ID Description DIAL DIAL protocol specification HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DIALServerPlugin/#description","text":"The DIAL Server plugin implements the server side of the DIAL protocol, allowing second-screen devices discovering and launching applications on a first-screen device, utilizing SSDP protocol and RESTful API. For more invormation about the DIAL protocol please refer to [ DIAL ]. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"DIALServerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DIALServer ) classname string Class name: DIALServer locator string Library name: libWPEFrameworkDIALServer.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object Server configuration configuration.name string User-friendly name of the device configuration.model string Name of the device model configuration.description string Short description of the device configuration?.modelnumber string (optional) Device model number configuration?.modelurl string (optional) URL to device model website configuration.manufacturer string Name of the device manufacturer configuration?.manufacturerurl string (optional) URL to manufacturer website configuration?.serialnumber string (optional) Device serial number configuration?.upc string (optional) Device UPC barcode number (Universal Product Code) configuration?.interface string (optional) Server interface IP and port (default: SSDP multicast address and port) configuration?.webserver string (optional) Callsign of a service implementing the web server functionality (default: WebServer ) configuration?.switchboard string (optional) Callsign of a service implementing the switchboard functionality (default: SwitchBoard ). If defined and the service is available then start/stop requests will be relayed to the SwitchBoard rather than handled by the Controller directly. This is used only in non-passive mode configuration.apps array List of supported applications configuration.apps[#] object (an application definition) configuration.apps[#].name string Name of the application configuration.apps[#]?.handler string (optional) Name of the application handler. If not defined then name will be used instead configuration.apps[#]?.callsign string (optional) Callsign of the service implementing the application. If defined and the service is available then the Controller will be used to unconditionally start/stop the application by activating/deactivating its service directly (active mode), or by the SwitchBoard if selected and available (switchboard mode). If not defined then these operations will be handed over to JavaScript, by sending a notification and using handler (or name ) property to identify the application (passive mode) configuration.apps[#]?.url string (optional) A URL related to the application configuration.apps[#]?.allowstop boolean (optional) Denotes if the application can be stopped (true) or not (false, default)","title":"Configuration"},{"location":"DIALServerPlugin/#properties","text":"The following properties are provided by the DIALServer plugin: DIALServer interface properties: Property Description state Current application running state","title":"Properties"},{"location":"DIALServerPlugin/#state-property","text":"Provides access to the current application running state.","title":"state property"},{"location":"DIALServerPlugin/#description_1","text":"This property can be used to update the running status of an un-managed application (i.e. running in passive mode ). For DIALServer-managed applications this property shall be considered read-only .","title":"Description"},{"location":"DIALServerPlugin/#value","text":"Name Type Description (property) string Current application running state (must be one of the following: Stopped , Started , Hidden ) The application name argument shall be passed as the index to the property, e.g. DIALServer.1.state@YouTube .","title":"Value"},{"location":"DIALServerPlugin/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Specified application does not exist 5 ERROR_ILLEGAL_STATE Specified application is running in active mode","title":"Errors"},{"location":"DIALServerPlugin/#example","text":"","title":"Example"},{"location":"DIALServerPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\" }","title":"Get Request"},{"location":"DIALServerPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Stopped\" }","title":"Get Response"},{"location":"DIALServerPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\", \"params\": \"Stopped\" }","title":"Set Request"},{"location":"DIALServerPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"DIALServerPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DIALServer plugin: DIALServer interface events: Event Description start Signals that application launch (or show if previously hidden) was requested over DIAL stop Signals that application stop was requested over DIAL hide Signals that application hide was requested over DIAL show Signals that application show was requested over DIAL change Signals that application URL change was requested over DIAL","title":"Notifications"},{"location":"DIALServerPlugin/#start-event","text":"Signals that application launch (or show if previously hidden) was requested over DIAL.","title":"start event"},{"location":"DIALServerPlugin/#description_2","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerPlugin/#parameters","text":"Name Type Description params object params.application string Application name params?.parameters string (optional) Additional application-specific parameters params?.payload string (optional) Additional application-specific payload","title":"Parameters"},{"location":"DIALServerPlugin/#example_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.start\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\", \"payload\": \"...\" } }","title":"Example"},{"location":"DIALServerPlugin/#stop-event","text":"Signals that application stop was requested over DIAL.","title":"stop event"},{"location":"DIALServerPlugin/#description_3","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerPlugin/#parameters_1","text":"Name Type Description params object params.application string Application name params?.parameters string (optional) Additional application-specific parameters","title":"Parameters"},{"location":"DIALServerPlugin/#example_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.stop\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\" } }","title":"Example"},{"location":"DIALServerPlugin/#hide-event","text":"Signals that application hide was requested over DIAL.","title":"hide event"},{"location":"DIALServerPlugin/#description_4","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerPlugin/#parameters_2","text":"Name Type Description params object params.application string Application name","title":"Parameters"},{"location":"DIALServerPlugin/#example_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.hide\", \"params\": { \"application\": \"YouTube\" } }","title":"Example"},{"location":"DIALServerPlugin/#show-event","text":"Signals that application show was requested over DIAL. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations.","title":"show event"},{"location":"DIALServerPlugin/#description_5","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerPlugin/#parameters_3","text":"Name Type Description params object params.application string Application name","title":"Parameters"},{"location":"DIALServerPlugin/#example_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.show\", \"params\": { \"application\": \"YouTube\" } }","title":"Example"},{"location":"DIALServerPlugin/#change-event","text":"Signals that application URL change was requested over DIAL. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations.","title":"change event"},{"location":"DIALServerPlugin/#description_6","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"DIALServerPlugin/#parameters_4","text":"Name Type Description params object params.application string Application name","title":"Parameters"},{"location":"DIALServerPlugin/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.change\", \"params\": { \"application\": \"YouTube\" } }","title":"Example"},{"location":"DTVAPI/","text":"DTV API Version: 1.0 Status: :black_circle::white_circle::white_circle: DTV interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the DTV interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DTV JSON-RPC interface. Methods The following methods are provided by the DTV interface: DTV interface methods: Method Description addLnb Add a new LNB to the database addSatellite Add a new satellite to the database startServiceSearch Starts a service search finishServiceSearch startPlaying stopPlaying addLnb method Add a new LNB to the database. Parameters Name Type Description params object params.name string params.type string (must be one of the following: single , universal , unicable ) params.power string (must be one of the following: off , on , auto ) params.diseqc_tone string (must be one of the following: off , a , b ) params.diseqc_cswitch string (must be one of the following: off , a , b , c , d ) params.is22k boolean params.is12v boolean params.ispulseposition boolean params.isdiseqcposition boolean params.issmatv boolean params.diseqcrepeats number params.u_switch number params.unicablechannel number params.unicableinterface number Result Name Type Description result boolean true if the LNB is added, false otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addLnb\", \"params\": { \"name\": \"Universal\", \"type\": \"single\", \"power\": \"off\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicableinterface\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } addSatellite method Add a new satellite to the database. Parameters Name Type Description params object params.name string params.longitude number Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 params.lnb string Name of the LNB settings to be used when tuning to this satellite Result Name Type Description result boolean true if the satellite is added, false otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addSatellite\", \"params\": { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } startServiceSearch method Starts a service search. Also see: searchstatus Parameters Name Type Description params object params.tunertype string (must be one of the following: none , dvbs , dvbt , dvbc ) params.searchtype string (must be one of the following: frequency , network ) params.retune boolean true if current services are to be replaced in the database, false if the scan is to update the existing services params.usetuningparams boolean Set to true if the optional tuning parameters are defined params?.dvbstuningparams object (optional) params?.dvbstuningparams.satellite string params?.dvbstuningparams.frequency number params?.dvbstuningparams.polarity string (must be one of the following: horizontal , vertical , left , right ) params?.dvbstuningparams.symbolrate number params?.dvbstuningparams.fec string Forward error correction setting (must be one of the following: fecauto , fec1_2 , fec2_3 , fec3_4 , fec5_6 , fec7_8 , fec1_4 , fec1_3 , fec2_5 , fec8_9 , fec9_10 ) params?.dvbstuningparams.modulation string (must be one of the following: auto , qpsk , 8psk , 16qam ) params?.dvbstuningparams.dvbs2 boolean params?.dvbctuningparams object (optional) params?.dvbctuningparams.frequency number params?.dvbctuningparams.symbolrate number params?.dvbctuningparams.modulation string (must be one of the following: auto , 64qam , 128qam , 256qam ) Result Name Type Description result boolean true if the search is started, false otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startServiceSearch\", \"params\": { \"tunertype\": \"none\", \"searchtype\": \"frequency\", \"retune\": false, \"usetuningparams\": true, \"dvbstuningparams\": { \"satellite\": \"...\", \"frequency\": 10714, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fecauto\", \"modulation\": \"auto\", \"dvbs2\": false }, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"auto\" } } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } finishServiceSearch method Parameters Name Type Description params object params.tunertype string (must be one of the following: none , dvbs , dvbt , dvbc ) params.savechanges boolean true if the services found during the search should be saved Result Name Type Description result boolean false if the tunertype isn't valid, true otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.finishServiceSearch\", \"params\": { \"tunertype\": \"none\", \"savechanges\": true } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } startPlaying method Parameters Name Type Description params object params?.dvburi string (optional) DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params?.lcn number (optional) LCN of the service to be tuned to Result Name Type Description result number The play handle assigned to play the given service. Will be -1 if the service can't be played Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startPlaying\", \"params\": { \"dvburi\": \"2.2041.9212\", \"lcn\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } stopPlaying method Parameters Name Type Description params number The play handle returned by startPlaying Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.stopPlaying\", \"params\": 0 } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the DTV interface: DTV interface properties: Property Description numberOfCountries RO Number of country configurations available countryList RO Returns an array containing the name and 3 character ISO country code for all the available country configurations country Get and set the configured country using the ISO 3-character country code lnbList RO Returns the array of LNBs defined in the database satelliteList RO Returns the array of satellites defined in the database numberOfServices RO Returns the total number of services in the service database serviceList RO Returns the list of services for the given type of tuner, or all services if no tuner is defined nowNextEvents RO Get the now and next events (EITp/f) for the given service scheduleEvents RO Get the schedule events (EITsched) for the given service status RO Returns information related to the play handle defined by the index numberOfCountries property Provides access to the number of country configurations available. This property is read-only . Value Name Type Description (property) number Number of country configurations available Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfCountries\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 5 } countryList property Provides access to the returns an array containing the name and 3 character ISO country code for all the available country configurations. This property is read-only . Value Name Type Description (property) array List of available country configurations (property)[#] object (property)[#].name string Name of the country as a UTF-8 string (property)[#].code number 3-character ISO code for the country Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.countryList\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"UK\", \"code\": 6775410 } ] } country property Provides access to the get and set the configured country using the ISO 3-character country code. Value Name Type Description (property) number 3-character ISO code for the country Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 6775410 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\", \"params\": 6775410 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } lnbList property Provides access to the returns the array of LNBs defined in the database. This property is read-only . Value Name Type Description (property) array Returns the array of LNBs defined in the database (property)[#] object (property)[#].name string (property)[#].type string (must be one of the following: single , universal , unicable ) (property)[#].power string (must be one of the following: off , on , auto ) (property)[#].diseqc_tone string (must be one of the following: off , a , b ) (property)[#].diseqc_cswitch string (must be one of the following: off , a , b , c , d ) (property)[#].is22k boolean (property)[#].is12v boolean (property)[#].ispulseposition boolean (property)[#].isdiseqcposition boolean (property)[#].issmatv boolean (property)[#].diseqcrepeats number (property)[#].u_switch number (property)[#].unicablechannel number (property)[#].unicableinterface number Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.lnbList\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Universal\", \"type\": \"single\", \"power\": \"off\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicableinterface\": 0 } ] } satelliteList property Provides access to the returns the array of satellites defined in the database. This property is read-only . Value Name Type Description (property) array Returns the array of satellites defined in the database (property)[#] object (property)[#].name string (property)[#].longitude number Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 (property)[#].lnb string Name of the LNB settings to be used when tuning to this satellite Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.satelliteList\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } ] } numberOfServices property Provides access to the returns the total number of services in the service database. This property is read-only . Value Name Type Description (property) number Returns the total number of services in the service database Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfServices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 145 } serviceList property Provides access to the returns the list of services for the given type of tuner, or all services if no tuner is defined. This property is read-only . Value Name Type Description (property) array Returns the list of services for the given type of tuner, or all services if no tuner is defined (property)[#] object (property)[#].shortname string Service name as given by the service descriptor in the SDT (property)[#].dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal (property)[#].lcn number Logical channel number The optional tuner type argument shall be passed as the index to the property, e.g. DTV.1.serviceList@dvbs . Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceList@dvbs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"shortname\": \"Channel 4\", \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } ] } nowNextEvents property Provides access to the get the now and next events (EITp/f) for the given service. This property is read-only . Value Name Type Description (property) object Get the now and next events (EITp/f) for the given service (property)?.now object (optional) EIT event information (property)?.now.name string Name of the DVB event as defined in the short event descriptor (property)?.now.starttime number UTC start time of the event in seconds (property)?.now.duration number Duration of the event in seconds (property)?.now.eventid number ID of the event from the event information table (property)?.now.shortdescription string Event description from the EIT short event descriptor (property)?.next object (optional) EIT event information (property)?.next.name string Name of the DVB event as defined in the short event descriptor (property)?.next.starttime number UTC start time of the event in seconds (property)?.next.duration number Duration of the event in seconds (property)?.next.eventid number ID of the event from the event information table (property)?.next.shortdescription string Event description from the EIT short event descriptor The service uri string argument shall be passed as the index to the property, e.g. DTV.1.nowNextEvents@9018.4161.1001 . Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.nowNextEvents@9018.4161.1001\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"now\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" }, \"next\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" } } } scheduleEvents property Provides access to the get the schedule events (EITsched) for the given service. This property is read-only . Value Name Type Description (property) array Get the schedule events (EITsched) for the given service (property)[#] object EIT event information (property)[#].name string Name of the DVB event as defined in the short event descriptor (property)[#].starttime number UTC start time of the event in seconds (property)[#].duration number Duration of the event in seconds (property)[#].eventid number ID of the event from the event information table (property)[#].shortdescription string Event description from the EIT short event descriptor The service uri string, with optional start and end times as number of seconds utc argument shall be passed as the index to the property, e.g. DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000 . Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" } ] } status property Provides access to the returns information related to the play handle defined by the index. This property is read-only . Value Name Type Description (property) object Returns information related to the play handle defined by the index (property).tuner number The tuner id used by the play handle (property).demux number The demux id used by the play handle (property).pmtpid number The PMT PID of the service being played (property).dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal (property).lcn number LCN of the service being played The play handle argument shall be passed as the index to the property, e.g. DTV.1.status@0 . Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.status@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"tuner\": 0, \"demux\": 0, \"pmtpid\": 1100, \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DTV interface: DTV interface events: Event Description searchstatus Used to notify about events during the course of a service search searchstatus event Used to notify about events during the course of a service search. Parameters Name Type Description params object params.handle number The handle assigned for the search and to which this information is relevant params.eventtype string Event type that's sent as an asynchronous notification (must be one of the following: ServiceSearchStatus ) params.finished boolean true if the service search has finished, false otherwise params.progress number Progress of the search expressed as a percentage Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.searchstatus\", \"params\": { \"handle\": 0, \"eventtype\": \"ServiceSearchStatus\", \"finished\": false, \"progress\": 65 } }","title":"DTVAPI"},{"location":"DTVAPI/#dtv-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: DTV interface for Thunder framework.","title":"DTV API"},{"location":"DTVAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"DTVAPI/#introduction","text":"","title":"Introduction"},{"location":"DTVAPI/#scope","text":"This document describes purpose and functionality of the DTV interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"DTVAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DTVAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DTVAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DTVAPI/#description","text":"DTV JSON-RPC interface.","title":"Description"},{"location":"DTVAPI/#methods","text":"The following methods are provided by the DTV interface: DTV interface methods: Method Description addLnb Add a new LNB to the database addSatellite Add a new satellite to the database startServiceSearch Starts a service search finishServiceSearch startPlaying stopPlaying","title":"Methods"},{"location":"DTVAPI/#addlnb-method","text":"Add a new LNB to the database.","title":"addLnb method"},{"location":"DTVAPI/#parameters","text":"Name Type Description params object params.name string params.type string (must be one of the following: single , universal , unicable ) params.power string (must be one of the following: off , on , auto ) params.diseqc_tone string (must be one of the following: off , a , b ) params.diseqc_cswitch string (must be one of the following: off , a , b , c , d ) params.is22k boolean params.is12v boolean params.ispulseposition boolean params.isdiseqcposition boolean params.issmatv boolean params.diseqcrepeats number params.u_switch number params.unicablechannel number params.unicableinterface number","title":"Parameters"},{"location":"DTVAPI/#result","text":"Name Type Description result boolean true if the LNB is added, false otherwise","title":"Result"},{"location":"DTVAPI/#example","text":"","title":"Example"},{"location":"DTVAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addLnb\", \"params\": { \"name\": \"Universal\", \"type\": \"single\", \"power\": \"off\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicableinterface\": 0 } }","title":"Request"},{"location":"DTVAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"DTVAPI/#addsatellite-method","text":"Add a new satellite to the database.","title":"addSatellite method"},{"location":"DTVAPI/#parameters_1","text":"Name Type Description params object params.name string params.longitude number Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 params.lnb string Name of the LNB settings to be used when tuning to this satellite","title":"Parameters"},{"location":"DTVAPI/#result_1","text":"Name Type Description result boolean true if the satellite is added, false otherwise","title":"Result"},{"location":"DTVAPI/#example_1","text":"","title":"Example"},{"location":"DTVAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addSatellite\", \"params\": { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } }","title":"Request"},{"location":"DTVAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"DTVAPI/#startservicesearch-method","text":"Starts a service search. Also see: searchstatus","title":"startServiceSearch method"},{"location":"DTVAPI/#parameters_2","text":"Name Type Description params object params.tunertype string (must be one of the following: none , dvbs , dvbt , dvbc ) params.searchtype string (must be one of the following: frequency , network ) params.retune boolean true if current services are to be replaced in the database, false if the scan is to update the existing services params.usetuningparams boolean Set to true if the optional tuning parameters are defined params?.dvbstuningparams object (optional) params?.dvbstuningparams.satellite string params?.dvbstuningparams.frequency number params?.dvbstuningparams.polarity string (must be one of the following: horizontal , vertical , left , right ) params?.dvbstuningparams.symbolrate number params?.dvbstuningparams.fec string Forward error correction setting (must be one of the following: fecauto , fec1_2 , fec2_3 , fec3_4 , fec5_6 , fec7_8 , fec1_4 , fec1_3 , fec2_5 , fec8_9 , fec9_10 ) params?.dvbstuningparams.modulation string (must be one of the following: auto , qpsk , 8psk , 16qam ) params?.dvbstuningparams.dvbs2 boolean params?.dvbctuningparams object (optional) params?.dvbctuningparams.frequency number params?.dvbctuningparams.symbolrate number params?.dvbctuningparams.modulation string (must be one of the following: auto , 64qam , 128qam , 256qam )","title":"Parameters"},{"location":"DTVAPI/#result_2","text":"Name Type Description result boolean true if the search is started, false otherwise","title":"Result"},{"location":"DTVAPI/#example_2","text":"","title":"Example"},{"location":"DTVAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startServiceSearch\", \"params\": { \"tunertype\": \"none\", \"searchtype\": \"frequency\", \"retune\": false, \"usetuningparams\": true, \"dvbstuningparams\": { \"satellite\": \"...\", \"frequency\": 10714, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fecauto\", \"modulation\": \"auto\", \"dvbs2\": false }, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"auto\" } } }","title":"Request"},{"location":"DTVAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"DTVAPI/#finishservicesearch-method","text":"","title":"finishServiceSearch method"},{"location":"DTVAPI/#parameters_3","text":"Name Type Description params object params.tunertype string (must be one of the following: none , dvbs , dvbt , dvbc ) params.savechanges boolean true if the services found during the search should be saved","title":"Parameters"},{"location":"DTVAPI/#result_3","text":"Name Type Description result boolean false if the tunertype isn't valid, true otherwise","title":"Result"},{"location":"DTVAPI/#example_3","text":"","title":"Example"},{"location":"DTVAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.finishServiceSearch\", \"params\": { \"tunertype\": \"none\", \"savechanges\": true } }","title":"Request"},{"location":"DTVAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"DTVAPI/#startplaying-method","text":"","title":"startPlaying method"},{"location":"DTVAPI/#parameters_4","text":"Name Type Description params object params?.dvburi string (optional) DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params?.lcn number (optional) LCN of the service to be tuned to","title":"Parameters"},{"location":"DTVAPI/#result_4","text":"Name Type Description result number The play handle assigned to play the given service. Will be -1 if the service can't be played","title":"Result"},{"location":"DTVAPI/#example_4","text":"","title":"Example"},{"location":"DTVAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startPlaying\", \"params\": { \"dvburi\": \"2.2041.9212\", \"lcn\": 0 } }","title":"Request"},{"location":"DTVAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"DTVAPI/#stopplaying-method","text":"","title":"stopPlaying method"},{"location":"DTVAPI/#parameters_5","text":"Name Type Description params number The play handle returned by startPlaying","title":"Parameters"},{"location":"DTVAPI/#result_5","text":"Name Type Description result null Always null","title":"Result"},{"location":"DTVAPI/#example_5","text":"","title":"Example"},{"location":"DTVAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.stopPlaying\", \"params\": 0 }","title":"Request"},{"location":"DTVAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"DTVAPI/#properties","text":"The following properties are provided by the DTV interface: DTV interface properties: Property Description numberOfCountries RO Number of country configurations available countryList RO Returns an array containing the name and 3 character ISO country code for all the available country configurations country Get and set the configured country using the ISO 3-character country code lnbList RO Returns the array of LNBs defined in the database satelliteList RO Returns the array of satellites defined in the database numberOfServices RO Returns the total number of services in the service database serviceList RO Returns the list of services for the given type of tuner, or all services if no tuner is defined nowNextEvents RO Get the now and next events (EITp/f) for the given service scheduleEvents RO Get the schedule events (EITsched) for the given service status RO Returns information related to the play handle defined by the index","title":"Properties"},{"location":"DTVAPI/#numberofcountries-property","text":"Provides access to the number of country configurations available. This property is read-only .","title":"numberOfCountries property"},{"location":"DTVAPI/#value","text":"Name Type Description (property) number Number of country configurations available","title":"Value"},{"location":"DTVAPI/#example_6","text":"","title":"Example"},{"location":"DTVAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfCountries\" }","title":"Get Request"},{"location":"DTVAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 5 }","title":"Get Response"},{"location":"DTVAPI/#countrylist-property","text":"Provides access to the returns an array containing the name and 3 character ISO country code for all the available country configurations. This property is read-only .","title":"countryList property"},{"location":"DTVAPI/#value_1","text":"Name Type Description (property) array List of available country configurations (property)[#] object (property)[#].name string Name of the country as a UTF-8 string (property)[#].code number 3-character ISO code for the country","title":"Value"},{"location":"DTVAPI/#example_7","text":"","title":"Example"},{"location":"DTVAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.countryList\" }","title":"Get Request"},{"location":"DTVAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"UK\", \"code\": 6775410 } ] }","title":"Get Response"},{"location":"DTVAPI/#country-property","text":"Provides access to the get and set the configured country using the ISO 3-character country code.","title":"country property"},{"location":"DTVAPI/#value_2","text":"Name Type Description (property) number 3-character ISO code for the country","title":"Value"},{"location":"DTVAPI/#example_8","text":"","title":"Example"},{"location":"DTVAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\" }","title":"Get Request"},{"location":"DTVAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 6775410 }","title":"Get Response"},{"location":"DTVAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\", \"params\": 6775410 }","title":"Set Request"},{"location":"DTVAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"DTVAPI/#lnblist-property","text":"Provides access to the returns the array of LNBs defined in the database. This property is read-only .","title":"lnbList property"},{"location":"DTVAPI/#value_3","text":"Name Type Description (property) array Returns the array of LNBs defined in the database (property)[#] object (property)[#].name string (property)[#].type string (must be one of the following: single , universal , unicable ) (property)[#].power string (must be one of the following: off , on , auto ) (property)[#].diseqc_tone string (must be one of the following: off , a , b ) (property)[#].diseqc_cswitch string (must be one of the following: off , a , b , c , d ) (property)[#].is22k boolean (property)[#].is12v boolean (property)[#].ispulseposition boolean (property)[#].isdiseqcposition boolean (property)[#].issmatv boolean (property)[#].diseqcrepeats number (property)[#].u_switch number (property)[#].unicablechannel number (property)[#].unicableinterface number","title":"Value"},{"location":"DTVAPI/#example_9","text":"","title":"Example"},{"location":"DTVAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.lnbList\" }","title":"Get Request"},{"location":"DTVAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Universal\", \"type\": \"single\", \"power\": \"off\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicableinterface\": 0 } ] }","title":"Get Response"},{"location":"DTVAPI/#satellitelist-property","text":"Provides access to the returns the array of satellites defined in the database. This property is read-only .","title":"satelliteList property"},{"location":"DTVAPI/#value_4","text":"Name Type Description (property) array Returns the array of satellites defined in the database (property)[#] object (property)[#].name string (property)[#].longitude number Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 (property)[#].lnb string Name of the LNB settings to be used when tuning to this satellite","title":"Value"},{"location":"DTVAPI/#example_10","text":"","title":"Example"},{"location":"DTVAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.satelliteList\" }","title":"Get Request"},{"location":"DTVAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } ] }","title":"Get Response"},{"location":"DTVAPI/#numberofservices-property","text":"Provides access to the returns the total number of services in the service database. This property is read-only .","title":"numberOfServices property"},{"location":"DTVAPI/#value_5","text":"Name Type Description (property) number Returns the total number of services in the service database","title":"Value"},{"location":"DTVAPI/#example_11","text":"","title":"Example"},{"location":"DTVAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfServices\" }","title":"Get Request"},{"location":"DTVAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 145 }","title":"Get Response"},{"location":"DTVAPI/#servicelist-property","text":"Provides access to the returns the list of services for the given type of tuner, or all services if no tuner is defined. This property is read-only .","title":"serviceList property"},{"location":"DTVAPI/#value_6","text":"Name Type Description (property) array Returns the list of services for the given type of tuner, or all services if no tuner is defined (property)[#] object (property)[#].shortname string Service name as given by the service descriptor in the SDT (property)[#].dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal (property)[#].lcn number Logical channel number The optional tuner type argument shall be passed as the index to the property, e.g. DTV.1.serviceList@dvbs .","title":"Value"},{"location":"DTVAPI/#example_12","text":"","title":"Example"},{"location":"DTVAPI/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceList@dvbs\" }","title":"Get Request"},{"location":"DTVAPI/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"shortname\": \"Channel 4\", \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } ] }","title":"Get Response"},{"location":"DTVAPI/#nownextevents-property","text":"Provides access to the get the now and next events (EITp/f) for the given service. This property is read-only .","title":"nowNextEvents property"},{"location":"DTVAPI/#value_7","text":"Name Type Description (property) object Get the now and next events (EITp/f) for the given service (property)?.now object (optional) EIT event information (property)?.now.name string Name of the DVB event as defined in the short event descriptor (property)?.now.starttime number UTC start time of the event in seconds (property)?.now.duration number Duration of the event in seconds (property)?.now.eventid number ID of the event from the event information table (property)?.now.shortdescription string Event description from the EIT short event descriptor (property)?.next object (optional) EIT event information (property)?.next.name string Name of the DVB event as defined in the short event descriptor (property)?.next.starttime number UTC start time of the event in seconds (property)?.next.duration number Duration of the event in seconds (property)?.next.eventid number ID of the event from the event information table (property)?.next.shortdescription string Event description from the EIT short event descriptor The service uri string argument shall be passed as the index to the property, e.g. DTV.1.nowNextEvents@9018.4161.1001 .","title":"Value"},{"location":"DTVAPI/#example_13","text":"","title":"Example"},{"location":"DTVAPI/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.nowNextEvents@9018.4161.1001\" }","title":"Get Request"},{"location":"DTVAPI/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"now\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" }, \"next\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" } } }","title":"Get Response"},{"location":"DTVAPI/#scheduleevents-property","text":"Provides access to the get the schedule events (EITsched) for the given service. This property is read-only .","title":"scheduleEvents property"},{"location":"DTVAPI/#value_8","text":"Name Type Description (property) array Get the schedule events (EITsched) for the given service (property)[#] object EIT event information (property)[#].name string Name of the DVB event as defined in the short event descriptor (property)[#].starttime number UTC start time of the event in seconds (property)[#].duration number Duration of the event in seconds (property)[#].eventid number ID of the event from the event information table (property)[#].shortdescription string Event description from the EIT short event descriptor The service uri string, with optional start and end times as number of seconds utc argument shall be passed as the index to the property, e.g. DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000 .","title":"Value"},{"location":"DTVAPI/#example_14","text":"","title":"Example"},{"location":"DTVAPI/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000\" }","title":"Get Request"},{"location":"DTVAPI/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" } ] }","title":"Get Response"},{"location":"DTVAPI/#status-property","text":"Provides access to the returns information related to the play handle defined by the index. This property is read-only .","title":"status property"},{"location":"DTVAPI/#value_9","text":"Name Type Description (property) object Returns information related to the play handle defined by the index (property).tuner number The tuner id used by the play handle (property).demux number The demux id used by the play handle (property).pmtpid number The PMT PID of the service being played (property).dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal (property).lcn number LCN of the service being played The play handle argument shall be passed as the index to the property, e.g. DTV.1.status@0 .","title":"Value"},{"location":"DTVAPI/#example_15","text":"","title":"Example"},{"location":"DTVAPI/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.status@0\" }","title":"Get Request"},{"location":"DTVAPI/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"tuner\": 0, \"demux\": 0, \"pmtpid\": 1100, \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } }","title":"Get Response"},{"location":"DTVAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DTV interface: DTV interface events: Event Description searchstatus Used to notify about events during the course of a service search","title":"Notifications"},{"location":"DTVAPI/#searchstatus-event","text":"Used to notify about events during the course of a service search.","title":"searchstatus event"},{"location":"DTVAPI/#parameters_6","text":"Name Type Description params object params.handle number The handle assigned for the search and to which this information is relevant params.eventtype string Event type that's sent as an asynchronous notification (must be one of the following: ServiceSearchStatus ) params.finished boolean true if the service search has finished, false otherwise params.progress number Progress of the search expressed as a percentage","title":"Parameters"},{"location":"DTVAPI/#example_16","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.searchstatus\", \"params\": { \"handle\": 0, \"eventtype\": \"ServiceSearchStatus\", \"finished\": false, \"progress\": 65 } }","title":"Example"},{"location":"DTVPlugin/","text":"DTV Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: DTV plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the DTV plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The DTV plugin provides access to DVB services provided by a DVB stack. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DTV ) classname string Class name: DTV locator string Library name: libWPEFrameworkDTV.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.subtitleprocessing boolean (optional) Enable subtitle processing configuration?.teletextproessing boolean (optional) Enable teletext processing Methods The following methods are provided by the DTV plugin: DTV interface methods: Method Description addLnb Add a new LNB to the database addSatellite Add a new satellite to the database startServiceSearch Starts a service search finishServiceSearch startPlaying stopPlaying addLnb method Add a new LNB to the database. Parameters Name Type Description params object params.name string params.type string (must be one of the following: single , universal , unicable ) params.power string (must be one of the following: off , on , auto ) params.diseqc_tone string (must be one of the following: off , a , b ) params.diseqc_cswitch string (must be one of the following: off , a , b , c , d ) params.is22k boolean params.is12v boolean params.ispulseposition boolean params.isdiseqcposition boolean params.issmatv boolean params.diseqcrepeats number params.u_switch number params.unicablechannel number params.unicableinterface number Result Name Type Description result boolean true if the LNB is added, false otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addLnb\", \"params\": { \"name\": \"Universal\", \"type\": \"single\", \"power\": \"off\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicableinterface\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } addSatellite method Add a new satellite to the database. Parameters Name Type Description params object params.name string params.longitude number Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 params.lnb string Name of the LNB settings to be used when tuning to this satellite Result Name Type Description result boolean true if the satellite is added, false otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addSatellite\", \"params\": { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } startServiceSearch method Starts a service search. Also see: searchstatus Parameters Name Type Description params object params.tunertype string (must be one of the following: none , dvbs , dvbt , dvbc ) params.searchtype string (must be one of the following: frequency , network ) params.retune boolean true if current services are to be replaced in the database, false if the scan is to update the existing services params.usetuningparams boolean Set to true if the optional tuning parameters are defined params?.dvbstuningparams object (optional) params?.dvbstuningparams.satellite string params?.dvbstuningparams.frequency number params?.dvbstuningparams.polarity string (must be one of the following: horizontal , vertical , left , right ) params?.dvbstuningparams.symbolrate number params?.dvbstuningparams.fec string Forward error correction setting (must be one of the following: fecauto , fec1_2 , fec2_3 , fec3_4 , fec5_6 , fec7_8 , fec1_4 , fec1_3 , fec2_5 , fec8_9 , fec9_10 ) params?.dvbstuningparams.modulation string (must be one of the following: auto , qpsk , 8psk , 16qam ) params?.dvbstuningparams.dvbs2 boolean params?.dvbctuningparams object (optional) params?.dvbctuningparams.frequency number params?.dvbctuningparams.symbolrate number params?.dvbctuningparams.modulation string (must be one of the following: auto , 64qam , 128qam , 256qam ) Result Name Type Description result boolean true if the search is started, false otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startServiceSearch\", \"params\": { \"tunertype\": \"none\", \"searchtype\": \"frequency\", \"retune\": false, \"usetuningparams\": true, \"dvbstuningparams\": { \"satellite\": \"...\", \"frequency\": 10714, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fecauto\", \"modulation\": \"auto\", \"dvbs2\": false }, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"auto\" } } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } finishServiceSearch method Parameters Name Type Description params object params.tunertype string (must be one of the following: none , dvbs , dvbt , dvbc ) params.savechanges boolean true if the services found during the search should be saved Result Name Type Description result boolean false if the tunertype isn't valid, true otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.finishServiceSearch\", \"params\": { \"tunertype\": \"none\", \"savechanges\": true } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } startPlaying method Parameters Name Type Description params object params?.dvburi string (optional) DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params?.lcn number (optional) LCN of the service to be tuned to Result Name Type Description result number The play handle assigned to play the given service. Will be -1 if the service can't be played Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startPlaying\", \"params\": { \"dvburi\": \"2.2041.9212\", \"lcn\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } stopPlaying method Parameters Name Type Description params number The play handle returned by startPlaying Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.stopPlaying\", \"params\": 0 } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the DTV plugin: DTV interface properties: Property Description numberOfCountries RO Number of country configurations available countryList RO Returns an array containing the name and 3 character ISO country code for all the available country configurations country Get and set the configured country using the ISO 3-character country code lnbList RO Returns the array of LNBs defined in the database satelliteList RO Returns the array of satellites defined in the database numberOfServices RO Returns the total number of services in the service database serviceList RO Returns the list of services for the given type of tuner, or all services if no tuner is defined nowNextEvents RO Get the now and next events (EITp/f) for the given service scheduleEvents RO Get the schedule events (EITsched) for the given service status RO Returns information related to the play handle defined by the index numberOfCountries property Provides access to the number of country configurations available. This property is read-only . Value Name Type Description (property) number Number of country configurations available Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfCountries\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 5 } countryList property Provides access to the returns an array containing the name and 3 character ISO country code for all the available country configurations. This property is read-only . Value Name Type Description (property) array List of available country configurations (property)[#] object (property)[#].name string Name of the country as a UTF-8 string (property)[#].code number 3-character ISO code for the country Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.countryList\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"UK\", \"code\": 6775410 } ] } country property Provides access to the get and set the configured country using the ISO 3-character country code. Value Name Type Description (property) number 3-character ISO code for the country Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 6775410 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\", \"params\": 6775410 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } lnbList property Provides access to the returns the array of LNBs defined in the database. This property is read-only . Value Name Type Description (property) array Returns the array of LNBs defined in the database (property)[#] object (property)[#].name string (property)[#].type string (must be one of the following: single , universal , unicable ) (property)[#].power string (must be one of the following: off , on , auto ) (property)[#].diseqc_tone string (must be one of the following: off , a , b ) (property)[#].diseqc_cswitch string (must be one of the following: off , a , b , c , d ) (property)[#].is22k boolean (property)[#].is12v boolean (property)[#].ispulseposition boolean (property)[#].isdiseqcposition boolean (property)[#].issmatv boolean (property)[#].diseqcrepeats number (property)[#].u_switch number (property)[#].unicablechannel number (property)[#].unicableinterface number Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.lnbList\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Universal\", \"type\": \"single\", \"power\": \"off\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicableinterface\": 0 } ] } satelliteList property Provides access to the returns the array of satellites defined in the database. This property is read-only . Value Name Type Description (property) array Returns the array of satellites defined in the database (property)[#] object (property)[#].name string (property)[#].longitude number Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 (property)[#].lnb string Name of the LNB settings to be used when tuning to this satellite Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.satelliteList\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } ] } numberOfServices property Provides access to the returns the total number of services in the service database. This property is read-only . Value Name Type Description (property) number Returns the total number of services in the service database Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfServices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 145 } serviceList property Provides access to the returns the list of services for the given type of tuner, or all services if no tuner is defined. This property is read-only . Value Name Type Description (property) array Returns the list of services for the given type of tuner, or all services if no tuner is defined (property)[#] object (property)[#].shortname string Service name as given by the service descriptor in the SDT (property)[#].dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal (property)[#].lcn number Logical channel number The optional tuner type argument shall be passed as the index to the property, e.g. DTV.1.serviceList@dvbs . Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceList@dvbs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"shortname\": \"Channel 4\", \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } ] } nowNextEvents property Provides access to the get the now and next events (EITp/f) for the given service. This property is read-only . Value Name Type Description (property) object Get the now and next events (EITp/f) for the given service (property)?.now object (optional) EIT event information (property)?.now.name string Name of the DVB event as defined in the short event descriptor (property)?.now.starttime number UTC start time of the event in seconds (property)?.now.duration number Duration of the event in seconds (property)?.now.eventid number ID of the event from the event information table (property)?.now.shortdescription string Event description from the EIT short event descriptor (property)?.next object (optional) EIT event information (property)?.next.name string Name of the DVB event as defined in the short event descriptor (property)?.next.starttime number UTC start time of the event in seconds (property)?.next.duration number Duration of the event in seconds (property)?.next.eventid number ID of the event from the event information table (property)?.next.shortdescription string Event description from the EIT short event descriptor The service uri string argument shall be passed as the index to the property, e.g. DTV.1.nowNextEvents@9018.4161.1001 . Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.nowNextEvents@9018.4161.1001\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"now\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" }, \"next\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" } } } scheduleEvents property Provides access to the get the schedule events (EITsched) for the given service. This property is read-only . Value Name Type Description (property) array Get the schedule events (EITsched) for the given service (property)[#] object EIT event information (property)[#].name string Name of the DVB event as defined in the short event descriptor (property)[#].starttime number UTC start time of the event in seconds (property)[#].duration number Duration of the event in seconds (property)[#].eventid number ID of the event from the event information table (property)[#].shortdescription string Event description from the EIT short event descriptor The service uri string, with optional start and end times as number of seconds utc argument shall be passed as the index to the property, e.g. DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000 . Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" } ] } status property Provides access to the returns information related to the play handle defined by the index. This property is read-only . Value Name Type Description (property) object Returns information related to the play handle defined by the index (property).tuner number The tuner id used by the play handle (property).demux number The demux id used by the play handle (property).pmtpid number The PMT PID of the service being played (property).dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal (property).lcn number LCN of the service being played The play handle argument shall be passed as the index to the property, e.g. DTV.1.status@0 . Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.status@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"tuner\": 0, \"demux\": 0, \"pmtpid\": 1100, \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DTV plugin: DTV interface events: Event Description searchstatus Used to notify about events during the course of a service search searchstatus event Used to notify about events during the course of a service search. Parameters Name Type Description params object params.handle number The handle assigned for the search and to which this information is relevant params.eventtype string Event type that's sent as an asynchronous notification (must be one of the following: ServiceSearchStatus ) params.finished boolean true if the service search has finished, false otherwise params.progress number Progress of the search expressed as a percentage Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.searchstatus\", \"params\": { \"handle\": 0, \"eventtype\": \"ServiceSearchStatus\", \"finished\": false, \"progress\": 65 } }","title":"DTVPlugin"},{"location":"DTVPlugin/#dtv-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: DTV plugin for Thunder framework.","title":"DTV Plugin"},{"location":"DTVPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"DTVPlugin/#introduction","text":"","title":"Introduction"},{"location":"DTVPlugin/#scope","text":"This document describes purpose and functionality of the DTV plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"DTVPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DTVPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DTVPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DTVPlugin/#description","text":"The DTV plugin provides access to DVB services provided by a DVB stack. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"DTVPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DTV ) classname string Class name: DTV locator string Library name: libWPEFrameworkDTV.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.subtitleprocessing boolean (optional) Enable subtitle processing configuration?.teletextproessing boolean (optional) Enable teletext processing","title":"Configuration"},{"location":"DTVPlugin/#methods","text":"The following methods are provided by the DTV plugin: DTV interface methods: Method Description addLnb Add a new LNB to the database addSatellite Add a new satellite to the database startServiceSearch Starts a service search finishServiceSearch startPlaying stopPlaying","title":"Methods"},{"location":"DTVPlugin/#addlnb-method","text":"Add a new LNB to the database.","title":"addLnb method"},{"location":"DTVPlugin/#parameters","text":"Name Type Description params object params.name string params.type string (must be one of the following: single , universal , unicable ) params.power string (must be one of the following: off , on , auto ) params.diseqc_tone string (must be one of the following: off , a , b ) params.diseqc_cswitch string (must be one of the following: off , a , b , c , d ) params.is22k boolean params.is12v boolean params.ispulseposition boolean params.isdiseqcposition boolean params.issmatv boolean params.diseqcrepeats number params.u_switch number params.unicablechannel number params.unicableinterface number","title":"Parameters"},{"location":"DTVPlugin/#result","text":"Name Type Description result boolean true if the LNB is added, false otherwise","title":"Result"},{"location":"DTVPlugin/#example","text":"","title":"Example"},{"location":"DTVPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addLnb\", \"params\": { \"name\": \"Universal\", \"type\": \"single\", \"power\": \"off\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicableinterface\": 0 } }","title":"Request"},{"location":"DTVPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"DTVPlugin/#addsatellite-method","text":"Add a new satellite to the database.","title":"addSatellite method"},{"location":"DTVPlugin/#parameters_1","text":"Name Type Description params object params.name string params.longitude number Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 params.lnb string Name of the LNB settings to be used when tuning to this satellite","title":"Parameters"},{"location":"DTVPlugin/#result_1","text":"Name Type Description result boolean true if the satellite is added, false otherwise","title":"Result"},{"location":"DTVPlugin/#example_1","text":"","title":"Example"},{"location":"DTVPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addSatellite\", \"params\": { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } }","title":"Request"},{"location":"DTVPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"DTVPlugin/#startservicesearch-method","text":"Starts a service search. Also see: searchstatus","title":"startServiceSearch method"},{"location":"DTVPlugin/#parameters_2","text":"Name Type Description params object params.tunertype string (must be one of the following: none , dvbs , dvbt , dvbc ) params.searchtype string (must be one of the following: frequency , network ) params.retune boolean true if current services are to be replaced in the database, false if the scan is to update the existing services params.usetuningparams boolean Set to true if the optional tuning parameters are defined params?.dvbstuningparams object (optional) params?.dvbstuningparams.satellite string params?.dvbstuningparams.frequency number params?.dvbstuningparams.polarity string (must be one of the following: horizontal , vertical , left , right ) params?.dvbstuningparams.symbolrate number params?.dvbstuningparams.fec string Forward error correction setting (must be one of the following: fecauto , fec1_2 , fec2_3 , fec3_4 , fec5_6 , fec7_8 , fec1_4 , fec1_3 , fec2_5 , fec8_9 , fec9_10 ) params?.dvbstuningparams.modulation string (must be one of the following: auto , qpsk , 8psk , 16qam ) params?.dvbstuningparams.dvbs2 boolean params?.dvbctuningparams object (optional) params?.dvbctuningparams.frequency number params?.dvbctuningparams.symbolrate number params?.dvbctuningparams.modulation string (must be one of the following: auto , 64qam , 128qam , 256qam )","title":"Parameters"},{"location":"DTVPlugin/#result_2","text":"Name Type Description result boolean true if the search is started, false otherwise","title":"Result"},{"location":"DTVPlugin/#example_2","text":"","title":"Example"},{"location":"DTVPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startServiceSearch\", \"params\": { \"tunertype\": \"none\", \"searchtype\": \"frequency\", \"retune\": false, \"usetuningparams\": true, \"dvbstuningparams\": { \"satellite\": \"...\", \"frequency\": 10714, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fecauto\", \"modulation\": \"auto\", \"dvbs2\": false }, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"auto\" } } }","title":"Request"},{"location":"DTVPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"DTVPlugin/#finishservicesearch-method","text":"","title":"finishServiceSearch method"},{"location":"DTVPlugin/#parameters_3","text":"Name Type Description params object params.tunertype string (must be one of the following: none , dvbs , dvbt , dvbc ) params.savechanges boolean true if the services found during the search should be saved","title":"Parameters"},{"location":"DTVPlugin/#result_3","text":"Name Type Description result boolean false if the tunertype isn't valid, true otherwise","title":"Result"},{"location":"DTVPlugin/#example_3","text":"","title":"Example"},{"location":"DTVPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.finishServiceSearch\", \"params\": { \"tunertype\": \"none\", \"savechanges\": true } }","title":"Request"},{"location":"DTVPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"DTVPlugin/#startplaying-method","text":"","title":"startPlaying method"},{"location":"DTVPlugin/#parameters_4","text":"Name Type Description params object params?.dvburi string (optional) DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params?.lcn number (optional) LCN of the service to be tuned to","title":"Parameters"},{"location":"DTVPlugin/#result_4","text":"Name Type Description result number The play handle assigned to play the given service. Will be -1 if the service can't be played","title":"Result"},{"location":"DTVPlugin/#example_4","text":"","title":"Example"},{"location":"DTVPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startPlaying\", \"params\": { \"dvburi\": \"2.2041.9212\", \"lcn\": 0 } }","title":"Request"},{"location":"DTVPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"DTVPlugin/#stopplaying-method","text":"","title":"stopPlaying method"},{"location":"DTVPlugin/#parameters_5","text":"Name Type Description params number The play handle returned by startPlaying","title":"Parameters"},{"location":"DTVPlugin/#result_5","text":"Name Type Description result null Always null","title":"Result"},{"location":"DTVPlugin/#example_5","text":"","title":"Example"},{"location":"DTVPlugin/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.stopPlaying\", \"params\": 0 }","title":"Request"},{"location":"DTVPlugin/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"DTVPlugin/#properties","text":"The following properties are provided by the DTV plugin: DTV interface properties: Property Description numberOfCountries RO Number of country configurations available countryList RO Returns an array containing the name and 3 character ISO country code for all the available country configurations country Get and set the configured country using the ISO 3-character country code lnbList RO Returns the array of LNBs defined in the database satelliteList RO Returns the array of satellites defined in the database numberOfServices RO Returns the total number of services in the service database serviceList RO Returns the list of services for the given type of tuner, or all services if no tuner is defined nowNextEvents RO Get the now and next events (EITp/f) for the given service scheduleEvents RO Get the schedule events (EITsched) for the given service status RO Returns information related to the play handle defined by the index","title":"Properties"},{"location":"DTVPlugin/#numberofcountries-property","text":"Provides access to the number of country configurations available. This property is read-only .","title":"numberOfCountries property"},{"location":"DTVPlugin/#value","text":"Name Type Description (property) number Number of country configurations available","title":"Value"},{"location":"DTVPlugin/#example_6","text":"","title":"Example"},{"location":"DTVPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfCountries\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 5 }","title":"Get Response"},{"location":"DTVPlugin/#countrylist-property","text":"Provides access to the returns an array containing the name and 3 character ISO country code for all the available country configurations. This property is read-only .","title":"countryList property"},{"location":"DTVPlugin/#value_1","text":"Name Type Description (property) array List of available country configurations (property)[#] object (property)[#].name string Name of the country as a UTF-8 string (property)[#].code number 3-character ISO code for the country","title":"Value"},{"location":"DTVPlugin/#example_7","text":"","title":"Example"},{"location":"DTVPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.countryList\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"UK\", \"code\": 6775410 } ] }","title":"Get Response"},{"location":"DTVPlugin/#country-property","text":"Provides access to the get and set the configured country using the ISO 3-character country code.","title":"country property"},{"location":"DTVPlugin/#value_2","text":"Name Type Description (property) number 3-character ISO code for the country","title":"Value"},{"location":"DTVPlugin/#example_8","text":"","title":"Example"},{"location":"DTVPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 6775410 }","title":"Get Response"},{"location":"DTVPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\", \"params\": 6775410 }","title":"Set Request"},{"location":"DTVPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"DTVPlugin/#lnblist-property","text":"Provides access to the returns the array of LNBs defined in the database. This property is read-only .","title":"lnbList property"},{"location":"DTVPlugin/#value_3","text":"Name Type Description (property) array Returns the array of LNBs defined in the database (property)[#] object (property)[#].name string (property)[#].type string (must be one of the following: single , universal , unicable ) (property)[#].power string (must be one of the following: off , on , auto ) (property)[#].diseqc_tone string (must be one of the following: off , a , b ) (property)[#].diseqc_cswitch string (must be one of the following: off , a , b , c , d ) (property)[#].is22k boolean (property)[#].is12v boolean (property)[#].ispulseposition boolean (property)[#].isdiseqcposition boolean (property)[#].issmatv boolean (property)[#].diseqcrepeats number (property)[#].u_switch number (property)[#].unicablechannel number (property)[#].unicableinterface number","title":"Value"},{"location":"DTVPlugin/#example_9","text":"","title":"Example"},{"location":"DTVPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.lnbList\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Universal\", \"type\": \"single\", \"power\": \"off\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicableinterface\": 0 } ] }","title":"Get Response"},{"location":"DTVPlugin/#satellitelist-property","text":"Provides access to the returns the array of satellites defined in the database. This property is read-only .","title":"satelliteList property"},{"location":"DTVPlugin/#value_4","text":"Name Type Description (property) array Returns the array of satellites defined in the database (property)[#] object (property)[#].name string (property)[#].longitude number Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 (property)[#].lnb string Name of the LNB settings to be used when tuning to this satellite","title":"Value"},{"location":"DTVPlugin/#example_10","text":"","title":"Example"},{"location":"DTVPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.satelliteList\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } ] }","title":"Get Response"},{"location":"DTVPlugin/#numberofservices-property","text":"Provides access to the returns the total number of services in the service database. This property is read-only .","title":"numberOfServices property"},{"location":"DTVPlugin/#value_5","text":"Name Type Description (property) number Returns the total number of services in the service database","title":"Value"},{"location":"DTVPlugin/#example_11","text":"","title":"Example"},{"location":"DTVPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfServices\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 145 }","title":"Get Response"},{"location":"DTVPlugin/#servicelist-property","text":"Provides access to the returns the list of services for the given type of tuner, or all services if no tuner is defined. This property is read-only .","title":"serviceList property"},{"location":"DTVPlugin/#value_6","text":"Name Type Description (property) array Returns the list of services for the given type of tuner, or all services if no tuner is defined (property)[#] object (property)[#].shortname string Service name as given by the service descriptor in the SDT (property)[#].dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal (property)[#].lcn number Logical channel number The optional tuner type argument shall be passed as the index to the property, e.g. DTV.1.serviceList@dvbs .","title":"Value"},{"location":"DTVPlugin/#example_12","text":"","title":"Example"},{"location":"DTVPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceList@dvbs\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"shortname\": \"Channel 4\", \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } ] }","title":"Get Response"},{"location":"DTVPlugin/#nownextevents-property","text":"Provides access to the get the now and next events (EITp/f) for the given service. This property is read-only .","title":"nowNextEvents property"},{"location":"DTVPlugin/#value_7","text":"Name Type Description (property) object Get the now and next events (EITp/f) for the given service (property)?.now object (optional) EIT event information (property)?.now.name string Name of the DVB event as defined in the short event descriptor (property)?.now.starttime number UTC start time of the event in seconds (property)?.now.duration number Duration of the event in seconds (property)?.now.eventid number ID of the event from the event information table (property)?.now.shortdescription string Event description from the EIT short event descriptor (property)?.next object (optional) EIT event information (property)?.next.name string Name of the DVB event as defined in the short event descriptor (property)?.next.starttime number UTC start time of the event in seconds (property)?.next.duration number Duration of the event in seconds (property)?.next.eventid number ID of the event from the event information table (property)?.next.shortdescription string Event description from the EIT short event descriptor The service uri string argument shall be passed as the index to the property, e.g. DTV.1.nowNextEvents@9018.4161.1001 .","title":"Value"},{"location":"DTVPlugin/#example_13","text":"","title":"Example"},{"location":"DTVPlugin/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.nowNextEvents@9018.4161.1001\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"now\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" }, \"next\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" } } }","title":"Get Response"},{"location":"DTVPlugin/#scheduleevents-property","text":"Provides access to the get the schedule events (EITsched) for the given service. This property is read-only .","title":"scheduleEvents property"},{"location":"DTVPlugin/#value_8","text":"Name Type Description (property) array Get the schedule events (EITsched) for the given service (property)[#] object EIT event information (property)[#].name string Name of the DVB event as defined in the short event descriptor (property)[#].starttime number UTC start time of the event in seconds (property)[#].duration number Duration of the event in seconds (property)[#].eventid number ID of the event from the event information table (property)[#].shortdescription string Event description from the EIT short event descriptor The service uri string, with optional start and end times as number of seconds utc argument shall be passed as the index to the property, e.g. DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000 .","title":"Value"},{"location":"DTVPlugin/#example_14","text":"","title":"Example"},{"location":"DTVPlugin/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\" } ] }","title":"Get Response"},{"location":"DTVPlugin/#status-property","text":"Provides access to the returns information related to the play handle defined by the index. This property is read-only .","title":"status property"},{"location":"DTVPlugin/#value_9","text":"Name Type Description (property) object Returns information related to the play handle defined by the index (property).tuner number The tuner id used by the play handle (property).demux number The demux id used by the play handle (property).pmtpid number The PMT PID of the service being played (property).dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal (property).lcn number LCN of the service being played The play handle argument shall be passed as the index to the property, e.g. DTV.1.status@0 .","title":"Value"},{"location":"DTVPlugin/#example_15","text":"","title":"Example"},{"location":"DTVPlugin/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.status@0\" }","title":"Get Request"},{"location":"DTVPlugin/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"tuner\": 0, \"demux\": 0, \"pmtpid\": 1100, \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } }","title":"Get Response"},{"location":"DTVPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DTV plugin: DTV interface events: Event Description searchstatus Used to notify about events during the course of a service search","title":"Notifications"},{"location":"DTVPlugin/#searchstatus-event","text":"Used to notify about events during the course of a service search.","title":"searchstatus event"},{"location":"DTVPlugin/#parameters_6","text":"Name Type Description params object params.handle number The handle assigned for the search and to which this information is relevant params.eventtype string Event type that's sent as an asynchronous notification (must be one of the following: ServiceSearchStatus ) params.finished boolean true if the service search has finished, false otherwise params.progress number Progress of the search expressed as a percentage","title":"Parameters"},{"location":"DTVPlugin/#example_16","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.searchstatus\", \"params\": { \"handle\": 0, \"eventtype\": \"ServiceSearchStatus\", \"finished\": false, \"progress\": 65 } }","title":"Example"},{"location":"DeviceIdentificationAPI/","text":"Device Identification API Version: 1.0 Status: :black_circle::white_circle::white_circle: DeviceIdentification interface for Thunder framework. Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the DeviceIdentification interface. It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DeviceIdentification JSON-RPC interface. Properties The following properties are provided by the DeviceIdentification interface: DeviceIdentification interface properties: Property Description deviceidentification RO Device paltform specific information deviceidentification property Provides access to the device paltform specific information. This property is read-only . Value Name Type Description (property) object Device paltform specific information (property).firmwareversion string Version of the device firmware (property).chipset string Chipset used for this device (property).deviceid string Device ID Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceIdentification.1.deviceidentification\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"firmwareversion\": \"1.0.0\", \"chipset\": \"BCM2711\", \"deviceid\": \"WPEuCfrLF45\" } }","title":"DeviceIdentificationAPI"},{"location":"DeviceIdentificationAPI/#device-identification-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: DeviceIdentification interface for Thunder framework.","title":"Device Identification API"},{"location":"DeviceIdentificationAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"DeviceIdentificationAPI/#introduction","text":"","title":"Introduction"},{"location":"DeviceIdentificationAPI/#scope","text":"This document describes purpose and functionality of the DeviceIdentification interface. It includes detailed specification about its properties provided.","title":"Scope"},{"location":"DeviceIdentificationAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DeviceIdentificationAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DeviceIdentificationAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DeviceIdentificationAPI/#description","text":"DeviceIdentification JSON-RPC interface.","title":"Description"},{"location":"DeviceIdentificationAPI/#properties","text":"The following properties are provided by the DeviceIdentification interface: DeviceIdentification interface properties: Property Description deviceidentification RO Device paltform specific information","title":"Properties"},{"location":"DeviceIdentificationAPI/#deviceidentification-property","text":"Provides access to the device paltform specific information. This property is read-only .","title":"deviceidentification property"},{"location":"DeviceIdentificationAPI/#value","text":"Name Type Description (property) object Device paltform specific information (property).firmwareversion string Version of the device firmware (property).chipset string Chipset used for this device (property).deviceid string Device ID","title":"Value"},{"location":"DeviceIdentificationAPI/#example","text":"","title":"Example"},{"location":"DeviceIdentificationAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceIdentification.1.deviceidentification\" }","title":"Get Request"},{"location":"DeviceIdentificationAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"firmwareversion\": \"1.0.0\", \"chipset\": \"BCM2711\", \"deviceid\": \"WPEuCfrLF45\" } }","title":"Get Response"},{"location":"DeviceInfoAPI/","text":"Device Info API Version: 1.0 Status: :black_circle::white_circle::white_circle: DeviceInfo interface for Thunder framework. Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the DeviceInfo interface. It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DeviceInfo JSON-RPC interface. Properties The following properties are provided by the DeviceInfo interface: DeviceInfo interface properties: Property Description capabilities RO Capabilities of the STB metadata systeminfo RO System general information addresses RO Network interface addresses socketinfo RO Socket information capabilities property Provides access to the capabilities of the STB. This property is read-only . Value Name Type Description (property) object Capabilities of the STB (property).hdr boolean Is HDR supported by this device (property).atmos boolean Is Atmos supported by this device (property).cec boolean Is CEC supported by this device (property).hdcp string HDCP support (must be one of the following: unavailable , hdcp_14 , hdcp_20 , hdcp_21 , hdcp_22 ) (property).audio_outputs array Audio Output support (property).audio_outputs[#] string Audio output supported by the device (must be one of the following: other , rf_modulator , analog , spdif , hdmi , displayport ) (property).video_outputs array Video Output support (property).video_outputs[#] string Video output supported by the device (must be one of the following: other , rf_modulator , composite , svideo , component , scart_rgb , hdmi , displayport ) (property).output_resolutions array Supported resolutions (property).output_resolutions[#] string Resolution supported by the device (must be one of the following: unknown , 480i , 480p , 576i , 576p , 720p , 1080i , 1080p , 2160p30 , 2160p60 , 4320p30 , 4320p60 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.capabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hdr\": false, \"atmos\": false, \"cec\": true, \"hdcp\": \"hdcp_20\", \"audio_outputs\": [ \"analog\" ], \"video_outputs\": [ \"displayport\" ], \"output_resolutions\": [ \"1080p\" ] } } metadata property Value Name Type Description (property) object (property)?.modelName string (optional) Model Name (property)?.modelYear number (optional) Model Year (property)?.friendlyName string (optional) friendly name (property)?.systemIntegratorName string (optional) system integrator name (property)?.platformName string (optional) platform name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.metadata\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"modelName\": \"model A\", \"modelYear\": 2020, \"friendlyName\": \"my device\", \"systemIntegratorName\": \"Christophe A\", \"platformName\": \"linux\" } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.metadata\", \"params\": { \"modelName\": \"model A\", \"modelYear\": 2020, \"friendlyName\": \"my device\", \"systemIntegratorName\": \"Christophe A\", \"platformName\": \"linux\" } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } systeminfo property Provides access to the system general information. This property is read-only . Value Name Type Description (property) object System general information (property).version string Software version (in form version#hashtag ) (property).uptime number System uptime (in seconds) (property).totalram number Total installed system RAM memory (in bytes) (property).freeram number Free system RAM memory (in bytes) (property).totalswap number Total swap space (in bytes) (property).freeswap number swap space still available (in bytes) (property).devicename string Host name (property).cpuload string Current CPU load (percentage) (property).cpuloadavg object CPU load average (property).cpuloadavg.avg1min number 1min cpuload average (property).cpuloadavg.avg5min number 5min cpuload average (property).cpuloadavg.avg15min number 15min cpuload average (property).serialnumber string Device serial number (property).time string Current system date and time Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.systeminfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": \"1.0#14452f612c3747645d54974255d11b8f3b4faa54\", \"uptime\": 120, \"totalram\": 655757312, \"freeram\": 563015680, \"totalswap\": 789132680, \"freeswap\": 789132680, \"devicename\": \"buildroot\", \"cpuload\": \"2\", \"cpuloadavg\": { \"avg1min\": 789132680, \"avg5min\": 789132680, \"avg15min\": 789132680 }, \"serialnumber\": \"WPEuCfrLF45\", \"time\": \"Mon, 11 Mar 2019 14:38:18\" } } addresses property Provides access to the network interface addresses. This property is read-only . Value Name Type Description (property) array Network interface addresses (property)[#] object (property)[#].name string Interface name (property)[#].mac string Interface MAC address (property)[#]?.ip array (optional) (property)[#]?.ip[#] string (optional) Interface IP address Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.addresses\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"lo\", \"mac\": \"00:00:00:00:00\", \"ip\": [ \"127.0.0.1\" ] } ] } socketinfo property Provides access to the socket information. This property is read-only . Value Name Type Description (property) object Socket information (property)?.total number (optional) (property)?.open number (optional) (property)?.link number (optional) (property)?.exception number (optional) (property)?.shutdown number (optional) (property).runs number Number of runs Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.socketinfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 0, \"open\": 0, \"link\": 0, \"exception\": 0, \"shutdown\": 0, \"runs\": 1 } }","title":"DeviceInfoAPI"},{"location":"DeviceInfoAPI/#device-info-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: DeviceInfo interface for Thunder framework.","title":"Device Info API"},{"location":"DeviceInfoAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"DeviceInfoAPI/#introduction","text":"","title":"Introduction"},{"location":"DeviceInfoAPI/#scope","text":"This document describes purpose and functionality of the DeviceInfo interface. It includes detailed specification about its properties provided.","title":"Scope"},{"location":"DeviceInfoAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DeviceInfoAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DeviceInfoAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DeviceInfoAPI/#description","text":"DeviceInfo JSON-RPC interface.","title":"Description"},{"location":"DeviceInfoAPI/#properties","text":"The following properties are provided by the DeviceInfo interface: DeviceInfo interface properties: Property Description capabilities RO Capabilities of the STB metadata systeminfo RO System general information addresses RO Network interface addresses socketinfo RO Socket information","title":"Properties"},{"location":"DeviceInfoAPI/#capabilities-property","text":"Provides access to the capabilities of the STB. This property is read-only .","title":"capabilities property"},{"location":"DeviceInfoAPI/#value","text":"Name Type Description (property) object Capabilities of the STB (property).hdr boolean Is HDR supported by this device (property).atmos boolean Is Atmos supported by this device (property).cec boolean Is CEC supported by this device (property).hdcp string HDCP support (must be one of the following: unavailable , hdcp_14 , hdcp_20 , hdcp_21 , hdcp_22 ) (property).audio_outputs array Audio Output support (property).audio_outputs[#] string Audio output supported by the device (must be one of the following: other , rf_modulator , analog , spdif , hdmi , displayport ) (property).video_outputs array Video Output support (property).video_outputs[#] string Video output supported by the device (must be one of the following: other , rf_modulator , composite , svideo , component , scart_rgb , hdmi , displayport ) (property).output_resolutions array Supported resolutions (property).output_resolutions[#] string Resolution supported by the device (must be one of the following: unknown , 480i , 480p , 576i , 576p , 720p , 1080i , 1080p , 2160p30 , 2160p60 , 4320p30 , 4320p60 )","title":"Value"},{"location":"DeviceInfoAPI/#example","text":"","title":"Example"},{"location":"DeviceInfoAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.capabilities\" }","title":"Get Request"},{"location":"DeviceInfoAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hdr\": false, \"atmos\": false, \"cec\": true, \"hdcp\": \"hdcp_20\", \"audio_outputs\": [ \"analog\" ], \"video_outputs\": [ \"displayport\" ], \"output_resolutions\": [ \"1080p\" ] } }","title":"Get Response"},{"location":"DeviceInfoAPI/#metadata-property","text":"","title":"metadata property"},{"location":"DeviceInfoAPI/#value_1","text":"Name Type Description (property) object (property)?.modelName string (optional) Model Name (property)?.modelYear number (optional) Model Year (property)?.friendlyName string (optional) friendly name (property)?.systemIntegratorName string (optional) system integrator name (property)?.platformName string (optional) platform name","title":"Value"},{"location":"DeviceInfoAPI/#example_1","text":"","title":"Example"},{"location":"DeviceInfoAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.metadata\" }","title":"Get Request"},{"location":"DeviceInfoAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"modelName\": \"model A\", \"modelYear\": 2020, \"friendlyName\": \"my device\", \"systemIntegratorName\": \"Christophe A\", \"platformName\": \"linux\" } }","title":"Get Response"},{"location":"DeviceInfoAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.metadata\", \"params\": { \"modelName\": \"model A\", \"modelYear\": 2020, \"friendlyName\": \"my device\", \"systemIntegratorName\": \"Christophe A\", \"platformName\": \"linux\" } }","title":"Set Request"},{"location":"DeviceInfoAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"DeviceInfoAPI/#systeminfo-property","text":"Provides access to the system general information. This property is read-only .","title":"systeminfo property"},{"location":"DeviceInfoAPI/#value_2","text":"Name Type Description (property) object System general information (property).version string Software version (in form version#hashtag ) (property).uptime number System uptime (in seconds) (property).totalram number Total installed system RAM memory (in bytes) (property).freeram number Free system RAM memory (in bytes) (property).totalswap number Total swap space (in bytes) (property).freeswap number swap space still available (in bytes) (property).devicename string Host name (property).cpuload string Current CPU load (percentage) (property).cpuloadavg object CPU load average (property).cpuloadavg.avg1min number 1min cpuload average (property).cpuloadavg.avg5min number 5min cpuload average (property).cpuloadavg.avg15min number 15min cpuload average (property).serialnumber string Device serial number (property).time string Current system date and time","title":"Value"},{"location":"DeviceInfoAPI/#example_2","text":"","title":"Example"},{"location":"DeviceInfoAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.systeminfo\" }","title":"Get Request"},{"location":"DeviceInfoAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": \"1.0#14452f612c3747645d54974255d11b8f3b4faa54\", \"uptime\": 120, \"totalram\": 655757312, \"freeram\": 563015680, \"totalswap\": 789132680, \"freeswap\": 789132680, \"devicename\": \"buildroot\", \"cpuload\": \"2\", \"cpuloadavg\": { \"avg1min\": 789132680, \"avg5min\": 789132680, \"avg15min\": 789132680 }, \"serialnumber\": \"WPEuCfrLF45\", \"time\": \"Mon, 11 Mar 2019 14:38:18\" } }","title":"Get Response"},{"location":"DeviceInfoAPI/#addresses-property","text":"Provides access to the network interface addresses. This property is read-only .","title":"addresses property"},{"location":"DeviceInfoAPI/#value_3","text":"Name Type Description (property) array Network interface addresses (property)[#] object (property)[#].name string Interface name (property)[#].mac string Interface MAC address (property)[#]?.ip array (optional) (property)[#]?.ip[#] string (optional) Interface IP address","title":"Value"},{"location":"DeviceInfoAPI/#example_3","text":"","title":"Example"},{"location":"DeviceInfoAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.addresses\" }","title":"Get Request"},{"location":"DeviceInfoAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"lo\", \"mac\": \"00:00:00:00:00\", \"ip\": [ \"127.0.0.1\" ] } ] }","title":"Get Response"},{"location":"DeviceInfoAPI/#socketinfo-property","text":"Provides access to the socket information. This property is read-only .","title":"socketinfo property"},{"location":"DeviceInfoAPI/#value_4","text":"Name Type Description (property) object Socket information (property)?.total number (optional) (property)?.open number (optional) (property)?.link number (optional) (property)?.exception number (optional) (property)?.shutdown number (optional) (property).runs number Number of runs","title":"Value"},{"location":"DeviceInfoAPI/#example_4","text":"","title":"Example"},{"location":"DeviceInfoAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.socketinfo\" }","title":"Get Request"},{"location":"DeviceInfoAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 0, \"open\": 0, \"link\": 0, \"exception\": 0, \"shutdown\": 0, \"runs\": 1 } }","title":"Get Response"},{"location":"DictionaryPlugin/","text":"Dictionary Plugin Version: 1.0 Status: :black_circle::black_circle::black_circle: Dictionary plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the Dictionary plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Dictionary plugin provides functionality for dictionary management. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Dictionary ) classname string Class name: Dictionary locator string Library name: libWPEFrameworkDictionary.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.storage string (optional) Filename of DataModel file (default: DataModel.json)","title":"DictionaryPlugin"},{"location":"DictionaryPlugin/#dictionary-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::black_circle: Dictionary plugin for Thunder framework.","title":"Dictionary Plugin"},{"location":"DictionaryPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"DictionaryPlugin/#introduction","text":"","title":"Introduction"},{"location":"DictionaryPlugin/#scope","text":"This document describes purpose and functionality of the Dictionary plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"DictionaryPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DictionaryPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DictionaryPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DictionaryPlugin/#description","text":"The Dictionary plugin provides functionality for dictionary management. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"DictionaryPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Dictionary ) classname string Class name: Dictionary locator string Library name: libWPEFrameworkDictionary.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.storage string (optional) Filename of DataModel file (default: DataModel.json)","title":"Configuration"},{"location":"DisplayInfoAPI/","text":"Display Info API Version: 1.0 Status: :black_circle::white_circle::white_circle: DisplayInfo interface for Thunder framework. Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the DisplayInfo interface. It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DisplayInfo JSON-RPC interface. Properties The following properties are provided by the DisplayInfo interface: DisplayInfo interface properties: Property Description displayinfo RO Display general information displayinfo property Provides access to the display general information. This property is read-only . Value Name Type Description (property) object Display general information (property).totalgpuram number Total GPU DRAM memory (in bytes) (property).freegpuram number Free GPU DRAM memory (in bytes) (property).audiopassthrough boolean Audio Pass through is support for this device (property).connected boolean HDMI display connection status (property).width number Width of the connected HDMI display (property).height number Height of the connected HDMI display (property).hdcpprotection string HDCP Protection (must be one of the following: Unencrypted , HDCP1x , HDCP2x ) (property).hdrtype string HDR Type used (must be one of the following: HDROff , HDR10 , HDR10Plus , HDRDolbyVision , HDRTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.displayinfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"totalgpuram\": 381681664, \"freegpuram\": 358612992, \"audiopassthrough\": false, \"connected\": true, \"width\": 1280, \"height\": 720, \"hdcpprotection\": \"HDCP1x\", \"hdrtype\": \"HDROff\" } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DisplayInfo interface: DisplayInfo interface events: Event Description updated Notifies about a change/update in the connection updated event Notifies about a change/update in the connection. Description Register to this event to be notified about any change in the connection Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.updated\" }","title":"DisplayInfoAPI"},{"location":"DisplayInfoAPI/#display-info-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: DisplayInfo interface for Thunder framework.","title":"Display Info API"},{"location":"DisplayInfoAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"DisplayInfoAPI/#introduction","text":"","title":"Introduction"},{"location":"DisplayInfoAPI/#scope","text":"This document describes purpose and functionality of the DisplayInfo interface. It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"DisplayInfoAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DisplayInfoAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DisplayInfoAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DisplayInfoAPI/#description","text":"DisplayInfo JSON-RPC interface.","title":"Description"},{"location":"DisplayInfoAPI/#properties","text":"The following properties are provided by the DisplayInfo interface: DisplayInfo interface properties: Property Description displayinfo RO Display general information","title":"Properties"},{"location":"DisplayInfoAPI/#displayinfo-property","text":"Provides access to the display general information. This property is read-only .","title":"displayinfo property"},{"location":"DisplayInfoAPI/#value","text":"Name Type Description (property) object Display general information (property).totalgpuram number Total GPU DRAM memory (in bytes) (property).freegpuram number Free GPU DRAM memory (in bytes) (property).audiopassthrough boolean Audio Pass through is support for this device (property).connected boolean HDMI display connection status (property).width number Width of the connected HDMI display (property).height number Height of the connected HDMI display (property).hdcpprotection string HDCP Protection (must be one of the following: Unencrypted , HDCP1x , HDCP2x ) (property).hdrtype string HDR Type used (must be one of the following: HDROff , HDR10 , HDR10Plus , HDRDolbyVision , HDRTechnicolor )","title":"Value"},{"location":"DisplayInfoAPI/#example","text":"","title":"Example"},{"location":"DisplayInfoAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.displayinfo\" }","title":"Get Request"},{"location":"DisplayInfoAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"totalgpuram\": 381681664, \"freegpuram\": 358612992, \"audiopassthrough\": false, \"connected\": true, \"width\": 1280, \"height\": 720, \"hdcpprotection\": \"HDCP1x\", \"hdrtype\": \"HDROff\" } }","title":"Get Response"},{"location":"DisplayInfoAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DisplayInfo interface: DisplayInfo interface events: Event Description updated Notifies about a change/update in the connection","title":"Notifications"},{"location":"DisplayInfoAPI/#updated-event","text":"Notifies about a change/update in the connection.","title":"updated event"},{"location":"DisplayInfoAPI/#description_1","text":"Register to this event to be notified about any change in the connection","title":"Description"},{"location":"DisplayInfoAPI/#parameters","text":"This event carries no parameters.","title":"Parameters"},{"location":"DisplayInfoAPI/#example_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.updated\" }","title":"Example"},{"location":"DisplayInfoPlugin/","text":"Display Info Plugin Version: 1.0 Status: :black_circle::black_circle::black_circle: DisplayInfo plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the DisplayInfo plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The DisplayInfo plugin allows retrieving of various display-related information. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DisplayInfo ) classname string Class name: DisplayInfo locator string Library name: libWPEFrameworkDisplayInfo.so autostart boolean Determines if the plugin shall be started automatically along with the framework Methods The following methods are provided by the DisplayInfo plugin: ConnectionProperties interface methods: Method Description edid TV's Extended Display Identification Data widthincentimeters Horizontal size in centimeters heightincentimeters Vertical size in centimeters edid method TV's Extended Display Identification Data. Parameters Name Type Description params object params.length integer Result Name Type Description result object result.length integer result.data string Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.edid\", \"params\": { \"length\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"length\": 0, \"data\": \"...\" } } widthincentimeters method Horizontal size in centimeters. Parameters This method takes no parameters. Result Name Type Description width integer width in cm Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.widthincentimeters\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } heightincentimeters method Vertical size in centimeters. Parameters This method takes no parameters. Result Name Type Description heigth integer Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.heightincentimeters\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } Properties The following properties are provided by the DisplayInfo plugin: GraphicsProperties interface properties: Property Description totalgpuram RO Total GPU DRAM memory (in bytes) freegpuram RO Free GPU DRAM memory (in bytes) ConnectionProperties interface properties: Property Description isaudiopassthrough RO Current audio passthrough status on HDMI connected RO Current HDMI connection status width RO Horizontal resolution of TV height RO Vertical resolution of TV verticalfreq RO Vertical Frequency hdcpprotection HDCP protocol used for transmission portname RO Video output port on the STB used for connection to TV HDRProperties interface properties: Property Description tvcapabilities RO HDR formats supported by TV stbcapabilities RO HDR formats supported by STB hdrsetting RO HDR format in use DisplayProperties interface properties: Property Description colorspace RO Provides access to the display's Colour space (chroma subsampling format) framerate RO Provides access to Frame Rate colourdepth RO Provides access to display's colour Depth colorimetry RO Provides access to display's colorimetry quantizationrange RO Provides access to display's Qauntization Range eotf RO Provides access to display's Electro optical transfer function totalgpuram property Provides access to the total GPU DRAM memory (in bytes). This property is read-only . Value Name Type Description total integer Total GPU DRAM memory (in bytes) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.totalgpuram\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } freegpuram property Provides access to the free GPU DRAM memory (in bytes). This property is read-only . Value Name Type Description free integer Free GPU DRAM memory (in bytes) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.freegpuram\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } isaudiopassthrough property Provides access to the current audio passthrough status on HDMI. This property is read-only . Value Name Type Description passthru boolean enabled/disabled Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.isaudiopassthrough\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } connected property Provides access to the current HDMI connection status. This property is read-only . Value Name Type Description isconnected boolean connected/disconnected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.connected\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } width property Provides access to the horizontal resolution of TV. This property is read-only . Value Name Type Description width integer width of TV in pixels Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.width\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } height property Provides access to the vertical resolution of TV. This property is read-only . Value Name Type Description height integer height of TV in pixels Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.height\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } verticalfreq property Provides access to the vertical Frequency. This property is read-only . Value Name Type Description vf integer vertical freq Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.verticalfreq\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } hdcpprotection property Provides access to the HDCP protocol used for transmission. Value Name Type Description value string protocol (must be one of the following: HdcpUnencrypted , Hdcp1X , Hdcp2X , HdcpAuto ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdcpprotection\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdcpUnencrypted\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdcpprotection\", \"params\": \"HdcpUnencrypted\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } portname property Provides access to the video output port on the STB used for connection to TV. This property is read-only . Value Name Type Description name string video output port name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.portname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } tvcapabilities property Provides access to the HDR formats supported by TV. This property is read-only . Value Name Type Description type array HDR formats supported by TV type[#] string (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.tvcapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] } stbcapabilities property Provides access to the HDR formats supported by STB. This property is read-only . Value Name Type Description type array HDR formats supported by STB type[#] string (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.stbcapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] } hdrsetting property Provides access to the HDR format in use. This property is read-only . Value Name Type Description type string HDR format (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdrsetting\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdrOff\" } colorspace property Provides access to the provides access to the display's Colour space (chroma subsampling format). This property is read-only . Value Name Type Description cs string colour space (must be one of the following: FormatUnknown , FormatOther , FormatRgb444 , FormatYcbcr444 , FormatYcbcr422 , FormatYcbcr420 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colorspace\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FormatUnknown\" } framerate property Provides access to the provides access to Frame Rate. This property is read-only . Value Name Type Description rate string frame rate (must be one of the following: FramerateUnknown , Framerate23976 , Framerate24 , Framerate25 , Framerate2997 , Framerate30 , Framerate47952 , Framerate48 , Framerate50 , Framerate5994 , Framerate60 , Framerate11988 , Framerate120 , Framerate144 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.framerate\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FramerateUnknown\" } colourdepth property Provides access to the provides access to display's colour Depth. This property is read-only . Value Name Type Description colour string colour depth (must be one of the following: ColordepthUnknown , Colordepth8Bit , Colordepth10Bit , Colordepth12Bit ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colourdepth\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ColordepthUnknown\" } colorimetry property Provides access to the provides access to display's colorimetry. This property is read-only . Value Name Type Description colorimetry array display colorimetry colorimetry[#] string (must be one of the following: ColorimetryUnknown , ColorimetryOther , ColorimetrySmpte170M , ColorimetryBt709 , ColorimetryXvycc601 , ColorimetryXvycc709 , ColorimetrySycc601 , ColorimetryOpycc601 , ColorimetryOprgb , ColorimetryBt2020Yccbcbrc , ColorimetryBt2020RgbYcbcr ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colorimetry\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ColorimetryUnknown\" ] } quantizationrange property Provides access to the provides access to display's Qauntization Range. This property is read-only . Value Name Type Description qr string quantization range (must be one of the following: QuantizationrangeUnknown , QuantizationrangeLimited , QuantizationrangeFull ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.quantizationrange\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"QuantizationrangeUnknown\" } eotf property Provides access to the provides access to display's Electro optical transfer function. This property is read-only . Value Name Type Description eotf string display's EOTF (must be one of the following: EotfUnknown , EotfOther , EotfBt1886 , EotfBt2100 , EotfSmpteSt2084 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.eotf\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"EotfUnknown\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DisplayInfo plugin: ConnectionProperties interface events: Event Description updated updated event Parameters Name Type Description params object params.event string (must be one of the following: PreResolutionChange , PostResolutionChange , HdmiChange , HdcpChange ) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.updated\", \"params\": { \"event\": \"PreResolutionChange\" } }","title":"DisplayInfoPlugin"},{"location":"DisplayInfoPlugin/#display-info-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::black_circle: DisplayInfo plugin for Thunder framework.","title":"Display Info Plugin"},{"location":"DisplayInfoPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"DisplayInfoPlugin/#introduction","text":"","title":"Introduction"},{"location":"DisplayInfoPlugin/#scope","text":"This document describes purpose and functionality of the DisplayInfo plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"DisplayInfoPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DisplayInfoPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DisplayInfoPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DisplayInfoPlugin/#description","text":"The DisplayInfo plugin allows retrieving of various display-related information. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"DisplayInfoPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DisplayInfo ) classname string Class name: DisplayInfo locator string Library name: libWPEFrameworkDisplayInfo.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"Configuration"},{"location":"DisplayInfoPlugin/#methods","text":"The following methods are provided by the DisplayInfo plugin: ConnectionProperties interface methods: Method Description edid TV's Extended Display Identification Data widthincentimeters Horizontal size in centimeters heightincentimeters Vertical size in centimeters","title":"Methods"},{"location":"DisplayInfoPlugin/#edid-method","text":"TV's Extended Display Identification Data.","title":"edid method"},{"location":"DisplayInfoPlugin/#parameters","text":"Name Type Description params object params.length integer","title":"Parameters"},{"location":"DisplayInfoPlugin/#result","text":"Name Type Description result object result.length integer result.data string","title":"Result"},{"location":"DisplayInfoPlugin/#example","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.edid\", \"params\": { \"length\": 0 } }","title":"Request"},{"location":"DisplayInfoPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"length\": 0, \"data\": \"...\" } }","title":"Response"},{"location":"DisplayInfoPlugin/#widthincentimeters-method","text":"Horizontal size in centimeters.","title":"widthincentimeters method"},{"location":"DisplayInfoPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"DisplayInfoPlugin/#result_1","text":"Name Type Description width integer width in cm","title":"Result"},{"location":"DisplayInfoPlugin/#example_1","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.widthincentimeters\" }","title":"Request"},{"location":"DisplayInfoPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"DisplayInfoPlugin/#heightincentimeters-method","text":"Vertical size in centimeters.","title":"heightincentimeters method"},{"location":"DisplayInfoPlugin/#parameters_2","text":"This method takes no parameters.","title":"Parameters"},{"location":"DisplayInfoPlugin/#result_2","text":"Name Type Description heigth integer","title":"Result"},{"location":"DisplayInfoPlugin/#example_2","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.heightincentimeters\" }","title":"Request"},{"location":"DisplayInfoPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"DisplayInfoPlugin/#properties","text":"The following properties are provided by the DisplayInfo plugin: GraphicsProperties interface properties: Property Description totalgpuram RO Total GPU DRAM memory (in bytes) freegpuram RO Free GPU DRAM memory (in bytes) ConnectionProperties interface properties: Property Description isaudiopassthrough RO Current audio passthrough status on HDMI connected RO Current HDMI connection status width RO Horizontal resolution of TV height RO Vertical resolution of TV verticalfreq RO Vertical Frequency hdcpprotection HDCP protocol used for transmission portname RO Video output port on the STB used for connection to TV HDRProperties interface properties: Property Description tvcapabilities RO HDR formats supported by TV stbcapabilities RO HDR formats supported by STB hdrsetting RO HDR format in use DisplayProperties interface properties: Property Description colorspace RO Provides access to the display's Colour space (chroma subsampling format) framerate RO Provides access to Frame Rate colourdepth RO Provides access to display's colour Depth colorimetry RO Provides access to display's colorimetry quantizationrange RO Provides access to display's Qauntization Range eotf RO Provides access to display's Electro optical transfer function","title":"Properties"},{"location":"DisplayInfoPlugin/#totalgpuram-property","text":"Provides access to the total GPU DRAM memory (in bytes). This property is read-only .","title":"totalgpuram property"},{"location":"DisplayInfoPlugin/#value","text":"Name Type Description total integer Total GPU DRAM memory (in bytes)","title":"Value"},{"location":"DisplayInfoPlugin/#example_3","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.totalgpuram\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"DisplayInfoPlugin/#freegpuram-property","text":"Provides access to the free GPU DRAM memory (in bytes). This property is read-only .","title":"freegpuram property"},{"location":"DisplayInfoPlugin/#value_1","text":"Name Type Description free integer Free GPU DRAM memory (in bytes)","title":"Value"},{"location":"DisplayInfoPlugin/#example_4","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.freegpuram\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"DisplayInfoPlugin/#isaudiopassthrough-property","text":"Provides access to the current audio passthrough status on HDMI. This property is read-only .","title":"isaudiopassthrough property"},{"location":"DisplayInfoPlugin/#value_2","text":"Name Type Description passthru boolean enabled/disabled","title":"Value"},{"location":"DisplayInfoPlugin/#example_5","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.isaudiopassthrough\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"DisplayInfoPlugin/#connected-property","text":"Provides access to the current HDMI connection status. This property is read-only .","title":"connected property"},{"location":"DisplayInfoPlugin/#value_3","text":"Name Type Description isconnected boolean connected/disconnected","title":"Value"},{"location":"DisplayInfoPlugin/#example_6","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.connected\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"DisplayInfoPlugin/#width-property","text":"Provides access to the horizontal resolution of TV. This property is read-only .","title":"width property"},{"location":"DisplayInfoPlugin/#value_4","text":"Name Type Description width integer width of TV in pixels","title":"Value"},{"location":"DisplayInfoPlugin/#example_7","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.width\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"DisplayInfoPlugin/#height-property","text":"Provides access to the vertical resolution of TV. This property is read-only .","title":"height property"},{"location":"DisplayInfoPlugin/#value_5","text":"Name Type Description height integer height of TV in pixels","title":"Value"},{"location":"DisplayInfoPlugin/#example_8","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.height\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"DisplayInfoPlugin/#verticalfreq-property","text":"Provides access to the vertical Frequency. This property is read-only .","title":"verticalfreq property"},{"location":"DisplayInfoPlugin/#value_6","text":"Name Type Description vf integer vertical freq","title":"Value"},{"location":"DisplayInfoPlugin/#example_9","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.verticalfreq\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"DisplayInfoPlugin/#hdcpprotection-property","text":"Provides access to the HDCP protocol used for transmission.","title":"hdcpprotection property"},{"location":"DisplayInfoPlugin/#value_7","text":"Name Type Description value string protocol (must be one of the following: HdcpUnencrypted , Hdcp1X , Hdcp2X , HdcpAuto )","title":"Value"},{"location":"DisplayInfoPlugin/#example_10","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdcpprotection\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdcpUnencrypted\" }","title":"Get Response"},{"location":"DisplayInfoPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdcpprotection\", \"params\": \"HdcpUnencrypted\" }","title":"Set Request"},{"location":"DisplayInfoPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"DisplayInfoPlugin/#portname-property","text":"Provides access to the video output port on the STB used for connection to TV. This property is read-only .","title":"portname property"},{"location":"DisplayInfoPlugin/#value_8","text":"Name Type Description name string video output port name","title":"Value"},{"location":"DisplayInfoPlugin/#example_11","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.portname\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"DisplayInfoPlugin/#tvcapabilities-property","text":"Provides access to the HDR formats supported by TV. This property is read-only .","title":"tvcapabilities property"},{"location":"DisplayInfoPlugin/#value_9","text":"Name Type Description type array HDR formats supported by TV type[#] string (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor )","title":"Value"},{"location":"DisplayInfoPlugin/#example_12","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.tvcapabilities\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] }","title":"Get Response"},{"location":"DisplayInfoPlugin/#stbcapabilities-property","text":"Provides access to the HDR formats supported by STB. This property is read-only .","title":"stbcapabilities property"},{"location":"DisplayInfoPlugin/#value_10","text":"Name Type Description type array HDR formats supported by STB type[#] string (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor )","title":"Value"},{"location":"DisplayInfoPlugin/#example_13","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.stbcapabilities\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] }","title":"Get Response"},{"location":"DisplayInfoPlugin/#hdrsetting-property","text":"Provides access to the HDR format in use. This property is read-only .","title":"hdrsetting property"},{"location":"DisplayInfoPlugin/#value_11","text":"Name Type Description type string HDR format (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor )","title":"Value"},{"location":"DisplayInfoPlugin/#example_14","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdrsetting\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdrOff\" }","title":"Get Response"},{"location":"DisplayInfoPlugin/#colorspace-property","text":"Provides access to the provides access to the display's Colour space (chroma subsampling format). This property is read-only .","title":"colorspace property"},{"location":"DisplayInfoPlugin/#value_12","text":"Name Type Description cs string colour space (must be one of the following: FormatUnknown , FormatOther , FormatRgb444 , FormatYcbcr444 , FormatYcbcr422 , FormatYcbcr420 )","title":"Value"},{"location":"DisplayInfoPlugin/#example_15","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colorspace\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FormatUnknown\" }","title":"Get Response"},{"location":"DisplayInfoPlugin/#framerate-property","text":"Provides access to the provides access to Frame Rate. This property is read-only .","title":"framerate property"},{"location":"DisplayInfoPlugin/#value_13","text":"Name Type Description rate string frame rate (must be one of the following: FramerateUnknown , Framerate23976 , Framerate24 , Framerate25 , Framerate2997 , Framerate30 , Framerate47952 , Framerate48 , Framerate50 , Framerate5994 , Framerate60 , Framerate11988 , Framerate120 , Framerate144 )","title":"Value"},{"location":"DisplayInfoPlugin/#example_16","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.framerate\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FramerateUnknown\" }","title":"Get Response"},{"location":"DisplayInfoPlugin/#colourdepth-property","text":"Provides access to the provides access to display's colour Depth. This property is read-only .","title":"colourdepth property"},{"location":"DisplayInfoPlugin/#value_14","text":"Name Type Description colour string colour depth (must be one of the following: ColordepthUnknown , Colordepth8Bit , Colordepth10Bit , Colordepth12Bit )","title":"Value"},{"location":"DisplayInfoPlugin/#example_17","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colourdepth\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ColordepthUnknown\" }","title":"Get Response"},{"location":"DisplayInfoPlugin/#colorimetry-property","text":"Provides access to the provides access to display's colorimetry. This property is read-only .","title":"colorimetry property"},{"location":"DisplayInfoPlugin/#value_15","text":"Name Type Description colorimetry array display colorimetry colorimetry[#] string (must be one of the following: ColorimetryUnknown , ColorimetryOther , ColorimetrySmpte170M , ColorimetryBt709 , ColorimetryXvycc601 , ColorimetryXvycc709 , ColorimetrySycc601 , ColorimetryOpycc601 , ColorimetryOprgb , ColorimetryBt2020Yccbcbrc , ColorimetryBt2020RgbYcbcr )","title":"Value"},{"location":"DisplayInfoPlugin/#example_18","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_15","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colorimetry\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_15","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ColorimetryUnknown\" ] }","title":"Get Response"},{"location":"DisplayInfoPlugin/#quantizationrange-property","text":"Provides access to the provides access to display's Qauntization Range. This property is read-only .","title":"quantizationrange property"},{"location":"DisplayInfoPlugin/#value_16","text":"Name Type Description qr string quantization range (must be one of the following: QuantizationrangeUnknown , QuantizationrangeLimited , QuantizationrangeFull )","title":"Value"},{"location":"DisplayInfoPlugin/#example_19","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_16","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.quantizationrange\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_16","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"QuantizationrangeUnknown\" }","title":"Get Response"},{"location":"DisplayInfoPlugin/#eotf-property","text":"Provides access to the provides access to display's Electro optical transfer function. This property is read-only .","title":"eotf property"},{"location":"DisplayInfoPlugin/#value_17","text":"Name Type Description eotf string display's EOTF (must be one of the following: EotfUnknown , EotfOther , EotfBt1886 , EotfBt2100 , EotfSmpteSt2084 )","title":"Value"},{"location":"DisplayInfoPlugin/#example_20","text":"","title":"Example"},{"location":"DisplayInfoPlugin/#get-request_17","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.eotf\" }","title":"Get Request"},{"location":"DisplayInfoPlugin/#get-response_17","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"EotfUnknown\" }","title":"Get Response"},{"location":"DisplayInfoPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DisplayInfo plugin: ConnectionProperties interface events: Event Description updated","title":"Notifications"},{"location":"DisplayInfoPlugin/#updated-event","text":"","title":"updated event"},{"location":"DisplayInfoPlugin/#parameters_3","text":"Name Type Description params object params.event string (must be one of the following: PreResolutionChange , PostResolutionChange , HdmiChange , HdcpChange )","title":"Parameters"},{"location":"DisplayInfoPlugin/#example_21","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.updated\", \"params\": { \"event\": \"PreResolutionChange\" } }","title":"Example"},{"location":"DisplayPropertiesAPI/","text":"DisplayProperties API Version: 1.0 Status: :black_circle::white_circle::white_circle: DisplayProperties interface for Thunder framework. Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the DisplayProperties interface. It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DisplayProperties JSON-RPC interface. Properties The following properties are provided by the DisplayProperties interface: DisplayProperties interface properties: Property Description colorspace RO Provides access to the display's Colour space (chroma subsampling format) framerate RO Provides access to Frame Rate colourdepth RO Provides access to display's colour Depth colorimetry RO Provides access to display's colorimetry quantizationrange RO Provides access to display's Qauntization Range eotf RO Provides access to display's Electro optical transfer function colorspace property Provides access to the provides access to the display's Colour space (chroma subsampling format). This property is read-only . Value Name Type Description cs string colour space (must be one of the following: FormatUnknown , FormatOther , FormatRgb444 , FormatYcbcr444 , FormatYcbcr422 , FormatYcbcr420 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colorspace\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FormatUnknown\" } framerate property Provides access to the provides access to Frame Rate. This property is read-only . Value Name Type Description rate string frame rate (must be one of the following: FramerateUnknown , Framerate23976 , Framerate24 , Framerate25 , Framerate2997 , Framerate30 , Framerate47952 , Framerate48 , Framerate50 , Framerate5994 , Framerate60 , Framerate11988 , Framerate120 , Framerate144 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.framerate\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FramerateUnknown\" } colourdepth property Provides access to the provides access to display's colour Depth. This property is read-only . Value Name Type Description colour string colour depth (must be one of the following: ColordepthUnknown , Colordepth8Bit , Colordepth10Bit , Colordepth12Bit ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colourdepth\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ColordepthUnknown\" } colorimetry property Provides access to the provides access to display's colorimetry. This property is read-only . Value Name Type Description colorimetry array display colorimetry colorimetry[#] string (must be one of the following: ColorimetryUnknown , ColorimetryOther , ColorimetrySmpte170M , ColorimetryBt709 , ColorimetryXvycc601 , ColorimetryXvycc709 , ColorimetrySycc601 , ColorimetryOpycc601 , ColorimetryOprgb , ColorimetryBt2020Yccbcbrc , ColorimetryBt2020RgbYcbcr ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colorimetry\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ColorimetryUnknown\" ] } quantizationrange property Provides access to the provides access to display's Qauntization Range. This property is read-only . Value Name Type Description qr string quantization range (must be one of the following: QuantizationrangeUnknown , QuantizationrangeLimited , QuantizationrangeFull ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.quantizationrange\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"QuantizationrangeUnknown\" } eotf property Provides access to the provides access to display's Electro optical transfer function. This property is read-only . Value Name Type Description eotf string display's EOTF (must be one of the following: EotfUnknown , EotfOther , EotfBt1886 , EotfBt2100 , EotfSmpteSt2084 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.eotf\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"EotfUnknown\" }","title":"DisplayPropertiesAPI"},{"location":"DisplayPropertiesAPI/#displayproperties-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: DisplayProperties interface for Thunder framework.","title":"DisplayProperties API"},{"location":"DisplayPropertiesAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"DisplayPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"DisplayPropertiesAPI/#scope","text":"This document describes purpose and functionality of the DisplayProperties interface. It includes detailed specification about its properties provided.","title":"Scope"},{"location":"DisplayPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"DisplayPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"DisplayPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"DisplayPropertiesAPI/#description","text":"DisplayProperties JSON-RPC interface.","title":"Description"},{"location":"DisplayPropertiesAPI/#properties","text":"The following properties are provided by the DisplayProperties interface: DisplayProperties interface properties: Property Description colorspace RO Provides access to the display's Colour space (chroma subsampling format) framerate RO Provides access to Frame Rate colourdepth RO Provides access to display's colour Depth colorimetry RO Provides access to display's colorimetry quantizationrange RO Provides access to display's Qauntization Range eotf RO Provides access to display's Electro optical transfer function","title":"Properties"},{"location":"DisplayPropertiesAPI/#colorspace-property","text":"Provides access to the provides access to the display's Colour space (chroma subsampling format). This property is read-only .","title":"colorspace property"},{"location":"DisplayPropertiesAPI/#value","text":"Name Type Description cs string colour space (must be one of the following: FormatUnknown , FormatOther , FormatRgb444 , FormatYcbcr444 , FormatYcbcr422 , FormatYcbcr420 )","title":"Value"},{"location":"DisplayPropertiesAPI/#example","text":"","title":"Example"},{"location":"DisplayPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colorspace\" }","title":"Get Request"},{"location":"DisplayPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FormatUnknown\" }","title":"Get Response"},{"location":"DisplayPropertiesAPI/#framerate-property","text":"Provides access to the provides access to Frame Rate. This property is read-only .","title":"framerate property"},{"location":"DisplayPropertiesAPI/#value_1","text":"Name Type Description rate string frame rate (must be one of the following: FramerateUnknown , Framerate23976 , Framerate24 , Framerate25 , Framerate2997 , Framerate30 , Framerate47952 , Framerate48 , Framerate50 , Framerate5994 , Framerate60 , Framerate11988 , Framerate120 , Framerate144 )","title":"Value"},{"location":"DisplayPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"DisplayPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.framerate\" }","title":"Get Request"},{"location":"DisplayPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FramerateUnknown\" }","title":"Get Response"},{"location":"DisplayPropertiesAPI/#colourdepth-property","text":"Provides access to the provides access to display's colour Depth. This property is read-only .","title":"colourdepth property"},{"location":"DisplayPropertiesAPI/#value_2","text":"Name Type Description colour string colour depth (must be one of the following: ColordepthUnknown , Colordepth8Bit , Colordepth10Bit , Colordepth12Bit )","title":"Value"},{"location":"DisplayPropertiesAPI/#example_2","text":"","title":"Example"},{"location":"DisplayPropertiesAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colourdepth\" }","title":"Get Request"},{"location":"DisplayPropertiesAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ColordepthUnknown\" }","title":"Get Response"},{"location":"DisplayPropertiesAPI/#colorimetry-property","text":"Provides access to the provides access to display's colorimetry. This property is read-only .","title":"colorimetry property"},{"location":"DisplayPropertiesAPI/#value_3","text":"Name Type Description colorimetry array display colorimetry colorimetry[#] string (must be one of the following: ColorimetryUnknown , ColorimetryOther , ColorimetrySmpte170M , ColorimetryBt709 , ColorimetryXvycc601 , ColorimetryXvycc709 , ColorimetrySycc601 , ColorimetryOpycc601 , ColorimetryOprgb , ColorimetryBt2020Yccbcbrc , ColorimetryBt2020RgbYcbcr )","title":"Value"},{"location":"DisplayPropertiesAPI/#example_3","text":"","title":"Example"},{"location":"DisplayPropertiesAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colorimetry\" }","title":"Get Request"},{"location":"DisplayPropertiesAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ColorimetryUnknown\" ] }","title":"Get Response"},{"location":"DisplayPropertiesAPI/#quantizationrange-property","text":"Provides access to the provides access to display's Qauntization Range. This property is read-only .","title":"quantizationrange property"},{"location":"DisplayPropertiesAPI/#value_4","text":"Name Type Description qr string quantization range (must be one of the following: QuantizationrangeUnknown , QuantizationrangeLimited , QuantizationrangeFull )","title":"Value"},{"location":"DisplayPropertiesAPI/#example_4","text":"","title":"Example"},{"location":"DisplayPropertiesAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.quantizationrange\" }","title":"Get Request"},{"location":"DisplayPropertiesAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"QuantizationrangeUnknown\" }","title":"Get Response"},{"location":"DisplayPropertiesAPI/#eotf-property","text":"Provides access to the provides access to display's Electro optical transfer function. This property is read-only .","title":"eotf property"},{"location":"DisplayPropertiesAPI/#value_5","text":"Name Type Description eotf string display's EOTF (must be one of the following: EotfUnknown , EotfOther , EotfBt1886 , EotfBt2100 , EotfSmpteSt2084 )","title":"Value"},{"location":"DisplayPropertiesAPI/#example_5","text":"","title":"Example"},{"location":"DisplayPropertiesAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.eotf\" }","title":"Get Request"},{"location":"DisplayPropertiesAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"EotfUnknown\" }","title":"Get Response"},{"location":"FileTransferPlugin/","text":"FileTransfer Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: FileTransfer plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the FileTransfer plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The FileTransfer plugin provides web browsing functionality based on the FileTransfer engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: FileTransfer ) classname string Class name: FileTransfer locator string Library name: libWPEFrameworkFileTransfer.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.port number (optional) Port number (default: 2201) configuration?.fullfile boolean (optional) If value failse update at the end of the file (default: false)","title":"FileTransferPlugin"},{"location":"FileTransferPlugin/#filetransfer-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: FileTransfer plugin for Thunder framework.","title":"FileTransfer Plugin"},{"location":"FileTransferPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"FileTransferPlugin/#introduction","text":"","title":"Introduction"},{"location":"FileTransferPlugin/#scope","text":"This document describes purpose and functionality of the FileTransfer plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"FileTransferPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"FileTransferPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"FileTransferPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"FileTransferPlugin/#description","text":"The FileTransfer plugin provides web browsing functionality based on the FileTransfer engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"FileTransferPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: FileTransfer ) classname string Class name: FileTransfer locator string Library name: libWPEFrameworkFileTransfer.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.port number (optional) Port number (default: 2201) configuration?.fullfile boolean (optional) If value failse update at the end of the file (default: false)","title":"Configuration"},{"location":"FirmwareControlAPI/","text":"Firmware Control API Version: 1.0 Status: :black_circle::white_circle::white_circle: FirmwareControl interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the FirmwareControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Firmware Control JSON-RPC interface. Methods The following methods are provided by the FirmwareControl interface: FirmwareControl interface methods: Method Description upgrade Upgrade the device to the given firmware resume Resume download from the last paused position upgrade method Upgrade the device to the given firmware. (Note: Ensure size of firmware image should be < 500MB). Also see: upgradeprogress Parameters Name Type Description params object params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded params?.type string (optional) Type of the firmware (must be one of the following: CDL , RCDL ) params?.progressinterval number (optional) Number of seconds between progress update events (5 seconds, 10 seconds etc). 0 means invoking callback only once to report final upgrade result params?.hmac string (optional) HMAC value of firmare Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Operation in progress 15 ERROR_INCORRECT_URL Invalid location given 2 ERROR_UNAVAILABLE Error in download 30 ERROR_BAD_REQUEST Bad file name given 5 ERROR_ILLEGAL_STATE Invalid state of device 14 ERROR_INCORRECT_HASH Incorrect hash given Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.upgrade\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\", \"type\": \"RCDL\", \"progressinterval\": 10, \"hmac\": \"2834e6d07fa4c7778ef7a4e394f38a5c321afbed51d54ad512bd3fffbc7aa5debc\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } resume method Resume download from the last paused position. Also see: upgradeprogress Parameters Name Type Description params object params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Operation in progress 15 ERROR_INCORRECT_URL Invalid location given 2 ERROR_UNAVAILABLE Error in download 30 ERROR_BAD_REQUEST Bad file name given 5 ERROR_ILLEGAL_STATE Invalid state of device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.resume\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the FirmwareControl interface: FirmwareControl interface properties: Property Description status RO Current status of a upgrade downloadsize RO Max free space available to download image status property Provides access to the current status of a upgrade. This property is read-only . Also see: upgradeprogress Value Name Type Description (property) string Upgrade status (must be one of the following: none , upgradestarted , downloadstarted , downloadaborted , downloadcompleted , installinitiated , installnotstarted , installaborted , installstarted , upgradecompleted , upgradecancelled ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.status\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"completed\" } downloadsize property Provides access to the max free space available to download image. This property is read-only . Value Name Type Description (property) number Available free space in bytes Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.downloadsize\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 315576 } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the FirmwareControl interface: FirmwareControl interface events: Event Description upgradeprogress Notifies progress of upgrade upgradeprogress event Notifies progress of upgrade. Parameters Name Type Description params object params.status string Upgrade status (must be one of the following: none , upgradestarted , downloadstarted , downloadaborted , downloadcompleted , installinitiated , installnotstarted , installaborted , installstarted , upgradecompleted , upgradecancelled ) params.error string Reason of error (must be one of the following: none , generic , invalidparameters , invalidstate , noenoughspace , operationotsupported , incorrecthash , unauthenticated , unavailable , timedout , downloaddirectorynotexist , resumenotsupported , invalidrange , unkown ) params.progress number Progress of upgrade (number of bytes transferred during download or percentage of completion during install Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.upgradeprogress\", \"params\": { \"status\": \"completed\", \"error\": \"operationotsupported\", \"progress\": 89 } }","title":"FirmwareControlAPI"},{"location":"FirmwareControlAPI/#firmware-control-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: FirmwareControl interface for Thunder framework.","title":"Firmware Control API"},{"location":"FirmwareControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"FirmwareControlAPI/#introduction","text":"","title":"Introduction"},{"location":"FirmwareControlAPI/#scope","text":"This document describes purpose and functionality of the FirmwareControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"FirmwareControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"FirmwareControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"FirmwareControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"FirmwareControlAPI/#description","text":"Firmware Control JSON-RPC interface.","title":"Description"},{"location":"FirmwareControlAPI/#methods","text":"The following methods are provided by the FirmwareControl interface: FirmwareControl interface methods: Method Description upgrade Upgrade the device to the given firmware resume Resume download from the last paused position","title":"Methods"},{"location":"FirmwareControlAPI/#upgrade-method","text":"Upgrade the device to the given firmware. (Note: Ensure size of firmware image should be < 500MB). Also see: upgradeprogress","title":"upgrade method"},{"location":"FirmwareControlAPI/#parameters","text":"Name Type Description params object params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded params?.type string (optional) Type of the firmware (must be one of the following: CDL , RCDL ) params?.progressinterval number (optional) Number of seconds between progress update events (5 seconds, 10 seconds etc). 0 means invoking callback only once to report final upgrade result params?.hmac string (optional) HMAC value of firmare","title":"Parameters"},{"location":"FirmwareControlAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"FirmwareControlAPI/#errors","text":"Code Message Description 12 ERROR_INPROGRESS Operation in progress 15 ERROR_INCORRECT_URL Invalid location given 2 ERROR_UNAVAILABLE Error in download 30 ERROR_BAD_REQUEST Bad file name given 5 ERROR_ILLEGAL_STATE Invalid state of device 14 ERROR_INCORRECT_HASH Incorrect hash given","title":"Errors"},{"location":"FirmwareControlAPI/#example","text":"","title":"Example"},{"location":"FirmwareControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.upgrade\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\", \"type\": \"RCDL\", \"progressinterval\": 10, \"hmac\": \"2834e6d07fa4c7778ef7a4e394f38a5c321afbed51d54ad512bd3fffbc7aa5debc\" } }","title":"Request"},{"location":"FirmwareControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"FirmwareControlAPI/#resume-method","text":"Resume download from the last paused position. Also see: upgradeprogress","title":"resume method"},{"location":"FirmwareControlAPI/#parameters_1","text":"Name Type Description params object params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded","title":"Parameters"},{"location":"FirmwareControlAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"FirmwareControlAPI/#errors_1","text":"Code Message Description 12 ERROR_INPROGRESS Operation in progress 15 ERROR_INCORRECT_URL Invalid location given 2 ERROR_UNAVAILABLE Error in download 30 ERROR_BAD_REQUEST Bad file name given 5 ERROR_ILLEGAL_STATE Invalid state of device","title":"Errors"},{"location":"FirmwareControlAPI/#example_1","text":"","title":"Example"},{"location":"FirmwareControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.resume\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\" } }","title":"Request"},{"location":"FirmwareControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"FirmwareControlAPI/#properties","text":"The following properties are provided by the FirmwareControl interface: FirmwareControl interface properties: Property Description status RO Current status of a upgrade downloadsize RO Max free space available to download image","title":"Properties"},{"location":"FirmwareControlAPI/#status-property","text":"Provides access to the current status of a upgrade. This property is read-only . Also see: upgradeprogress","title":"status property"},{"location":"FirmwareControlAPI/#value","text":"Name Type Description (property) string Upgrade status (must be one of the following: none , upgradestarted , downloadstarted , downloadaborted , downloadcompleted , installinitiated , installnotstarted , installaborted , installstarted , upgradecompleted , upgradecancelled )","title":"Value"},{"location":"FirmwareControlAPI/#example_2","text":"","title":"Example"},{"location":"FirmwareControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.status\" }","title":"Get Request"},{"location":"FirmwareControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"completed\" }","title":"Get Response"},{"location":"FirmwareControlAPI/#downloadsize-property","text":"Provides access to the max free space available to download image. This property is read-only .","title":"downloadsize property"},{"location":"FirmwareControlAPI/#value_1","text":"Name Type Description (property) number Available free space in bytes","title":"Value"},{"location":"FirmwareControlAPI/#example_3","text":"","title":"Example"},{"location":"FirmwareControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.downloadsize\" }","title":"Get Request"},{"location":"FirmwareControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 315576 }","title":"Get Response"},{"location":"FirmwareControlAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the FirmwareControl interface: FirmwareControl interface events: Event Description upgradeprogress Notifies progress of upgrade","title":"Notifications"},{"location":"FirmwareControlAPI/#upgradeprogress-event","text":"Notifies progress of upgrade.","title":"upgradeprogress event"},{"location":"FirmwareControlAPI/#parameters_2","text":"Name Type Description params object params.status string Upgrade status (must be one of the following: none , upgradestarted , downloadstarted , downloadaborted , downloadcompleted , installinitiated , installnotstarted , installaborted , installstarted , upgradecompleted , upgradecancelled ) params.error string Reason of error (must be one of the following: none , generic , invalidparameters , invalidstate , noenoughspace , operationotsupported , incorrecthash , unauthenticated , unavailable , timedout , downloaddirectorynotexist , resumenotsupported , invalidrange , unkown ) params.progress number Progress of upgrade (number of bytes transferred during download or percentage of completion during install","title":"Parameters"},{"location":"FirmwareControlAPI/#example_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.upgradeprogress\", \"params\": { \"status\": \"completed\", \"error\": \"operationotsupported\", \"progress\": 89 } }","title":"Example"},{"location":"FirmwareControlPlugin/","text":"Firmware Control Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: FirmwareControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the FirmwareControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Control Firmware upgrade to the device. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: FirmwareControl ) classname string Class name: FirmwareControl locator string Library name: libWPEFrameworkFirmwareControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.source string (optional) Source URL or location of the firmware configuration?.download string (optional) Location where the firmware to be downloaded configuration?.waittime number (optional) Maximum duration to finish download or install process Methods The following methods are provided by the FirmwareControl plugin: FirmwareControl interface methods: Method Description upgrade Upgrade the device to the given firmware resume Resume download from the last paused position upgrade method Upgrade the device to the given firmware. (Note: Ensure size of firmware image should be < 500MB). Also see: upgradeprogress Parameters Name Type Description params object params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded params?.type string (optional) Type of the firmware (must be one of the following: CDL , RCDL ) params?.progressinterval number (optional) Number of seconds between progress update events (5 seconds, 10 seconds etc). 0 means invoking callback only once to report final upgrade result params?.hmac string (optional) HMAC value of firmare Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Operation in progress 15 ERROR_INCORRECT_URL Invalid location given 2 ERROR_UNAVAILABLE Error in download 30 ERROR_BAD_REQUEST Bad file name given 5 ERROR_ILLEGAL_STATE Invalid state of device 14 ERROR_INCORRECT_HASH Incorrect hash given Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.upgrade\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\", \"type\": \"RCDL\", \"progressinterval\": 10, \"hmac\": \"2834e6d07fa4c7778ef7a4e394f38a5c321afbed51d54ad512bd3fffbc7aa5debc\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } resume method Resume download from the last paused position. Also see: upgradeprogress Parameters Name Type Description params object params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Operation in progress 15 ERROR_INCORRECT_URL Invalid location given 2 ERROR_UNAVAILABLE Error in download 30 ERROR_BAD_REQUEST Bad file name given 5 ERROR_ILLEGAL_STATE Invalid state of device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.resume\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the FirmwareControl plugin: FirmwareControl interface properties: Property Description status RO Current status of a upgrade downloadsize RO Max free space available to download image status property Provides access to the current status of a upgrade. This property is read-only . Also see: upgradeprogress Value Name Type Description (property) string Upgrade status (must be one of the following: none , upgradestarted , downloadstarted , downloadaborted , downloadcompleted , installinitiated , installnotstarted , installaborted , installstarted , upgradecompleted , upgradecancelled ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.status\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"completed\" } downloadsize property Provides access to the max free space available to download image. This property is read-only . Value Name Type Description (property) number Available free space in bytes Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.downloadsize\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 315576 } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the FirmwareControl plugin: FirmwareControl interface events: Event Description upgradeprogress Notifies progress of upgrade upgradeprogress event Notifies progress of upgrade. Parameters Name Type Description params object params.status string Upgrade status (must be one of the following: none , upgradestarted , downloadstarted , downloadaborted , downloadcompleted , installinitiated , installnotstarted , installaborted , installstarted , upgradecompleted , upgradecancelled ) params.error string Reason of error (must be one of the following: none , generic , invalidparameters , invalidstate , noenoughspace , operationotsupported , incorrecthash , unauthenticated , unavailable , timedout , downloaddirectorynotexist , resumenotsupported , invalidrange , unkown ) params.progress number Progress of upgrade (number of bytes transferred during download or percentage of completion during install Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.upgradeprogress\", \"params\": { \"status\": \"completed\", \"error\": \"operationotsupported\", \"progress\": 89 } }","title":"FirmwareControlPlugin"},{"location":"FirmwareControlPlugin/#firmware-control-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: FirmwareControl plugin for Thunder framework.","title":"Firmware Control Plugin"},{"location":"FirmwareControlPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"FirmwareControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"FirmwareControlPlugin/#scope","text":"This document describes purpose and functionality of the FirmwareControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"FirmwareControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"FirmwareControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"FirmwareControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"FirmwareControlPlugin/#description","text":"Control Firmware upgrade to the device. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"FirmwareControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: FirmwareControl ) classname string Class name: FirmwareControl locator string Library name: libWPEFrameworkFirmwareControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.source string (optional) Source URL or location of the firmware configuration?.download string (optional) Location where the firmware to be downloaded configuration?.waittime number (optional) Maximum duration to finish download or install process","title":"Configuration"},{"location":"FirmwareControlPlugin/#methods","text":"The following methods are provided by the FirmwareControl plugin: FirmwareControl interface methods: Method Description upgrade Upgrade the device to the given firmware resume Resume download from the last paused position","title":"Methods"},{"location":"FirmwareControlPlugin/#upgrade-method","text":"Upgrade the device to the given firmware. (Note: Ensure size of firmware image should be < 500MB). Also see: upgradeprogress","title":"upgrade method"},{"location":"FirmwareControlPlugin/#parameters","text":"Name Type Description params object params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded params?.type string (optional) Type of the firmware (must be one of the following: CDL , RCDL ) params?.progressinterval number (optional) Number of seconds between progress update events (5 seconds, 10 seconds etc). 0 means invoking callback only once to report final upgrade result params?.hmac string (optional) HMAC value of firmare","title":"Parameters"},{"location":"FirmwareControlPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"FirmwareControlPlugin/#errors","text":"Code Message Description 12 ERROR_INPROGRESS Operation in progress 15 ERROR_INCORRECT_URL Invalid location given 2 ERROR_UNAVAILABLE Error in download 30 ERROR_BAD_REQUEST Bad file name given 5 ERROR_ILLEGAL_STATE Invalid state of device 14 ERROR_INCORRECT_HASH Incorrect hash given","title":"Errors"},{"location":"FirmwareControlPlugin/#example","text":"","title":"Example"},{"location":"FirmwareControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.upgrade\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\", \"type\": \"RCDL\", \"progressinterval\": 10, \"hmac\": \"2834e6d07fa4c7778ef7a4e394f38a5c321afbed51d54ad512bd3fffbc7aa5debc\" } }","title":"Request"},{"location":"FirmwareControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"FirmwareControlPlugin/#resume-method","text":"Resume download from the last paused position. Also see: upgradeprogress","title":"resume method"},{"location":"FirmwareControlPlugin/#parameters_1","text":"Name Type Description params object params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded","title":"Parameters"},{"location":"FirmwareControlPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"FirmwareControlPlugin/#errors_1","text":"Code Message Description 12 ERROR_INPROGRESS Operation in progress 15 ERROR_INCORRECT_URL Invalid location given 2 ERROR_UNAVAILABLE Error in download 30 ERROR_BAD_REQUEST Bad file name given 5 ERROR_ILLEGAL_STATE Invalid state of device","title":"Errors"},{"location":"FirmwareControlPlugin/#example_1","text":"","title":"Example"},{"location":"FirmwareControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.resume\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\" } }","title":"Request"},{"location":"FirmwareControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"FirmwareControlPlugin/#properties","text":"The following properties are provided by the FirmwareControl plugin: FirmwareControl interface properties: Property Description status RO Current status of a upgrade downloadsize RO Max free space available to download image","title":"Properties"},{"location":"FirmwareControlPlugin/#status-property","text":"Provides access to the current status of a upgrade. This property is read-only . Also see: upgradeprogress","title":"status property"},{"location":"FirmwareControlPlugin/#value","text":"Name Type Description (property) string Upgrade status (must be one of the following: none , upgradestarted , downloadstarted , downloadaborted , downloadcompleted , installinitiated , installnotstarted , installaborted , installstarted , upgradecompleted , upgradecancelled )","title":"Value"},{"location":"FirmwareControlPlugin/#example_2","text":"","title":"Example"},{"location":"FirmwareControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.status\" }","title":"Get Request"},{"location":"FirmwareControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"completed\" }","title":"Get Response"},{"location":"FirmwareControlPlugin/#downloadsize-property","text":"Provides access to the max free space available to download image. This property is read-only .","title":"downloadsize property"},{"location":"FirmwareControlPlugin/#value_1","text":"Name Type Description (property) number Available free space in bytes","title":"Value"},{"location":"FirmwareControlPlugin/#example_3","text":"","title":"Example"},{"location":"FirmwareControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.downloadsize\" }","title":"Get Request"},{"location":"FirmwareControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 315576 }","title":"Get Response"},{"location":"FirmwareControlPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the FirmwareControl plugin: FirmwareControl interface events: Event Description upgradeprogress Notifies progress of upgrade","title":"Notifications"},{"location":"FirmwareControlPlugin/#upgradeprogress-event","text":"Notifies progress of upgrade.","title":"upgradeprogress event"},{"location":"FirmwareControlPlugin/#parameters_2","text":"Name Type Description params object params.status string Upgrade status (must be one of the following: none , upgradestarted , downloadstarted , downloadaborted , downloadcompleted , installinitiated , installnotstarted , installaborted , installstarted , upgradecompleted , upgradecancelled ) params.error string Reason of error (must be one of the following: none , generic , invalidparameters , invalidstate , noenoughspace , operationotsupported , incorrecthash , unauthenticated , unavailable , timedout , downloaddirectorynotexist , resumenotsupported , invalidrange , unkown ) params.progress number Progress of upgrade (number of bytes transferred during download or percentage of completion during install","title":"Parameters"},{"location":"FirmwareControlPlugin/#example_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.upgradeprogress\", \"params\": { \"status\": \"completed\", \"error\": \"operationotsupported\", \"progress\": 89 } }","title":"Example"},{"location":"GraphicsPropertiesAPI/","text":"GraphicsProperties API Version: 1.0 Status: :black_circle::white_circle::white_circle: GraphicsProperties interface for Thunder framework. Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the GraphicsProperties interface. It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description GraphicsProperties JSON-RPC interface. Properties The following properties are provided by the GraphicsProperties interface: GraphicsProperties interface properties: Property Description totalgpuram RO Total GPU DRAM memory (in bytes) freegpuram RO Free GPU DRAM memory (in bytes) totalgpuram property Provides access to the total GPU DRAM memory (in bytes). This property is read-only . Value Name Type Description total integer Total GPU DRAM memory (in bytes) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"GraphicsProperties.1.totalgpuram\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } freegpuram property Provides access to the free GPU DRAM memory (in bytes). This property is read-only . Value Name Type Description free integer Free GPU DRAM memory (in bytes) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"GraphicsProperties.1.freegpuram\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"GraphicsPropertiesAPI"},{"location":"GraphicsPropertiesAPI/#graphicsproperties-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: GraphicsProperties interface for Thunder framework.","title":"GraphicsProperties API"},{"location":"GraphicsPropertiesAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"GraphicsPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"GraphicsPropertiesAPI/#scope","text":"This document describes purpose and functionality of the GraphicsProperties interface. It includes detailed specification about its properties provided.","title":"Scope"},{"location":"GraphicsPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"GraphicsPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"GraphicsPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"GraphicsPropertiesAPI/#description","text":"GraphicsProperties JSON-RPC interface.","title":"Description"},{"location":"GraphicsPropertiesAPI/#properties","text":"The following properties are provided by the GraphicsProperties interface: GraphicsProperties interface properties: Property Description totalgpuram RO Total GPU DRAM memory (in bytes) freegpuram RO Free GPU DRAM memory (in bytes)","title":"Properties"},{"location":"GraphicsPropertiesAPI/#totalgpuram-property","text":"Provides access to the total GPU DRAM memory (in bytes). This property is read-only .","title":"totalgpuram property"},{"location":"GraphicsPropertiesAPI/#value","text":"Name Type Description total integer Total GPU DRAM memory (in bytes)","title":"Value"},{"location":"GraphicsPropertiesAPI/#example","text":"","title":"Example"},{"location":"GraphicsPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"GraphicsProperties.1.totalgpuram\" }","title":"Get Request"},{"location":"GraphicsPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"GraphicsPropertiesAPI/#freegpuram-property","text":"Provides access to the free GPU DRAM memory (in bytes). This property is read-only .","title":"freegpuram property"},{"location":"GraphicsPropertiesAPI/#value_1","text":"Name Type Description free integer Free GPU DRAM memory (in bytes)","title":"Value"},{"location":"GraphicsPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"GraphicsPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"GraphicsProperties.1.freegpuram\" }","title":"Get Request"},{"location":"GraphicsPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"HDRPropertiesAPI/","text":"HDRProperties API Version: 1.0 Status: :black_circle::white_circle::white_circle: HDRProperties interface for Thunder framework. Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the HDRProperties interface. It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description HDRProperties JSON-RPC interface. Properties The following properties are provided by the HDRProperties interface: HDRProperties interface properties: Property Description tvcapabilities RO HDR formats supported by TV stbcapabilities RO HDR formats supported by STB hdrsetting RO HDR format in use tvcapabilities property Provides access to the HDR formats supported by TV. This property is read-only . Value Name Type Description type array HDR formats supported by TV type[#] string (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.tvcapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] } stbcapabilities property Provides access to the HDR formats supported by STB. This property is read-only . Value Name Type Description type array HDR formats supported by STB type[#] string (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.stbcapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] } hdrsetting property Provides access to the HDR format in use. This property is read-only . Value Name Type Description type string HDR format (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.hdrsetting\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdrOff\" }","title":"HDRPropertiesAPI"},{"location":"HDRPropertiesAPI/#hdrproperties-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: HDRProperties interface for Thunder framework.","title":"HDRProperties API"},{"location":"HDRPropertiesAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"HDRPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"HDRPropertiesAPI/#scope","text":"This document describes purpose and functionality of the HDRProperties interface. It includes detailed specification about its properties provided.","title":"Scope"},{"location":"HDRPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"HDRPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"HDRPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"HDRPropertiesAPI/#description","text":"HDRProperties JSON-RPC interface.","title":"Description"},{"location":"HDRPropertiesAPI/#properties","text":"The following properties are provided by the HDRProperties interface: HDRProperties interface properties: Property Description tvcapabilities RO HDR formats supported by TV stbcapabilities RO HDR formats supported by STB hdrsetting RO HDR format in use","title":"Properties"},{"location":"HDRPropertiesAPI/#tvcapabilities-property","text":"Provides access to the HDR formats supported by TV. This property is read-only .","title":"tvcapabilities property"},{"location":"HDRPropertiesAPI/#value","text":"Name Type Description type array HDR formats supported by TV type[#] string (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor )","title":"Value"},{"location":"HDRPropertiesAPI/#example","text":"","title":"Example"},{"location":"HDRPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.tvcapabilities\" }","title":"Get Request"},{"location":"HDRPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] }","title":"Get Response"},{"location":"HDRPropertiesAPI/#stbcapabilities-property","text":"Provides access to the HDR formats supported by STB. This property is read-only .","title":"stbcapabilities property"},{"location":"HDRPropertiesAPI/#value_1","text":"Name Type Description type array HDR formats supported by STB type[#] string (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor )","title":"Value"},{"location":"HDRPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"HDRPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.stbcapabilities\" }","title":"Get Request"},{"location":"HDRPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] }","title":"Get Response"},{"location":"HDRPropertiesAPI/#hdrsetting-property","text":"Provides access to the HDR format in use. This property is read-only .","title":"hdrsetting property"},{"location":"HDRPropertiesAPI/#value_2","text":"Name Type Description type string HDR format (must be one of the following: HdrOff , Hdr10 , Hdr10Plus , HdrHlg , HdrDolbyvision , HdrTechnicolor )","title":"Value"},{"location":"HDRPropertiesAPI/#example_2","text":"","title":"Example"},{"location":"HDRPropertiesAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.hdrsetting\" }","title":"Get Request"},{"location":"HDRPropertiesAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdrOff\" }","title":"Get Response"},{"location":"IOConnectorAPI/","text":"IO Connector API Version: 1.0 Status: :black_circle::white_circle::white_circle: IOConnector interface for Thunder framework. Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the IOConnector interface. It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description IO Connector JSON-RPC interface. Properties The following properties are provided by the IOConnector interface: IOConnector interface properties: Property Description pin GPIO pin value pin property Provides access to the GPIO pin value. Also see: activity Value Name Type Description (property) number GPIO pin value The pin id argument shall be passed as the index to the property, e.g. IOConnector.1.pin@189 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown pin ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\", \"params\": 1 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOConnector interface: IOConnector interface events: Event Description activity Notifies about GPIO pin activity activity event Notifies about GPIO pin activity. Description Register to this event to be notified about pin value changes Parameters Name Type Description params object params.value number GPIO pin value The pin ID argument shall be passed within the designator, e.g. 189.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"189.client.events.1.activity\", \"params\": { \"value\": 1 } }","title":"IOConnectorAPI"},{"location":"IOConnectorAPI/#io-connector-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: IOConnector interface for Thunder framework.","title":"IO Connector API"},{"location":"IOConnectorAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"IOConnectorAPI/#introduction","text":"","title":"Introduction"},{"location":"IOConnectorAPI/#scope","text":"This document describes purpose and functionality of the IOConnector interface. It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"IOConnectorAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"IOConnectorAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"IOConnectorAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"IOConnectorAPI/#description","text":"IO Connector JSON-RPC interface.","title":"Description"},{"location":"IOConnectorAPI/#properties","text":"The following properties are provided by the IOConnector interface: IOConnector interface properties: Property Description pin GPIO pin value","title":"Properties"},{"location":"IOConnectorAPI/#pin-property","text":"Provides access to the GPIO pin value. Also see: activity","title":"pin property"},{"location":"IOConnectorAPI/#value","text":"Name Type Description (property) number GPIO pin value The pin id argument shall be passed as the index to the property, e.g. IOConnector.1.pin@189 .","title":"Value"},{"location":"IOConnectorAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown pin ID given","title":"Errors"},{"location":"IOConnectorAPI/#example","text":"","title":"Example"},{"location":"IOConnectorAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\" }","title":"Get Request"},{"location":"IOConnectorAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 }","title":"Get Response"},{"location":"IOConnectorAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\", \"params\": 1 }","title":"Set Request"},{"location":"IOConnectorAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"IOConnectorAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOConnector interface: IOConnector interface events: Event Description activity Notifies about GPIO pin activity","title":"Notifications"},{"location":"IOConnectorAPI/#activity-event","text":"Notifies about GPIO pin activity.","title":"activity event"},{"location":"IOConnectorAPI/#description_1","text":"Register to this event to be notified about pin value changes","title":"Description"},{"location":"IOConnectorAPI/#parameters","text":"Name Type Description params object params.value number GPIO pin value The pin ID argument shall be passed within the designator, e.g. 189.client.events.1 .","title":"Parameters"},{"location":"IOConnectorAPI/#example_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"189.client.events.1.activity\", \"params\": { \"value\": 1 } }","title":"Example"},{"location":"IOConnectorPlugin/","text":"IO Connector Plugin Version: 1.0 Status: :black_circle::black_circle::black_circle: IOConnector plugin for Thunder framework. Table of Contents Introduction Description Configuration Properties Notifications Introduction Scope This document describes purpose and functionality of the IOConnector plugin. It includes detailed specification about its configuration, properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface GPIO General-Purpose Input/Output HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The IO Connector plugin provides access to GPIO pins. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: IOConnector ) classname string Class name: IOConnector locator string Library name: libWPEIOConnector.so autostart boolean Determines if the plugin shall be started automatically along with the framework pins array List of GPIO pins available on the system pins[#] object Pin properties pins[#].id number Pin ID pins[#].mode string Pin mode (must be one of the following: Low , High , Both , Active , Inactive , Output ) pins[#]?.activelow boolean (optional) Denotes if pin is active in low state (default: false ) Properties The following properties are provided by the IOConnector plugin: IOConnector interface properties: Property Description pin GPIO pin value pin property Provides access to the GPIO pin value. Also see: activity Value Name Type Description (property) number GPIO pin value The pin id argument shall be passed as the index to the property, e.g. IOConnector.1.pin@189 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown pin ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\", \"params\": 1 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOConnector plugin: IOConnector interface events: Event Description activity Notifies about GPIO pin activity activity event Notifies about GPIO pin activity. Description Register to this event to be notified about pin value changes Parameters Name Type Description params object params.value number GPIO pin value The pin ID argument shall be passed within the designator, e.g. 189.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"189.client.events.1.activity\", \"params\": { \"value\": 1 } }","title":"IOConnectorPlugin"},{"location":"IOConnectorPlugin/#io-connector-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::black_circle: IOConnector plugin for Thunder framework.","title":"IO Connector Plugin"},{"location":"IOConnectorPlugin/#table-of-contents","text":"Introduction Description Configuration Properties Notifications","title":"Table of Contents"},{"location":"IOConnectorPlugin/#introduction","text":"","title":"Introduction"},{"location":"IOConnectorPlugin/#scope","text":"This document describes purpose and functionality of the IOConnector plugin. It includes detailed specification about its configuration, properties provided and notifications sent.","title":"Scope"},{"location":"IOConnectorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"IOConnectorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface GPIO General-Purpose Input/Output HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"IOConnectorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"IOConnectorPlugin/#description","text":"The IO Connector plugin provides access to GPIO pins. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"IOConnectorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: IOConnector ) classname string Class name: IOConnector locator string Library name: libWPEIOConnector.so autostart boolean Determines if the plugin shall be started automatically along with the framework pins array List of GPIO pins available on the system pins[#] object Pin properties pins[#].id number Pin ID pins[#].mode string Pin mode (must be one of the following: Low , High , Both , Active , Inactive , Output ) pins[#]?.activelow boolean (optional) Denotes if pin is active in low state (default: false )","title":"Configuration"},{"location":"IOConnectorPlugin/#properties","text":"The following properties are provided by the IOConnector plugin: IOConnector interface properties: Property Description pin GPIO pin value","title":"Properties"},{"location":"IOConnectorPlugin/#pin-property","text":"Provides access to the GPIO pin value. Also see: activity","title":"pin property"},{"location":"IOConnectorPlugin/#value","text":"Name Type Description (property) number GPIO pin value The pin id argument shall be passed as the index to the property, e.g. IOConnector.1.pin@189 .","title":"Value"},{"location":"IOConnectorPlugin/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown pin ID given","title":"Errors"},{"location":"IOConnectorPlugin/#example","text":"","title":"Example"},{"location":"IOConnectorPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\" }","title":"Get Request"},{"location":"IOConnectorPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 }","title":"Get Response"},{"location":"IOConnectorPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\", \"params\": 1 }","title":"Set Request"},{"location":"IOConnectorPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"IOConnectorPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOConnector plugin: IOConnector interface events: Event Description activity Notifies about GPIO pin activity","title":"Notifications"},{"location":"IOConnectorPlugin/#activity-event","text":"Notifies about GPIO pin activity.","title":"activity event"},{"location":"IOConnectorPlugin/#description_1","text":"Register to this event to be notified about pin value changes","title":"Description"},{"location":"IOConnectorPlugin/#parameters","text":"Name Type Description params object params.value number GPIO pin value The pin ID argument shall be passed within the designator, e.g. 189.client.events.1 .","title":"Parameters"},{"location":"IOConnectorPlugin/#example_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"189.client.events.1.activity\", \"params\": { \"value\": 1 } }","title":"Example"},{"location":"IOControlAPI/","text":"IO Control API Version: 1.0 Status: :black_circle::white_circle::white_circle: IOControl interface for Thunder framework. Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the IOControl interface. It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description IO Control JSON-RPC interface. Properties The following properties are provided by the IOControl interface: IOControl interface properties: Property Description pin GPIO pin value pin property Provides access to the GPIO pin value. Also see: activity Value Name Type Description (property) number GPIO pin value The pin id argument shall be passed as the index to the property, e.g. IOControl.1.pin@189 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown pin ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.pin@189\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.pin@189\", \"params\": 1 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOControl interface: IOControl interface events: Event Description activity Notifies about GPIO pin activity activity event Notifies about GPIO pin activity. Description Register to this event to be notified about pin value changes Parameters Name Type Description params object params.value number GPIO pin value The pin ID argument shall be passed within the designator, e.g. 189.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"189.client.events.1.activity\", \"params\": { \"value\": 1 } }","title":"IOControlAPI"},{"location":"IOControlAPI/#io-control-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: IOControl interface for Thunder framework.","title":"IO Control API"},{"location":"IOControlAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"IOControlAPI/#introduction","text":"","title":"Introduction"},{"location":"IOControlAPI/#scope","text":"This document describes purpose and functionality of the IOControl interface. It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"IOControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"IOControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"IOControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"IOControlAPI/#description","text":"IO Control JSON-RPC interface.","title":"Description"},{"location":"IOControlAPI/#properties","text":"The following properties are provided by the IOControl interface: IOControl interface properties: Property Description pin GPIO pin value","title":"Properties"},{"location":"IOControlAPI/#pin-property","text":"Provides access to the GPIO pin value. Also see: activity","title":"pin property"},{"location":"IOControlAPI/#value","text":"Name Type Description (property) number GPIO pin value The pin id argument shall be passed as the index to the property, e.g. IOControl.1.pin@189 .","title":"Value"},{"location":"IOControlAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown pin ID given","title":"Errors"},{"location":"IOControlAPI/#example","text":"","title":"Example"},{"location":"IOControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.pin@189\" }","title":"Get Request"},{"location":"IOControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 }","title":"Get Response"},{"location":"IOControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.pin@189\", \"params\": 1 }","title":"Set Request"},{"location":"IOControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"IOControlAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOControl interface: IOControl interface events: Event Description activity Notifies about GPIO pin activity","title":"Notifications"},{"location":"IOControlAPI/#activity-event","text":"Notifies about GPIO pin activity.","title":"activity event"},{"location":"IOControlAPI/#description_1","text":"Register to this event to be notified about pin value changes","title":"Description"},{"location":"IOControlAPI/#parameters","text":"Name Type Description params object params.value number GPIO pin value The pin ID argument shall be passed within the designator, e.g. 189.client.events.1 .","title":"Parameters"},{"location":"IOControlAPI/#example_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"189.client.events.1.activity\", \"params\": { \"value\": 1 } }","title":"Example"},{"location":"InputSwitchAPI/","text":"Input Switch API Version: 1.0 Status: :black_circle::white_circle::white_circle: InputSwitch interface for Thunder framework. Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the InputSwitch interface. It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description InputSwitch JSON-RPC interface. Methods The following methods are provided by the InputSwitch interface: InputSwitch interface methods: Method Description channel Enable or Disable the throughput through the given channel select Enable the given channel, disabling all othe channels, whish are not immune status Check the status of the requested channel channel method Enable or Disable the throughput through the given channel. Parameters Name Type Description params object params.name string Callsign that is the owner of this channel params.enabled boolean Enable or disable the throughput of data through this channel Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Failed to scan Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.channel\", \"params\": { \"name\": \"WebKitBrowser\", \"enabled\": false } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } select method Enable the given channel, disabling all othe channels, whish are not immune. Parameters Name Type Description params object params.name string Callsign that is the owner of this channel Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Failed to scan Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.select\", \"params\": { \"name\": \"WebKitBrowser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } status method Check the status of the requested channel. Parameters Name Type Description params object params.name string Callsign that is the owner of this channel Result Name Type Description result array result[#] object result[#].name string Callsign associated with this channel result[#].enabled boolean Is the channel enabled to receive info Errors Code Message Description 22 ERROR_UNKNOWN_KEY Could not find the designated channel Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.status\", \"params\": { \"name\": \"WebKitBrowser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"WebKitBrowser\", \"enabled\": false } ] }","title":"InputSwitchAPI"},{"location":"InputSwitchAPI/#input-switch-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: InputSwitch interface for Thunder framework.","title":"Input Switch API"},{"location":"InputSwitchAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"InputSwitchAPI/#introduction","text":"","title":"Introduction"},{"location":"InputSwitchAPI/#scope","text":"This document describes purpose and functionality of the InputSwitch interface. It includes detailed specification about its methods provided.","title":"Scope"},{"location":"InputSwitchAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"InputSwitchAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"InputSwitchAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"InputSwitchAPI/#description","text":"InputSwitch JSON-RPC interface.","title":"Description"},{"location":"InputSwitchAPI/#methods","text":"The following methods are provided by the InputSwitch interface: InputSwitch interface methods: Method Description channel Enable or Disable the throughput through the given channel select Enable the given channel, disabling all othe channels, whish are not immune status Check the status of the requested channel","title":"Methods"},{"location":"InputSwitchAPI/#channel-method","text":"Enable or Disable the throughput through the given channel.","title":"channel method"},{"location":"InputSwitchAPI/#parameters","text":"Name Type Description params object params.name string Callsign that is the owner of this channel params.enabled boolean Enable or disable the throughput of data through this channel","title":"Parameters"},{"location":"InputSwitchAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"InputSwitchAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Failed to scan","title":"Errors"},{"location":"InputSwitchAPI/#example","text":"","title":"Example"},{"location":"InputSwitchAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.channel\", \"params\": { \"name\": \"WebKitBrowser\", \"enabled\": false } }","title":"Request"},{"location":"InputSwitchAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"InputSwitchAPI/#select-method","text":"Enable the given channel, disabling all othe channels, whish are not immune.","title":"select method"},{"location":"InputSwitchAPI/#parameters_1","text":"Name Type Description params object params.name string Callsign that is the owner of this channel","title":"Parameters"},{"location":"InputSwitchAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"InputSwitchAPI/#errors_1","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Failed to scan","title":"Errors"},{"location":"InputSwitchAPI/#example_1","text":"","title":"Example"},{"location":"InputSwitchAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.select\", \"params\": { \"name\": \"WebKitBrowser\" } }","title":"Request"},{"location":"InputSwitchAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"InputSwitchAPI/#status-method","text":"Check the status of the requested channel.","title":"status method"},{"location":"InputSwitchAPI/#parameters_2","text":"Name Type Description params object params.name string Callsign that is the owner of this channel","title":"Parameters"},{"location":"InputSwitchAPI/#result_2","text":"Name Type Description result array result[#] object result[#].name string Callsign associated with this channel result[#].enabled boolean Is the channel enabled to receive info","title":"Result"},{"location":"InputSwitchAPI/#errors_2","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Could not find the designated channel","title":"Errors"},{"location":"InputSwitchAPI/#example_2","text":"","title":"Example"},{"location":"InputSwitchAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.status\", \"params\": { \"name\": \"WebKitBrowser\" } }","title":"Request"},{"location":"InputSwitchAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"WebKitBrowser\", \"enabled\": false } ] }","title":"Response"},{"location":"LanguageTagAPI/","text":"LanguageTag API Version: 1.0 Status: :black_circle::white_circle::white_circle: LanguageTag interface for Thunder framework. Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the LanguageTag interface. It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description LanguageTag JSON-RPC interface. Properties The following properties are provided by the LanguageTag interface: LanguageTag interface properties: Property Description language Current application user interface language tag language property Provides access to the current application user interface language tag. Value Name Type Description language string Language string as per RFC5646 Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.language\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"en\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.language\", \"params\": \"en\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LanguageTag interface: LanguageTag interface events: Event Description languagechanged Notify that the Language tag has been changed languagechanged event Notify that the Language tag has been changed. Parameters Name Type Description language string new LangauageTag value Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.languagechanged\", \"params\": \"...\" }","title":"LanguageTagAPI"},{"location":"LanguageTagAPI/#languagetag-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: LanguageTag interface for Thunder framework.","title":"LanguageTag API"},{"location":"LanguageTagAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"LanguageTagAPI/#introduction","text":"","title":"Introduction"},{"location":"LanguageTagAPI/#scope","text":"This document describes purpose and functionality of the LanguageTag interface. It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"LanguageTagAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"LanguageTagAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"LanguageTagAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"LanguageTagAPI/#description","text":"LanguageTag JSON-RPC interface.","title":"Description"},{"location":"LanguageTagAPI/#properties","text":"The following properties are provided by the LanguageTag interface: LanguageTag interface properties: Property Description language Current application user interface language tag","title":"Properties"},{"location":"LanguageTagAPI/#language-property","text":"Provides access to the current application user interface language tag.","title":"language property"},{"location":"LanguageTagAPI/#value","text":"Name Type Description language string Language string as per RFC5646","title":"Value"},{"location":"LanguageTagAPI/#example","text":"","title":"Example"},{"location":"LanguageTagAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.language\" }","title":"Get Request"},{"location":"LanguageTagAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"en\" }","title":"Get Response"},{"location":"LanguageTagAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.language\", \"params\": \"en\" }","title":"Set Request"},{"location":"LanguageTagAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"LanguageTagAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LanguageTag interface: LanguageTag interface events: Event Description languagechanged Notify that the Language tag has been changed","title":"Notifications"},{"location":"LanguageTagAPI/#languagechanged-event","text":"Notify that the Language tag has been changed.","title":"languagechanged event"},{"location":"LanguageTagAPI/#parameters","text":"Name Type Description language string new LangauageTag value","title":"Parameters"},{"location":"LanguageTagAPI/#example_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.languagechanged\", \"params\": \"...\" }","title":"Example"},{"location":"LocationSyncAPI/","text":"Location Sync API Version: 1.0 Status: :black_circle::white_circle::white_circle: LocationSync interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the LocationSync interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Location Sync JSON-RPC interface. Methods The following methods are provided by the LocationSync interface: LocationSync interface methods: Method Description sync Synchronizes the location sync method Synchronizes the location. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to synchdonize the location 2 ERROR_UNAVAILABLE Unavailable locator 15 ERROR_INCORRECT_URL Incorrect URL 12 ERROR_INPROGRESS Probing in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.sync\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the LocationSync interface: LocationSync interface properties: Property Description location RO Location information location property Provides access to the location information. This property is read-only . Value Name Type Description (property) object Location information (property).city string City name (property).country string Country name (property).region string Region name (property).timezone string Time zone information (property).publicip string Public IP Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.location\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"city\": \"Wroclaw\", \"country\": \"Poland\", \"region\": \"Wroclaw\", \"timezone\": \"CET-1CEST,M3.5.0,M10.5.0/3\", \"publicip\": \"78.11.117.118\" } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LocationSync interface: LocationSync interface events: Event Description locationchange Signals a location change locationchange event Signals a location change. Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.locationchange\" }","title":"LocationSyncAPI"},{"location":"LocationSyncAPI/#location-sync-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: LocationSync interface for Thunder framework.","title":"Location Sync API"},{"location":"LocationSyncAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"LocationSyncAPI/#introduction","text":"","title":"Introduction"},{"location":"LocationSyncAPI/#scope","text":"This document describes purpose and functionality of the LocationSync interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"LocationSyncAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"LocationSyncAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"LocationSyncAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"LocationSyncAPI/#description","text":"Location Sync JSON-RPC interface.","title":"Description"},{"location":"LocationSyncAPI/#methods","text":"The following methods are provided by the LocationSync interface: LocationSync interface methods: Method Description sync Synchronizes the location","title":"Methods"},{"location":"LocationSyncAPI/#sync-method","text":"Synchronizes the location.","title":"sync method"},{"location":"LocationSyncAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"LocationSyncAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"LocationSyncAPI/#errors","text":"Code Message Description 1 ERROR_GENERAL Failed to synchdonize the location 2 ERROR_UNAVAILABLE Unavailable locator 15 ERROR_INCORRECT_URL Incorrect URL 12 ERROR_INPROGRESS Probing in progress","title":"Errors"},{"location":"LocationSyncAPI/#example","text":"","title":"Example"},{"location":"LocationSyncAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.sync\" }","title":"Request"},{"location":"LocationSyncAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"LocationSyncAPI/#properties","text":"The following properties are provided by the LocationSync interface: LocationSync interface properties: Property Description location RO Location information","title":"Properties"},{"location":"LocationSyncAPI/#location-property","text":"Provides access to the location information. This property is read-only .","title":"location property"},{"location":"LocationSyncAPI/#value","text":"Name Type Description (property) object Location information (property).city string City name (property).country string Country name (property).region string Region name (property).timezone string Time zone information (property).publicip string Public IP","title":"Value"},{"location":"LocationSyncAPI/#example_1","text":"","title":"Example"},{"location":"LocationSyncAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.location\" }","title":"Get Request"},{"location":"LocationSyncAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"city\": \"Wroclaw\", \"country\": \"Poland\", \"region\": \"Wroclaw\", \"timezone\": \"CET-1CEST,M3.5.0,M10.5.0/3\", \"publicip\": \"78.11.117.118\" } }","title":"Get Response"},{"location":"LocationSyncAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LocationSync interface: LocationSync interface events: Event Description locationchange Signals a location change","title":"Notifications"},{"location":"LocationSyncAPI/#locationchange-event","text":"Signals a location change.","title":"locationchange event"},{"location":"LocationSyncAPI/#parameters_1","text":"This event carries no parameters.","title":"Parameters"},{"location":"LocationSyncAPI/#example_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.locationchange\" }","title":"Example"},{"location":"MessengerAPI/","text":"Messenger API Version: 1.0 Status: :black_circle::white_circle::white_circle: Messenger interface for Thunder framework. Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the Messenger interface. It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Messenger JSON-RPC interface. Methods The following methods are provided by the Messenger interface: Messenger interface methods: Method Description join Joins a messaging room leave Leaves a messaging room send Sends a message to a room join method Joins a messaging room. Description Use this method to join a room. If the specified room does not exist, then it will be created. Also see: userupdate Parameters Name Type Description params object params.user string User name to join the room under (must not be empty) params.room string Name of the room to join (must not be empty) params?.secure string (optional) Room security (must be one of the following: insecure , secure ) params?.acl array (optional) Access-control list for secure room params?.acl[#] string (optional) URL origin with possible wildcards Result Name Type Description result object result.roomid string Unique ID of the room Errors Code Message Description 5 ERROR_ILLEGAL_STATE User name is already taken (i.e. the user has already joined the room) 30 ERROR_BAD_REQUEST User name or room name was invalid 24 ERROR_PRIVILEGED_REQUEST Room security errors Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.join\", \"params\": { \"user\": \"Bob\", \"room\": \"Lounge\", \"secure\": \"secure\", \"acl\": [ \"https://*.github.io\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"roomid\": \"1e217990dd1cd4f66124\" } } leave method Leaves a messaging room. Description Use this method to leave a room. The room ID becomes invalid after this call. If there are no more users, the room will be destroyed and related resources freed. Also see: userupdate Parameters Name Type Description params object params.roomid string ID of the room to leave Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY The given room ID was invalid Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.leave\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } send method Sends a message to a room. Description Use this method to send a message to a room. Also see: message Parameters Name Type Description params object params.roomid string ID of the room to send the message to params.message string The message content to send Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY The given room ID was invalid Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.send\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\", \"message\": \"Hello!\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Messenger interface: Messenger interface events: Event Description roomupdate Notifies about room status updates userupdate Notifies about user status updates message Notifies about new messages in a room roomupdate event Notifies about room status updates. Description Register to this event to be notified about room status updates. Immediately after registering to this notification the listener will sequentially receive updates of all rooms that have been created so far. Parameters Name Type Description params object params.room string Name of the room this notification relates to params?.secure string (optional) Room security (must be one of the following: insecure , secure ) params.action string Specifies the room status change, e.g. created or destroyed (must be one of the following: created , destroyed ) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.roomupdate\", \"params\": { \"room\": \"Lounge\", \"secure\": \"secure\", \"action\": \"created\" } } userupdate event Notifies about user status updates. Description Register to this event to be notified about room status updates. Immediately after registering to this notification the listener will sequentially receive updates of all users that have joined the room so far. Parameters Name Type Description params object params.user string Name of the user that has this notification relates to params.action string Specifies the user status change, e.g. join or leave a room (must be one of the following: joined , left ) The room ID argument shall be passed within the designator, e.g. 1e217990dd1cd4f66124.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.events.1.userupdate\", \"params\": { \"user\": \"Bob\", \"action\": \"joined\" } } message event Notifies about new messages in a room. Description Register to this event to be notified about new messages in a room. Parameters Name Type Description params object params.user string Name of the user that has sent the message params.message string Content of the message The room ID argument shall be passed within the designator, e.g. 1e217990dd1cd4f66124.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.events.1.message\", \"params\": { \"user\": \"Bob\", \"message\": \"Hello!\" } }","title":"MessengerAPI"},{"location":"MessengerAPI/#messenger-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Messenger interface for Thunder framework.","title":"Messenger API"},{"location":"MessengerAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"MessengerAPI/#introduction","text":"","title":"Introduction"},{"location":"MessengerAPI/#scope","text":"This document describes purpose and functionality of the Messenger interface. It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"MessengerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"MessengerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"MessengerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"MessengerAPI/#description","text":"Messenger JSON-RPC interface.","title":"Description"},{"location":"MessengerAPI/#methods","text":"The following methods are provided by the Messenger interface: Messenger interface methods: Method Description join Joins a messaging room leave Leaves a messaging room send Sends a message to a room","title":"Methods"},{"location":"MessengerAPI/#join-method","text":"Joins a messaging room.","title":"join method"},{"location":"MessengerAPI/#description_1","text":"Use this method to join a room. If the specified room does not exist, then it will be created. Also see: userupdate","title":"Description"},{"location":"MessengerAPI/#parameters","text":"Name Type Description params object params.user string User name to join the room under (must not be empty) params.room string Name of the room to join (must not be empty) params?.secure string (optional) Room security (must be one of the following: insecure , secure ) params?.acl array (optional) Access-control list for secure room params?.acl[#] string (optional) URL origin with possible wildcards","title":"Parameters"},{"location":"MessengerAPI/#result","text":"Name Type Description result object result.roomid string Unique ID of the room","title":"Result"},{"location":"MessengerAPI/#errors","text":"Code Message Description 5 ERROR_ILLEGAL_STATE User name is already taken (i.e. the user has already joined the room) 30 ERROR_BAD_REQUEST User name or room name was invalid 24 ERROR_PRIVILEGED_REQUEST Room security errors","title":"Errors"},{"location":"MessengerAPI/#example","text":"","title":"Example"},{"location":"MessengerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.join\", \"params\": { \"user\": \"Bob\", \"room\": \"Lounge\", \"secure\": \"secure\", \"acl\": [ \"https://*.github.io\" ] } }","title":"Request"},{"location":"MessengerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"roomid\": \"1e217990dd1cd4f66124\" } }","title":"Response"},{"location":"MessengerAPI/#leave-method","text":"Leaves a messaging room.","title":"leave method"},{"location":"MessengerAPI/#description_2","text":"Use this method to leave a room. The room ID becomes invalid after this call. If there are no more users, the room will be destroyed and related resources freed. Also see: userupdate","title":"Description"},{"location":"MessengerAPI/#parameters_1","text":"Name Type Description params object params.roomid string ID of the room to leave","title":"Parameters"},{"location":"MessengerAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"MessengerAPI/#errors_1","text":"Code Message Description 22 ERROR_UNKNOWN_KEY The given room ID was invalid","title":"Errors"},{"location":"MessengerAPI/#example_1","text":"","title":"Example"},{"location":"MessengerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.leave\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\" } }","title":"Request"},{"location":"MessengerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"MessengerAPI/#send-method","text":"Sends a message to a room.","title":"send method"},{"location":"MessengerAPI/#description_3","text":"Use this method to send a message to a room. Also see: message","title":"Description"},{"location":"MessengerAPI/#parameters_2","text":"Name Type Description params object params.roomid string ID of the room to send the message to params.message string The message content to send","title":"Parameters"},{"location":"MessengerAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"MessengerAPI/#errors_2","text":"Code Message Description 22 ERROR_UNKNOWN_KEY The given room ID was invalid","title":"Errors"},{"location":"MessengerAPI/#example_2","text":"","title":"Example"},{"location":"MessengerAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.send\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\", \"message\": \"Hello!\" } }","title":"Request"},{"location":"MessengerAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"MessengerAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Messenger interface: Messenger interface events: Event Description roomupdate Notifies about room status updates userupdate Notifies about user status updates message Notifies about new messages in a room","title":"Notifications"},{"location":"MessengerAPI/#roomupdate-event","text":"Notifies about room status updates.","title":"roomupdate event"},{"location":"MessengerAPI/#description_4","text":"Register to this event to be notified about room status updates. Immediately after registering to this notification the listener will sequentially receive updates of all rooms that have been created so far.","title":"Description"},{"location":"MessengerAPI/#parameters_3","text":"Name Type Description params object params.room string Name of the room this notification relates to params?.secure string (optional) Room security (must be one of the following: insecure , secure ) params.action string Specifies the room status change, e.g. created or destroyed (must be one of the following: created , destroyed )","title":"Parameters"},{"location":"MessengerAPI/#example_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.roomupdate\", \"params\": { \"room\": \"Lounge\", \"secure\": \"secure\", \"action\": \"created\" } }","title":"Example"},{"location":"MessengerAPI/#userupdate-event","text":"Notifies about user status updates.","title":"userupdate event"},{"location":"MessengerAPI/#description_5","text":"Register to this event to be notified about room status updates. Immediately after registering to this notification the listener will sequentially receive updates of all users that have joined the room so far.","title":"Description"},{"location":"MessengerAPI/#parameters_4","text":"Name Type Description params object params.user string Name of the user that has this notification relates to params.action string Specifies the user status change, e.g. join or leave a room (must be one of the following: joined , left ) The room ID argument shall be passed within the designator, e.g. 1e217990dd1cd4f66124.client.events.1 .","title":"Parameters"},{"location":"MessengerAPI/#example_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.events.1.userupdate\", \"params\": { \"user\": \"Bob\", \"action\": \"joined\" } }","title":"Example"},{"location":"MessengerAPI/#message-event","text":"Notifies about new messages in a room.","title":"message event"},{"location":"MessengerAPI/#description_6","text":"Register to this event to be notified about new messages in a room.","title":"Description"},{"location":"MessengerAPI/#parameters_5","text":"Name Type Description params object params.user string Name of the user that has sent the message params.message string Content of the message The room ID argument shall be passed within the designator, e.g. 1e217990dd1cd4f66124.client.events.1 .","title":"Parameters"},{"location":"MessengerAPI/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.events.1.message\", \"params\": { \"user\": \"Bob\", \"message\": \"Hello!\" } }","title":"Example"},{"location":"MonitorAPI/","text":"Monitor API Version: 1.0 Status: :black_circle::white_circle::white_circle: Monitor interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Monitor interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Monitor JSON-RPC interface. Methods The following methods are provided by the Monitor interface: Monitor interface methods: Method Description restartlimits Sets new restart limits for a service resetstats Resets memory and process statistics for a single service watched by the Monitor restartlimits method Sets new restart limits for a service. Parameters Name Type Description params object params.callsign string The callsign of a service to reset measurements snapshot of params.restart object params.restart.limit number Maximum number or restarts to be attempted params.restart.window number Time period (in seconds) within which failures must happen for the limit to be considered crossed Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.restartlimits\", \"params\": { \"callsign\": \"WebServer\", \"restart\": { \"limit\": 3, \"window\": 60 } } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } resetstats method Resets memory and process statistics for a single service watched by the Monitor. Parameters Name Type Description params object params.callsign string The callsign of a service to reset statistics of Result Name Type Description result object Measurements for the service before reset result.measurements object Measurements for the service result.measurements.resident object Resident memory measurement result.measurements.resident.min number Minimal value measured result.measurements.resident.max number Maximal value measured result.measurements.resident.average number Average of all measurements result.measurements.resident.last number Last measured value result.measurements.allocated object Allocated memory measurement result.measurements.allocated.min number Minimal value measured result.measurements.allocated.max number Maximal value measured result.measurements.allocated.average number Average of all measurements result.measurements.allocated.last number Last measured value result.measurements.shared object Shared memory measurement result.measurements.shared.min number Minimal value measured result.measurements.shared.max number Maximal value measured result.measurements.shared.average number Average of all measurements result.measurements.shared.last number Last measured value result.measurements.process object Processes measurement result.measurements.process.min number Minimal value measured result.measurements.process.max number Maximal value measured result.measurements.process.average number Average of all measurements result.measurements.process.last number Last measured value result.measurements.operational boolean Whether the service is up and running result.measurements.count number Number of measurements result.observable string A callsign of the watched service result.restart object Restart limits for failures applying to the service result.restart.limit number Maximum number or restarts to be attempted result.restart.window number Time period (in seconds) within which failures must happen for the limit to be considered crossed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.resetstats\", \"params\": { \"callsign\": \"WebServer\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } } Properties The following properties are provided by the Monitor interface: Monitor interface properties: Property Description status RO Service statistics status property Provides access to the service statistics. This property is read-only . Value Name Type Description (property) array Service statistics (property)[#] object (property)[#].measurements object Measurements for the service (property)[#].measurements.resident object Resident memory measurement (property)[#].measurements.resident.min number Minimal value measured (property)[#].measurements.resident.max number Maximal value measured (property)[#].measurements.resident.average number Average of all measurements (property)[#].measurements.resident.last number Last measured value (property)[#].measurements.allocated object Allocated memory measurement (property)[#].measurements.allocated.min number Minimal value measured (property)[#].measurements.allocated.max number Maximal value measured (property)[#].measurements.allocated.average number Average of all measurements (property)[#].measurements.allocated.last number Last measured value (property)[#].measurements.shared object Shared memory measurement (property)[#].measurements.shared.min number Minimal value measured (property)[#].measurements.shared.max number Maximal value measured (property)[#].measurements.shared.average number Average of all measurements (property)[#].measurements.shared.last number Last measured value (property)[#].measurements.process object Processes measurement (property)[#].measurements.process.min number Minimal value measured (property)[#].measurements.process.max number Maximal value measured (property)[#].measurements.process.average number Average of all measurements (property)[#].measurements.process.last number Last measured value (property)[#].measurements.operational boolean Whether the service is up and running (property)[#].measurements.count number Number of measurements (property)[#].observable string A callsign of the watched service (property)[#].restart object Restart limits for failures applying to the service (property)[#].restart.limit number Maximum number or restarts to be attempted (property)[#].restart.window number Time period (in seconds) within which failures must happen for the limit to be considered crossed The callsign argument shall be passed as the index to the property, e.g. Monitor.1.status@WebServer . If omitted then all observed objects will be returned on read. Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.status@WebServer\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } ] } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Monitor interface: Monitor interface events: Event Description action Signals an action taken by the Monitor action event Signals an action taken by the Monitor. Parameters Name Type Description params object params.callsign string Callsign of the service the Monitor acted upon params.action string The action executed by the Monitor on a service. One of: \"Activate\", \"Deactivate\", \"StoppedRestarting\" params.reason string A message describing the reason the action was taken Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.action\", \"params\": { \"callsign\": \"WebServer\", \"action\": \"Deactivate\", \"reason\": \"EXCEEDED_MEMORY\" } }","title":"MonitorAPI"},{"location":"MonitorAPI/#monitor-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Monitor interface for Thunder framework.","title":"Monitor API"},{"location":"MonitorAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"MonitorAPI/#introduction","text":"","title":"Introduction"},{"location":"MonitorAPI/#scope","text":"This document describes purpose and functionality of the Monitor interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"MonitorAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"MonitorAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"MonitorAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"MonitorAPI/#description","text":"Monitor JSON-RPC interface.","title":"Description"},{"location":"MonitorAPI/#methods","text":"The following methods are provided by the Monitor interface: Monitor interface methods: Method Description restartlimits Sets new restart limits for a service resetstats Resets memory and process statistics for a single service watched by the Monitor","title":"Methods"},{"location":"MonitorAPI/#restartlimits-method","text":"Sets new restart limits for a service.","title":"restartlimits method"},{"location":"MonitorAPI/#parameters","text":"Name Type Description params object params.callsign string The callsign of a service to reset measurements snapshot of params.restart object params.restart.limit number Maximum number or restarts to be attempted params.restart.window number Time period (in seconds) within which failures must happen for the limit to be considered crossed","title":"Parameters"},{"location":"MonitorAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"MonitorAPI/#example","text":"","title":"Example"},{"location":"MonitorAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.restartlimits\", \"params\": { \"callsign\": \"WebServer\", \"restart\": { \"limit\": 3, \"window\": 60 } } }","title":"Request"},{"location":"MonitorAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"MonitorAPI/#resetstats-method","text":"Resets memory and process statistics for a single service watched by the Monitor.","title":"resetstats method"},{"location":"MonitorAPI/#parameters_1","text":"Name Type Description params object params.callsign string The callsign of a service to reset statistics of","title":"Parameters"},{"location":"MonitorAPI/#result_1","text":"Name Type Description result object Measurements for the service before reset result.measurements object Measurements for the service result.measurements.resident object Resident memory measurement result.measurements.resident.min number Minimal value measured result.measurements.resident.max number Maximal value measured result.measurements.resident.average number Average of all measurements result.measurements.resident.last number Last measured value result.measurements.allocated object Allocated memory measurement result.measurements.allocated.min number Minimal value measured result.measurements.allocated.max number Maximal value measured result.measurements.allocated.average number Average of all measurements result.measurements.allocated.last number Last measured value result.measurements.shared object Shared memory measurement result.measurements.shared.min number Minimal value measured result.measurements.shared.max number Maximal value measured result.measurements.shared.average number Average of all measurements result.measurements.shared.last number Last measured value result.measurements.process object Processes measurement result.measurements.process.min number Minimal value measured result.measurements.process.max number Maximal value measured result.measurements.process.average number Average of all measurements result.measurements.process.last number Last measured value result.measurements.operational boolean Whether the service is up and running result.measurements.count number Number of measurements result.observable string A callsign of the watched service result.restart object Restart limits for failures applying to the service result.restart.limit number Maximum number or restarts to be attempted result.restart.window number Time period (in seconds) within which failures must happen for the limit to be considered crossed","title":"Result"},{"location":"MonitorAPI/#example_1","text":"","title":"Example"},{"location":"MonitorAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.resetstats\", \"params\": { \"callsign\": \"WebServer\" } }","title":"Request"},{"location":"MonitorAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } }","title":"Response"},{"location":"MonitorAPI/#properties","text":"The following properties are provided by the Monitor interface: Monitor interface properties: Property Description status RO Service statistics","title":"Properties"},{"location":"MonitorAPI/#status-property","text":"Provides access to the service statistics. This property is read-only .","title":"status property"},{"location":"MonitorAPI/#value","text":"Name Type Description (property) array Service statistics (property)[#] object (property)[#].measurements object Measurements for the service (property)[#].measurements.resident object Resident memory measurement (property)[#].measurements.resident.min number Minimal value measured (property)[#].measurements.resident.max number Maximal value measured (property)[#].measurements.resident.average number Average of all measurements (property)[#].measurements.resident.last number Last measured value (property)[#].measurements.allocated object Allocated memory measurement (property)[#].measurements.allocated.min number Minimal value measured (property)[#].measurements.allocated.max number Maximal value measured (property)[#].measurements.allocated.average number Average of all measurements (property)[#].measurements.allocated.last number Last measured value (property)[#].measurements.shared object Shared memory measurement (property)[#].measurements.shared.min number Minimal value measured (property)[#].measurements.shared.max number Maximal value measured (property)[#].measurements.shared.average number Average of all measurements (property)[#].measurements.shared.last number Last measured value (property)[#].measurements.process object Processes measurement (property)[#].measurements.process.min number Minimal value measured (property)[#].measurements.process.max number Maximal value measured (property)[#].measurements.process.average number Average of all measurements (property)[#].measurements.process.last number Last measured value (property)[#].measurements.operational boolean Whether the service is up and running (property)[#].measurements.count number Number of measurements (property)[#].observable string A callsign of the watched service (property)[#].restart object Restart limits for failures applying to the service (property)[#].restart.limit number Maximum number or restarts to be attempted (property)[#].restart.window number Time period (in seconds) within which failures must happen for the limit to be considered crossed The callsign argument shall be passed as the index to the property, e.g. Monitor.1.status@WebServer . If omitted then all observed objects will be returned on read.","title":"Value"},{"location":"MonitorAPI/#example_2","text":"","title":"Example"},{"location":"MonitorAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.status@WebServer\" }","title":"Get Request"},{"location":"MonitorAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } ] }","title":"Get Response"},{"location":"MonitorAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Monitor interface: Monitor interface events: Event Description action Signals an action taken by the Monitor","title":"Notifications"},{"location":"MonitorAPI/#action-event","text":"Signals an action taken by the Monitor.","title":"action event"},{"location":"MonitorAPI/#parameters_2","text":"Name Type Description params object params.callsign string Callsign of the service the Monitor acted upon params.action string The action executed by the Monitor on a service. One of: \"Activate\", \"Deactivate\", \"StoppedRestarting\" params.reason string A message describing the reason the action was taken","title":"Parameters"},{"location":"MonitorAPI/#example_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.action\", \"params\": { \"callsign\": \"WebServer\", \"action\": \"Deactivate\", \"reason\": \"EXCEEDED_MEMORY\" } }","title":"Example"},{"location":"NetflixAPI/","text":"Netflix API Version: 1.0 Status: :black_circle::white_circle::white_circle: Netflix interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Netflix interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Netflix JSON-RPC interface. Methods The following methods are provided by the Netflix interface: Netflix interface methods: Method Description factoryreset Performs a reset to factory defaults systemcommand Sends a system command to Netflix factoryreset method Performs a reset to factory defaults. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Netflix is unavailable Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.factoryreset\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } systemcommand method Sends a system command to Netflix. Parameters Name Type Description params object params.command string Command to send to Netflix Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Netflix is unavailable 22 ERROR_UNKNOWN_KEY Unknown command Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.systemcommand\", \"params\": { \"command\": \"exit\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Netflix interface: Netflix interface properties: Property Description esn RO ESN value visibility WO Current Netflix visibility StateControl interface properties: Property Description state Running state of the service esn property Provides access to the ESN value. This property is read-only . This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations. Value Name Type Description (property) string ESN value Errors Code Message Description 2 ERROR_UNAVAILABLE Netflix is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.esn\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DADDAUFV2=00000000000000000000000000000001\" } visibility property Provides access to the current Netflix visibility. This property is write-only . This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations. Also see: visibilitychange Value Name Type Description (property) string Current Netflix visibility (must be one of the following: visible , hidden ) Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Netflix interface: Netflix interface events: Event Description playbackchange Signals playback status change StateControl interface events: Event Description statechange Signals a state change of the service playbackchange event Signals playback status change. Parameters Name Type Description params object params.playing boolean Determines if the Netflix is in playing mode (true) or not playing (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.playbackchange\", \"params\": { \"playing\": true } } statechange event Signals a state change of the service. Parameters Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"NetflixAPI"},{"location":"NetflixAPI/#netflix-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Netflix interface for Thunder framework.","title":"Netflix API"},{"location":"NetflixAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"NetflixAPI/#introduction","text":"","title":"Introduction"},{"location":"NetflixAPI/#scope","text":"This document describes purpose and functionality of the Netflix interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"NetflixAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"NetflixAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"NetflixAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"NetflixAPI/#description","text":"Netflix JSON-RPC interface.","title":"Description"},{"location":"NetflixAPI/#methods","text":"The following methods are provided by the Netflix interface: Netflix interface methods: Method Description factoryreset Performs a reset to factory defaults systemcommand Sends a system command to Netflix","title":"Methods"},{"location":"NetflixAPI/#factoryreset-method","text":"Performs a reset to factory defaults. This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations.","title":"factoryreset method"},{"location":"NetflixAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"NetflixAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetflixAPI/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Netflix is unavailable","title":"Errors"},{"location":"NetflixAPI/#example","text":"","title":"Example"},{"location":"NetflixAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.factoryreset\" }","title":"Request"},{"location":"NetflixAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetflixAPI/#systemcommand-method","text":"Sends a system command to Netflix.","title":"systemcommand method"},{"location":"NetflixAPI/#parameters_1","text":"Name Type Description params object params.command string Command to send to Netflix","title":"Parameters"},{"location":"NetflixAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetflixAPI/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Netflix is unavailable 22 ERROR_UNKNOWN_KEY Unknown command","title":"Errors"},{"location":"NetflixAPI/#example_1","text":"","title":"Example"},{"location":"NetflixAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.systemcommand\", \"params\": { \"command\": \"exit\" } }","title":"Request"},{"location":"NetflixAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetflixAPI/#properties","text":"The following properties are provided by the Netflix interface: Netflix interface properties: Property Description esn RO ESN value visibility WO Current Netflix visibility StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"NetflixAPI/#esn-property","text":"Provides access to the ESN value. This property is read-only . This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations.","title":"esn property"},{"location":"NetflixAPI/#value","text":"Name Type Description (property) string ESN value","title":"Value"},{"location":"NetflixAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Netflix is unavailable","title":"Errors"},{"location":"NetflixAPI/#example_2","text":"","title":"Example"},{"location":"NetflixAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.esn\" }","title":"Get Request"},{"location":"NetflixAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DADDAUFV2=00000000000000000000000000000001\" }","title":"Get Response"},{"location":"NetflixAPI/#visibility-property","text":"Provides access to the current Netflix visibility. This property is write-only . This API is deprecated and may be removed in the future. It is no longer recommended for use in new implementations. Also see: visibilitychange","title":"visibility property"},{"location":"NetflixAPI/#value_1","text":"Name Type Description (property) string Current Netflix visibility (must be one of the following: visible , hidden )","title":"Value"},{"location":"NetflixAPI/#example_3","text":"","title":"Example"},{"location":"NetflixAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"NetflixAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"NetflixAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"NetflixAPI/#value_2","text":"Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended )","title":"Value"},{"location":"NetflixAPI/#example_4","text":"","title":"Example"},{"location":"NetflixAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.state\" }","title":"Get Request"},{"location":"NetflixAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"NetflixAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"NetflixAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"NetflixAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Netflix interface: Netflix interface events: Event Description playbackchange Signals playback status change StateControl interface events: Event Description statechange Signals a state change of the service","title":"Notifications"},{"location":"NetflixAPI/#playbackchange-event","text":"Signals playback status change.","title":"playbackchange event"},{"location":"NetflixAPI/#parameters_2","text":"Name Type Description params object params.playing boolean Determines if the Netflix is in playing mode (true) or not playing (false)","title":"Parameters"},{"location":"NetflixAPI/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.playbackchange\", \"params\": { \"playing\": true } }","title":"Example"},{"location":"NetflixAPI/#statechange-event","text":"Signals a state change of the service.","title":"statechange event"},{"location":"NetflixAPI/#parameters_3","text":"Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"NetflixAPI/#example_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"Example"},{"location":"NetworkControlAPI/","text":"Network Control API Version: 1.0 Status: :black_circle::white_circle::white_circle: NetworkControl interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the NetworkControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Network Control JSON-RPC interface. Methods The following methods are provided by the NetworkControl interface: NetworkControl interface methods: Method Description reload Reloads a static or non-static network interface adapter request Reloads a non-static network interface adapter assign Reloads a static network interface adapter flush Flushes a network interface adapter reload method Reloads a static or non-static network interface adapter. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.reload\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } request method Reloads a non-static network interface adapter. Also see: connectionchange Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.request\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } assign method Reloads a static network interface adapter. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.assign\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } flush method Flushes a network interface adapter. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.flush\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the NetworkControl interface: NetworkControl interface properties: Property Description network Network information dns DNS addresses up Interface up status network property Provides access to the network information. Value Name Type Description (property) array Network information (property)[#] object (property)[#]?.interface string (optional) Network interface name (property)[#]?.mode string (optional) Mode (must be one of the following: Manual , Static , Dynamic ) (property)[#]?.address string (optional) IP address (property)[#]?.mask number (optional) Network interface mask (property)[#]?.gateway string (optional) Gateway address (property)[#]?.broadcast string (optional) Broadcast IP (property)[#]?.dns array (optional) DNS addresses (property)[#]?.dns[#] string (optional) DNS addresses The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.network@eth0 . If network interface is not given, all network interfaces are returned. Errors Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@eth0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"mode\": \"dynamic\", \"address\": \"192.168.1.158\", \"mask\": 24, \"gateway\": \"192.168.1.1\", \"broadcast\": \"192.168.1.255\", \"dns\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@eth0\", \"params\": [ { \"interface\": \"eth0\", \"mode\": \"dynamic\", \"address\": \"192.168.1.158\", \"mask\": 24, \"gateway\": \"192.168.1.1\", \"broadcast\": \"192.168.1.255\", \"dns\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } dns property Provides access to the DNS addresses. Value Name Type Description (property) array DNS addresses (property)[#] string DNS addresses Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\", \"params\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } up property Provides access to the interface up status. Value Name Type Description (property) boolean Interface up status The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.up@eth0 . Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@eth0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@eth0\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkControl interface: NetworkControl interface events: Event Description connectionchange Notifies about connection status (created, updated, removed, connected, ipassigned and connectionfailed) connectionchange event Notifies about connection status (created, updated, removed, connected, ipassigned and connectionfailed). Parameters Name Type Description params object params.name string Network interface name params.address string IP Address of network interface, if it is connected params.status string Status of the interface, update, connected or not (must be one of the following: created , updated , removed , connected , ipassigned , connectionfailed ) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.connectionchange\", \"params\": { \"name\": \"eth0\", \"address\": \"192.168.1.10\", \"status\": \"connected\" } }","title":"NetworkControlAPI"},{"location":"NetworkControlAPI/#network-control-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: NetworkControl interface for Thunder framework.","title":"Network Control API"},{"location":"NetworkControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"NetworkControlAPI/#introduction","text":"","title":"Introduction"},{"location":"NetworkControlAPI/#scope","text":"This document describes purpose and functionality of the NetworkControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"NetworkControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"NetworkControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"NetworkControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"NetworkControlAPI/#description","text":"Network Control JSON-RPC interface.","title":"Description"},{"location":"NetworkControlAPI/#methods","text":"The following methods are provided by the NetworkControl interface: NetworkControl interface methods: Method Description reload Reloads a static or non-static network interface adapter request Reloads a non-static network interface adapter assign Reloads a static network interface adapter flush Flushes a network interface adapter","title":"Methods"},{"location":"NetworkControlAPI/#reload-method","text":"Reloads a static or non-static network interface adapter.","title":"reload method"},{"location":"NetworkControlAPI/#parameters","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"NetworkControlAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlAPI/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface","title":"Errors"},{"location":"NetworkControlAPI/#example","text":"","title":"Example"},{"location":"NetworkControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.reload\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"NetworkControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkControlAPI/#request-method","text":"Reloads a non-static network interface adapter. Also see: connectionchange","title":"request method"},{"location":"NetworkControlAPI/#parameters_1","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"NetworkControlAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlAPI/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface","title":"Errors"},{"location":"NetworkControlAPI/#example_1","text":"","title":"Example"},{"location":"NetworkControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.request\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"NetworkControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkControlAPI/#assign-method","text":"Reloads a static network interface adapter.","title":"assign method"},{"location":"NetworkControlAPI/#parameters_2","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"NetworkControlAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface","title":"Errors"},{"location":"NetworkControlAPI/#example_2","text":"","title":"Example"},{"location":"NetworkControlAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.assign\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"NetworkControlAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkControlAPI/#flush-method","text":"Flushes a network interface adapter.","title":"flush method"},{"location":"NetworkControlAPI/#parameters_3","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"NetworkControlAPI/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlAPI/#errors_3","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface","title":"Errors"},{"location":"NetworkControlAPI/#example_3","text":"","title":"Example"},{"location":"NetworkControlAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.flush\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"NetworkControlAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkControlAPI/#properties","text":"The following properties are provided by the NetworkControl interface: NetworkControl interface properties: Property Description network Network information dns DNS addresses up Interface up status","title":"Properties"},{"location":"NetworkControlAPI/#network-property","text":"Provides access to the network information.","title":"network property"},{"location":"NetworkControlAPI/#value","text":"Name Type Description (property) array Network information (property)[#] object (property)[#]?.interface string (optional) Network interface name (property)[#]?.mode string (optional) Mode (must be one of the following: Manual , Static , Dynamic ) (property)[#]?.address string (optional) IP address (property)[#]?.mask number (optional) Network interface mask (property)[#]?.gateway string (optional) Gateway address (property)[#]?.broadcast string (optional) Broadcast IP (property)[#]?.dns array (optional) DNS addresses (property)[#]?.dns[#] string (optional) DNS addresses The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.network@eth0 . If network interface is not given, all network interfaces are returned.","title":"Value"},{"location":"NetworkControlAPI/#errors_4","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface","title":"Errors"},{"location":"NetworkControlAPI/#example_4","text":"","title":"Example"},{"location":"NetworkControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@eth0\" }","title":"Get Request"},{"location":"NetworkControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"mode\": \"dynamic\", \"address\": \"192.168.1.158\", \"mask\": 24, \"gateway\": \"192.168.1.1\", \"broadcast\": \"192.168.1.255\", \"dns\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } ] }","title":"Get Response"},{"location":"NetworkControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@eth0\", \"params\": [ { \"interface\": \"eth0\", \"mode\": \"dynamic\", \"address\": \"192.168.1.158\", \"mask\": 24, \"gateway\": \"192.168.1.1\", \"broadcast\": \"192.168.1.255\", \"dns\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } ] }","title":"Set Request"},{"location":"NetworkControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"NetworkControlAPI/#dns-property","text":"Provides access to the DNS addresses.","title":"dns property"},{"location":"NetworkControlAPI/#value_1","text":"Name Type Description (property) array DNS addresses (property)[#] string DNS addresses","title":"Value"},{"location":"NetworkControlAPI/#example_5","text":"","title":"Example"},{"location":"NetworkControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\" }","title":"Get Request"},{"location":"NetworkControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] }","title":"Get Response"},{"location":"NetworkControlAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\", \"params\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] }","title":"Set Request"},{"location":"NetworkControlAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"NetworkControlAPI/#up-property","text":"Provides access to the interface up status.","title":"up property"},{"location":"NetworkControlAPI/#value_2","text":"Name Type Description (property) boolean Interface up status The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.up@eth0 .","title":"Value"},{"location":"NetworkControlAPI/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlAPI/#errors_5","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface","title":"Errors"},{"location":"NetworkControlAPI/#example_6","text":"","title":"Example"},{"location":"NetworkControlAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@eth0\" }","title":"Get Request"},{"location":"NetworkControlAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"NetworkControlAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@eth0\", \"params\": false }","title":"Set Request"},{"location":"NetworkControlAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"NetworkControlAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkControl interface: NetworkControl interface events: Event Description connectionchange Notifies about connection status (created, updated, removed, connected, ipassigned and connectionfailed)","title":"Notifications"},{"location":"NetworkControlAPI/#connectionchange-event","text":"Notifies about connection status (created, updated, removed, connected, ipassigned and connectionfailed).","title":"connectionchange event"},{"location":"NetworkControlAPI/#parameters_4","text":"Name Type Description params object params.name string Network interface name params.address string IP Address of network interface, if it is connected params.status string Status of the interface, update, connected or not (must be one of the following: created , updated , removed , connected , ipassigned , connectionfailed )","title":"Parameters"},{"location":"NetworkControlAPI/#example_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.connectionchange\", \"params\": { \"name\": \"eth0\", \"address\": \"192.168.1.10\", \"status\": \"connected\" } }","title":"Example"},{"location":"NetworkControlPlugin/","text":"Network Control Plugin Version: 1.0 Status: :black_circle::black_circle::black_circle: NetworkControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the NetworkControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Network Control plugin provides functionality for network interface management. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: NetworkControl ) classname string Class name: NetworkControl locator string Library name: libWPEFrameworkNetworkControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.dnsfile string (optional) Path to DNS resolve file (default: /etc/resolv.conf) configuration?.response number (optional) Maximum response time out of the DHCP server configuration?.retries number (optional) Maximum number of retries to the DHCP server Methods The following methods are provided by the NetworkControl plugin: NetworkControl interface methods: Method Description reload Reloads a static or non-static network interface adapter request Reloads a non-static network interface adapter assign Reloads a static network interface adapter flush Flushes a network interface adapter reload method Reloads a static or non-static network interface adapter. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.reload\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } request method Reloads a non-static network interface adapter. Also see: connectionchange Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.request\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } assign method Reloads a static network interface adapter. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.assign\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } flush method Flushes a network interface adapter. Parameters Name Type Description params object params.interface string Network interface name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.flush\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the NetworkControl plugin: NetworkControl interface properties: Property Description network Network information dns DNS addresses up Interface up status network property Provides access to the network information. Value Name Type Description (property) array Network information (property)[#] object (property)[#]?.interface string (optional) Network interface name (property)[#]?.mode string (optional) Mode (must be one of the following: Manual , Static , Dynamic ) (property)[#]?.address string (optional) IP address (property)[#]?.mask number (optional) Network interface mask (property)[#]?.gateway string (optional) Gateway address (property)[#]?.broadcast string (optional) Broadcast IP (property)[#]?.dns array (optional) DNS addresses (property)[#]?.dns[#] string (optional) DNS addresses The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.network@eth0 . If network interface is not given, all network interfaces are returned. Errors Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@eth0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"mode\": \"dynamic\", \"address\": \"192.168.1.158\", \"mask\": 24, \"gateway\": \"192.168.1.1\", \"broadcast\": \"192.168.1.255\", \"dns\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@eth0\", \"params\": [ { \"interface\": \"eth0\", \"mode\": \"dynamic\", \"address\": \"192.168.1.158\", \"mask\": 24, \"gateway\": \"192.168.1.1\", \"broadcast\": \"192.168.1.255\", \"dns\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } dns property Provides access to the DNS addresses. Value Name Type Description (property) array DNS addresses (property)[#] string DNS addresses Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\", \"params\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } up property Provides access to the interface up status. Value Name Type Description (property) boolean Interface up status The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.up@eth0 . Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@eth0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@eth0\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkControl plugin: NetworkControl interface events: Event Description connectionchange Notifies about connection status (created, updated, removed, connected, ipassigned and connectionfailed) connectionchange event Notifies about connection status (created, updated, removed, connected, ipassigned and connectionfailed). Parameters Name Type Description params object params.name string Network interface name params.address string IP Address of network interface, if it is connected params.status string Status of the interface, update, connected or not (must be one of the following: created , updated , removed , connected , ipassigned , connectionfailed ) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.connectionchange\", \"params\": { \"name\": \"eth0\", \"address\": \"192.168.1.10\", \"status\": \"connected\" } }","title":"NetworkControlPlugin"},{"location":"NetworkControlPlugin/#network-control-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::black_circle: NetworkControl plugin for Thunder framework.","title":"Network Control Plugin"},{"location":"NetworkControlPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"NetworkControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"NetworkControlPlugin/#scope","text":"This document describes purpose and functionality of the NetworkControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"NetworkControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"NetworkControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"NetworkControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"NetworkControlPlugin/#description","text":"The Network Control plugin provides functionality for network interface management. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"NetworkControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: NetworkControl ) classname string Class name: NetworkControl locator string Library name: libWPEFrameworkNetworkControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.dnsfile string (optional) Path to DNS resolve file (default: /etc/resolv.conf) configuration?.response number (optional) Maximum response time out of the DHCP server configuration?.retries number (optional) Maximum number of retries to the DHCP server","title":"Configuration"},{"location":"NetworkControlPlugin/#methods","text":"The following methods are provided by the NetworkControl plugin: NetworkControl interface methods: Method Description reload Reloads a static or non-static network interface adapter request Reloads a non-static network interface adapter assign Reloads a static network interface adapter flush Flushes a network interface adapter","title":"Methods"},{"location":"NetworkControlPlugin/#reload-method","text":"Reloads a static or non-static network interface adapter.","title":"reload method"},{"location":"NetworkControlPlugin/#parameters","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"NetworkControlPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlPlugin/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface","title":"Errors"},{"location":"NetworkControlPlugin/#example","text":"","title":"Example"},{"location":"NetworkControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.reload\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"NetworkControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkControlPlugin/#request-method","text":"Reloads a non-static network interface adapter. Also see: connectionchange","title":"request method"},{"location":"NetworkControlPlugin/#parameters_1","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"NetworkControlPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlPlugin/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface","title":"Errors"},{"location":"NetworkControlPlugin/#example_1","text":"","title":"Example"},{"location":"NetworkControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.request\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"NetworkControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkControlPlugin/#assign-method","text":"Reloads a static network interface adapter.","title":"assign method"},{"location":"NetworkControlPlugin/#parameters_2","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"NetworkControlPlugin/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlPlugin/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface","title":"Errors"},{"location":"NetworkControlPlugin/#example_2","text":"","title":"Example"},{"location":"NetworkControlPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.assign\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"NetworkControlPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkControlPlugin/#flush-method","text":"Flushes a network interface adapter.","title":"flush method"},{"location":"NetworkControlPlugin/#parameters_3","text":"Name Type Description params object params.interface string Network interface name","title":"Parameters"},{"location":"NetworkControlPlugin/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlPlugin/#errors_3","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavaliable network interface","title":"Errors"},{"location":"NetworkControlPlugin/#example_3","text":"","title":"Example"},{"location":"NetworkControlPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.flush\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"NetworkControlPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkControlPlugin/#properties","text":"The following properties are provided by the NetworkControl plugin: NetworkControl interface properties: Property Description network Network information dns DNS addresses up Interface up status","title":"Properties"},{"location":"NetworkControlPlugin/#network-property","text":"Provides access to the network information.","title":"network property"},{"location":"NetworkControlPlugin/#value","text":"Name Type Description (property) array Network information (property)[#] object (property)[#]?.interface string (optional) Network interface name (property)[#]?.mode string (optional) Mode (must be one of the following: Manual , Static , Dynamic ) (property)[#]?.address string (optional) IP address (property)[#]?.mask number (optional) Network interface mask (property)[#]?.gateway string (optional) Gateway address (property)[#]?.broadcast string (optional) Broadcast IP (property)[#]?.dns array (optional) DNS addresses (property)[#]?.dns[#] string (optional) DNS addresses The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.network@eth0 . If network interface is not given, all network interfaces are returned.","title":"Value"},{"location":"NetworkControlPlugin/#errors_4","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface","title":"Errors"},{"location":"NetworkControlPlugin/#example_4","text":"","title":"Example"},{"location":"NetworkControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@eth0\" }","title":"Get Request"},{"location":"NetworkControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"mode\": \"dynamic\", \"address\": \"192.168.1.158\", \"mask\": 24, \"gateway\": \"192.168.1.1\", \"broadcast\": \"192.168.1.255\", \"dns\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } ] }","title":"Get Response"},{"location":"NetworkControlPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@eth0\", \"params\": [ { \"interface\": \"eth0\", \"mode\": \"dynamic\", \"address\": \"192.168.1.158\", \"mask\": 24, \"gateway\": \"192.168.1.1\", \"broadcast\": \"192.168.1.255\", \"dns\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] } ] }","title":"Set Request"},{"location":"NetworkControlPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"NetworkControlPlugin/#dns-property","text":"Provides access to the DNS addresses.","title":"dns property"},{"location":"NetworkControlPlugin/#value_1","text":"Name Type Description (property) array DNS addresses (property)[#] string DNS addresses","title":"Value"},{"location":"NetworkControlPlugin/#example_5","text":"","title":"Example"},{"location":"NetworkControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\" }","title":"Get Request"},{"location":"NetworkControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] }","title":"Get Response"},{"location":"NetworkControlPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\", \"params\": [ \"['192.168.1.1', 'www.google.com', '8.8.8.8']\" ] }","title":"Set Request"},{"location":"NetworkControlPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"NetworkControlPlugin/#up-property","text":"Provides access to the interface up status.","title":"up property"},{"location":"NetworkControlPlugin/#value_2","text":"Name Type Description (property) boolean Interface up status The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.up@eth0 .","title":"Value"},{"location":"NetworkControlPlugin/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkControlPlugin/#errors_5","text":"Code Message Description 2 ERROR_UNAVAILABLE Unavailable network interface","title":"Errors"},{"location":"NetworkControlPlugin/#example_6","text":"","title":"Example"},{"location":"NetworkControlPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@eth0\" }","title":"Get Request"},{"location":"NetworkControlPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"NetworkControlPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@eth0\", \"params\": false }","title":"Set Request"},{"location":"NetworkControlPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"NetworkControlPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkControl plugin: NetworkControl interface events: Event Description connectionchange Notifies about connection status (created, updated, removed, connected, ipassigned and connectionfailed)","title":"Notifications"},{"location":"NetworkControlPlugin/#connectionchange-event","text":"Notifies about connection status (created, updated, removed, connected, ipassigned and connectionfailed).","title":"connectionchange event"},{"location":"NetworkControlPlugin/#parameters_4","text":"Name Type Description params object params.name string Network interface name params.address string IP Address of network interface, if it is connected params.status string Status of the interface, update, connected or not (must be one of the following: created , updated , removed , connected , ipassigned , connectionfailed )","title":"Parameters"},{"location":"NetworkControlPlugin/#example_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.connectionchange\", \"params\": { \"name\": \"eth0\", \"address\": \"192.168.1.10\", \"status\": \"connected\" } }","title":"Example"},{"location":"NetworkToolsAPI/","text":"NetworkTools API Version: 1.0 Status: :black_circle::white_circle::white_circle: NetworkTools interface for Thunder framework. Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the NetworkTools interface. It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description NetworkTools JSON-RPC interface. Methods The following methods are provided by the NetworkTools interface: NetworkTools interface methods: Method Description ping Ping the given destination with ICMP packages traceroute TraceRoute to the given destination with ICMP packages ping method Ping the given destination with ICMP packages. Parameters Name Type Description params object params.destination string params.timeoutinseconds integer params.count integer Result Name Type Description result null Always null Errors Code Message Description ERROR_NONE, ERROR_INPROGRES means an icmp check is already in progress . Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.ping\", \"params\": { \"destination\": \"...\", \"timeoutinseconds\": 0, \"count\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } traceroute method TraceRoute to the given destination with ICMP packages. Parameters Name Type Description params object params.destination string params.timeoutinseconds integer Result Name Type Description result null Always null Errors Code Message Description ERROR_NONE, ERROR_INPROGRES means an icmp check is already in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.traceroute\", \"params\": { \"destination\": \"...\", \"timeoutinseconds\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkTools interface: NetworkTools interface events: Event Description report Signals an message from a given host report event Signals an message from a given host. Parameters Name Type Description params object params.source string is the NodeId of the system that send the metadta presented in the next field params.metadata string depending on the tool started, this JSON string will contain additiona information on this notification Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.report\", \"params\": { \"source\": \"...\", \"metadata\": \"...\" } }","title":"NetworkToolsAPI"},{"location":"NetworkToolsAPI/#networktools-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: NetworkTools interface for Thunder framework.","title":"NetworkTools API"},{"location":"NetworkToolsAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"NetworkToolsAPI/#introduction","text":"","title":"Introduction"},{"location":"NetworkToolsAPI/#scope","text":"This document describes purpose and functionality of the NetworkTools interface. It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"NetworkToolsAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"NetworkToolsAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"NetworkToolsAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"NetworkToolsAPI/#description","text":"NetworkTools JSON-RPC interface.","title":"Description"},{"location":"NetworkToolsAPI/#methods","text":"The following methods are provided by the NetworkTools interface: NetworkTools interface methods: Method Description ping Ping the given destination with ICMP packages traceroute TraceRoute to the given destination with ICMP packages","title":"Methods"},{"location":"NetworkToolsAPI/#ping-method","text":"Ping the given destination with ICMP packages.","title":"ping method"},{"location":"NetworkToolsAPI/#parameters","text":"Name Type Description params object params.destination string params.timeoutinseconds integer params.count integer","title":"Parameters"},{"location":"NetworkToolsAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkToolsAPI/#errors","text":"Code Message Description ERROR_NONE, ERROR_INPROGRES means an icmp check is already in progress .","title":"Errors"},{"location":"NetworkToolsAPI/#example","text":"","title":"Example"},{"location":"NetworkToolsAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.ping\", \"params\": { \"destination\": \"...\", \"timeoutinseconds\": 0, \"count\": 0 } }","title":"Request"},{"location":"NetworkToolsAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkToolsAPI/#traceroute-method","text":"TraceRoute to the given destination with ICMP packages.","title":"traceroute method"},{"location":"NetworkToolsAPI/#parameters_1","text":"Name Type Description params object params.destination string params.timeoutinseconds integer","title":"Parameters"},{"location":"NetworkToolsAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"NetworkToolsAPI/#errors_1","text":"Code Message Description ERROR_NONE, ERROR_INPROGRES means an icmp check is already in progress","title":"Errors"},{"location":"NetworkToolsAPI/#example_1","text":"","title":"Example"},{"location":"NetworkToolsAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.traceroute\", \"params\": { \"destination\": \"...\", \"timeoutinseconds\": 0 } }","title":"Request"},{"location":"NetworkToolsAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"NetworkToolsAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkTools interface: NetworkTools interface events: Event Description report Signals an message from a given host","title":"Notifications"},{"location":"NetworkToolsAPI/#report-event","text":"Signals an message from a given host.","title":"report event"},{"location":"NetworkToolsAPI/#parameters_2","text":"Name Type Description params object params.source string is the NodeId of the system that send the metadta presented in the next field params.metadata string depending on the tool started, this JSON string will contain additiona information on this notification","title":"Parameters"},{"location":"NetworkToolsAPI/#example_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.report\", \"params\": { \"source\": \"...\", \"metadata\": \"...\" } }","title":"Example"},{"location":"OpenCDMiAPI/","text":"OpenCDMi API Version: 1.0 Status: :black_circle::white_circle::white_circle: OCDM interface for Thunder framework. Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the OCDM interface. It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description OpenCDMi JSON-RPC interface. Properties The following properties are provided by the OCDM interface: OCDM interface properties: Property Description drms RO Supported DRM systems keysystems RO DRM key systems drms property Provides access to the supported DRM systems. This property is read-only . Value Name Type Description (property) array Supported DRM systems (property)[#] object (property)[#].name string Name of the DRM (property)[#].keysystems array (property)[#].keysystems[#] string Identifier of a key system Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.drms\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"PlayReady\", \"keysystems\": [ \"com.microsoft.playready\" ] } ] } keysystems property Provides access to the DRM key systems. This property is read-only . Value Name Type Description (property) array DRM key systems (property)[#] string Identifier of a key system The drm system argument shall be passed as the index to the property, e.g. OCDM.1.keysystems@PlayReady . Errors Code Message Description 30 ERROR_BAD_REQUEST Invalid DRM name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.keysystems@PlayReady\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"com.microsoft.playready\" ] }","title":"OpenCDMiAPI"},{"location":"OpenCDMiAPI/#opencdmi-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: OCDM interface for Thunder framework.","title":"OpenCDMi API"},{"location":"OpenCDMiAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"OpenCDMiAPI/#introduction","text":"","title":"Introduction"},{"location":"OpenCDMiAPI/#scope","text":"This document describes purpose and functionality of the OCDM interface. It includes detailed specification about its properties provided.","title":"Scope"},{"location":"OpenCDMiAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"OpenCDMiAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"OpenCDMiAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"OpenCDMiAPI/#description","text":"OpenCDMi JSON-RPC interface.","title":"Description"},{"location":"OpenCDMiAPI/#properties","text":"The following properties are provided by the OCDM interface: OCDM interface properties: Property Description drms RO Supported DRM systems keysystems RO DRM key systems","title":"Properties"},{"location":"OpenCDMiAPI/#drms-property","text":"Provides access to the supported DRM systems. This property is read-only .","title":"drms property"},{"location":"OpenCDMiAPI/#value","text":"Name Type Description (property) array Supported DRM systems (property)[#] object (property)[#].name string Name of the DRM (property)[#].keysystems array (property)[#].keysystems[#] string Identifier of a key system","title":"Value"},{"location":"OpenCDMiAPI/#example","text":"","title":"Example"},{"location":"OpenCDMiAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.drms\" }","title":"Get Request"},{"location":"OpenCDMiAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"PlayReady\", \"keysystems\": [ \"com.microsoft.playready\" ] } ] }","title":"Get Response"},{"location":"OpenCDMiAPI/#keysystems-property","text":"Provides access to the DRM key systems. This property is read-only .","title":"keysystems property"},{"location":"OpenCDMiAPI/#value_1","text":"Name Type Description (property) array DRM key systems (property)[#] string Identifier of a key system The drm system argument shall be passed as the index to the property, e.g. OCDM.1.keysystems@PlayReady .","title":"Value"},{"location":"OpenCDMiAPI/#errors","text":"Code Message Description 30 ERROR_BAD_REQUEST Invalid DRM name","title":"Errors"},{"location":"OpenCDMiAPI/#example_1","text":"","title":"Example"},{"location":"OpenCDMiAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.keysystems@PlayReady\" }","title":"Get Request"},{"location":"OpenCDMiAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"com.microsoft.playready\" ] }","title":"Get Response"},{"location":"OutputAPI/","text":"Output API Version: 1.0 Status: :black_circle::white_circle::white_circle: Output interface for Thunder framework. Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the Output interface. It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Output JSON-RPC interface. Properties The following properties are provided by the Output interface: Dolby Output interface properties: Property Description dolby atmosmetadata RO Atmos capabilities of Sink dolby soundmode RO Sound Mode - Mono/Stereo/Surround dolby enableatmosoutput WO Enable Atmos Audio Output dolby mode Dolby Mode dolby_atmosmetadata property Provides access to the atmos capabilities of Sink. This property is read-only . Value Name Type Description supported boolean Atmos capabilities of Sink Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_atmosmetadata\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } dolby_soundmode property Provides access to the sound Mode - Mono/Stereo/Surround. This property is read-only . Value Name Type Description mode string Sound Mode - Mono/Stereo/Surround (must be one of the following: Unknown , Mono , Stereo , Surround , Passthru , SoundmodeAuto ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_soundmode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" } dolby_enableatmosoutput property Provides access to the enable Atmos Audio Output. This property is write-only . Value Name Type Description enable boolean enable/disable Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_enableatmosoutput\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } dolby_mode property Provides access to the dolby Mode. Value Name Type Description mode string dolby mode type (must be one of the following: DigitalPcm , DigitalPlus , DigitalAc3 , Auto , DigitalPassthrough , Ms12 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_mode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DigitalPcm\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_mode\", \"params\": \"DigitalPcm\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Output interface: Dolby Output interface events: Event Description dolby audiomodechanged dolby_audiomodechanged event Parameters Name Type Description params object params.mode string (must be one of the following: Unknown , Mono , Stereo , Surround , Passthru , SoundmodeAuto ) params.enabled boolean Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.dolby_audiomodechanged\", \"params\": { \"mode\": \"Unknown\", \"enabled\": false } }","title":"OutputAPI"},{"location":"OutputAPI/#output-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Output interface for Thunder framework.","title":"Output API"},{"location":"OutputAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"OutputAPI/#introduction","text":"","title":"Introduction"},{"location":"OutputAPI/#scope","text":"This document describes purpose and functionality of the Output interface. It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"OutputAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"OutputAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"OutputAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"OutputAPI/#description","text":"Output JSON-RPC interface.","title":"Description"},{"location":"OutputAPI/#properties","text":"The following properties are provided by the Output interface: Dolby Output interface properties: Property Description dolby atmosmetadata RO Atmos capabilities of Sink dolby soundmode RO Sound Mode - Mono/Stereo/Surround dolby enableatmosoutput WO Enable Atmos Audio Output dolby mode Dolby Mode","title":"Properties"},{"location":"OutputAPI/#dolby_atmosmetadata-property","text":"Provides access to the atmos capabilities of Sink. This property is read-only .","title":"dolby_atmosmetadata property"},{"location":"OutputAPI/#value","text":"Name Type Description supported boolean Atmos capabilities of Sink","title":"Value"},{"location":"OutputAPI/#example","text":"","title":"Example"},{"location":"OutputAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_atmosmetadata\" }","title":"Get Request"},{"location":"OutputAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"OutputAPI/#dolby_soundmode-property","text":"Provides access to the sound Mode - Mono/Stereo/Surround. This property is read-only .","title":"dolby_soundmode property"},{"location":"OutputAPI/#value_1","text":"Name Type Description mode string Sound Mode - Mono/Stereo/Surround (must be one of the following: Unknown , Mono , Stereo , Surround , Passthru , SoundmodeAuto )","title":"Value"},{"location":"OutputAPI/#example_1","text":"","title":"Example"},{"location":"OutputAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_soundmode\" }","title":"Get Request"},{"location":"OutputAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" }","title":"Get Response"},{"location":"OutputAPI/#dolby_enableatmosoutput-property","text":"Provides access to the enable Atmos Audio Output. This property is write-only .","title":"dolby_enableatmosoutput property"},{"location":"OutputAPI/#value_2","text":"Name Type Description enable boolean enable/disable","title":"Value"},{"location":"OutputAPI/#example_2","text":"","title":"Example"},{"location":"OutputAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_enableatmosoutput\", \"params\": false }","title":"Set Request"},{"location":"OutputAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"OutputAPI/#dolby_mode-property","text":"Provides access to the dolby Mode.","title":"dolby_mode property"},{"location":"OutputAPI/#value_3","text":"Name Type Description mode string dolby mode type (must be one of the following: DigitalPcm , DigitalPlus , DigitalAc3 , Auto , DigitalPassthrough , Ms12 )","title":"Value"},{"location":"OutputAPI/#example_3","text":"","title":"Example"},{"location":"OutputAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_mode\" }","title":"Get Request"},{"location":"OutputAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DigitalPcm\" }","title":"Get Response"},{"location":"OutputAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolby_mode\", \"params\": \"DigitalPcm\" }","title":"Set Request"},{"location":"OutputAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"OutputAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Output interface: Dolby Output interface events: Event Description dolby audiomodechanged","title":"Notifications"},{"location":"OutputAPI/#dolby_audiomodechanged-event","text":"","title":"dolby_audiomodechanged event"},{"location":"OutputAPI/#parameters","text":"Name Type Description params object params.mode string (must be one of the following: Unknown , Mono , Stereo , Surround , Passthru , SoundmodeAuto ) params.enabled boolean","title":"Parameters"},{"location":"OutputAPI/#example_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.dolby_audiomodechanged\", \"params\": { \"mode\": \"Unknown\", \"enabled\": false } }","title":"Example"},{"location":"PackagerAPI/","text":"Packager API Version: 1.0 Status: :black_circle::white_circle::white_circle: Packager interface for Thunder framework. Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the Packager interface. It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Packager JSON-RPC interface. Methods The following methods are provided by the Packager interface: Packager interface methods: Method Description install Installs a package given by a name, an URL or a file path synchronize Synchronizes repository manifest with a repository install method Installs a package given by a name, an URL or a file path. Parameters Name Type Description params object params.package string A name, an URL or a file path of the package to install params?.version string (optional) Version of the package to install params?.architecture string (optional) Architecture of the package to install Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.install\", \"params\": { \"package\": \"wpeframework-plugin-netflix\", \"version\": \"1.0\", \"architecture\": \"arm\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } synchronize method Synchronizes repository manifest with a repository. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.synchronize\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"PackagerAPI"},{"location":"PackagerAPI/#packager-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Packager interface for Thunder framework.","title":"Packager API"},{"location":"PackagerAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"PackagerAPI/#introduction","text":"","title":"Introduction"},{"location":"PackagerAPI/#scope","text":"This document describes purpose and functionality of the Packager interface. It includes detailed specification about its methods provided.","title":"Scope"},{"location":"PackagerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"PackagerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"PackagerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"PackagerAPI/#description","text":"Packager JSON-RPC interface.","title":"Description"},{"location":"PackagerAPI/#methods","text":"The following methods are provided by the Packager interface: Packager interface methods: Method Description install Installs a package given by a name, an URL or a file path synchronize Synchronizes repository manifest with a repository","title":"Methods"},{"location":"PackagerAPI/#install-method","text":"Installs a package given by a name, an URL or a file path.","title":"install method"},{"location":"PackagerAPI/#parameters","text":"Name Type Description params object params.package string A name, an URL or a file path of the package to install params?.version string (optional) Version of the package to install params?.architecture string (optional) Architecture of the package to install","title":"Parameters"},{"location":"PackagerAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"PackagerAPI/#errors","text":"Code Message Description 12 ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress.","title":"Errors"},{"location":"PackagerAPI/#example","text":"","title":"Example"},{"location":"PackagerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.install\", \"params\": { \"package\": \"wpeframework-plugin-netflix\", \"version\": \"1.0\", \"architecture\": \"arm\" } }","title":"Request"},{"location":"PackagerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"PackagerAPI/#synchronize-method","text":"Synchronizes repository manifest with a repository.","title":"synchronize method"},{"location":"PackagerAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"PackagerAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"PackagerAPI/#errors_1","text":"Code Message Description 12 ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress.","title":"Errors"},{"location":"PackagerAPI/#example_1","text":"","title":"Example"},{"location":"PackagerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.synchronize\" }","title":"Request"},{"location":"PackagerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"PerformanceMonitorAPI/","text":"Performance Monitor API Version: 1.0 Status: :black_circle::white_circle::white_circle: PerformanceMonitor interface for Thunder framework. Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the PerformanceMonitor interface. It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Performance Monitor JSON-RPC interface. Methods The following methods are provided by the PerformanceMonitor interface: PerformanceMonitor interface methods: Method Description clear Clear all performance data collected send Interface to test send data receive Interface to test receive data exchange Interface to test exchange data clear method Clear all performance data collected. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.clear\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } send method Interface to test send data. Parameters Name Type Description params object params?.data string (optional) Any string data upto the size specified in the length params?.length number (optional) params?.duration number (optional) Result Name Type Description result number Size of data received by the jsonrpc interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.send\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } receive method Interface to test receive data. Parameters Name Type Description params number Size of data to be provided by the jsonrpc interface Result Name Type Description result object result?.data string (optional) Any string data upto the size specified in the length result?.length number (optional) result?.duration number (optional) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.receive\", \"params\": 0 } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } exchange method Interface to test exchange data. Parameters Name Type Description params object params?.data string (optional) Any string data upto the size specified in the length params?.length number (optional) params?.duration number (optional) Result Name Type Description result object result?.data string (optional) Any string data upto the size specified in the length result?.length number (optional) result?.duration number (optional) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.exchange\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Properties The following properties are provided by the PerformanceMonitor interface: PerformanceMonitor interface properties: Property Description measurement RO Retrieve the performance measurement against given package size measurement property Provides access to the retrieve the performance measurement against given package size. Measurements will be provided in milliseconds. This property is read-only . Value Name Type Description (property) object Retrieve the performance measurement against given package size. Measurements will be provided in milliseconds (property).serialization object Time taken to complete serialization (property).serialization?.minimum number (optional) (property).serialization?.maximum number (optional) (property).serialization?.average number (optional) (property).serialization?.count number (optional) (property).deserialization object Time taken to complete deserialization (property).deserialization?.minimum number (optional) (property).deserialization?.maximum number (optional) (property).deserialization?.average number (optional) (property).deserialization?.count number (optional) (property).execution object Time taken to complete execution (property).execution?.minimum number (optional) (property).execution?.maximum number (optional) (property).execution?.average number (optional) (property).execution?.count number (optional) (property).threadpool object Time taken to complete threadpool wait (property).threadpool?.minimum number (optional) (property).threadpool?.maximum number (optional) (property).threadpool?.average number (optional) (property).threadpool?.count number (optional) (property).communication object Time taken to complete communication (property).communication?.minimum number (optional) (property).communication?.maximum number (optional) (property).communication?.average number (optional) (property).communication?.count number (optional) (property).total object Time taken to complete whole jsonrpc process (property).total?.minimum number (optional) (property).total?.maximum number (optional) (property).total?.average number (optional) (property).total?.count number (optional) The package size argument shall be passed as the index to the property, e.g. PerformanceMonitor.1.measurement@1000 . Size of package whose statistics info has to be retrieved. Result Name Type Description result null Always null Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.measurement@1000\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"serialization\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"deserialization\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"execution\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"threadpool\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"communication\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"total\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 } } }","title":"PerformanceMonitorAPI"},{"location":"PerformanceMonitorAPI/#performance-monitor-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: PerformanceMonitor interface for Thunder framework.","title":"Performance Monitor API"},{"location":"PerformanceMonitorAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"PerformanceMonitorAPI/#introduction","text":"","title":"Introduction"},{"location":"PerformanceMonitorAPI/#scope","text":"This document describes purpose and functionality of the PerformanceMonitor interface. It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"PerformanceMonitorAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"PerformanceMonitorAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"PerformanceMonitorAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"PerformanceMonitorAPI/#description","text":"Performance Monitor JSON-RPC interface.","title":"Description"},{"location":"PerformanceMonitorAPI/#methods","text":"The following methods are provided by the PerformanceMonitor interface: PerformanceMonitor interface methods: Method Description clear Clear all performance data collected send Interface to test send data receive Interface to test receive data exchange Interface to test exchange data","title":"Methods"},{"location":"PerformanceMonitorAPI/#clear-method","text":"Clear all performance data collected.","title":"clear method"},{"location":"PerformanceMonitorAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"PerformanceMonitorAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"PerformanceMonitorAPI/#example","text":"","title":"Example"},{"location":"PerformanceMonitorAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.clear\" }","title":"Request"},{"location":"PerformanceMonitorAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"PerformanceMonitorAPI/#send-method","text":"Interface to test send data.","title":"send method"},{"location":"PerformanceMonitorAPI/#parameters_1","text":"Name Type Description params object params?.data string (optional) Any string data upto the size specified in the length params?.length number (optional) params?.duration number (optional)","title":"Parameters"},{"location":"PerformanceMonitorAPI/#result_1","text":"Name Type Description result number Size of data received by the jsonrpc interface","title":"Result"},{"location":"PerformanceMonitorAPI/#example_1","text":"","title":"Example"},{"location":"PerformanceMonitorAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.send\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Request"},{"location":"PerformanceMonitorAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"PerformanceMonitorAPI/#receive-method","text":"Interface to test receive data.","title":"receive method"},{"location":"PerformanceMonitorAPI/#parameters_2","text":"Name Type Description params number Size of data to be provided by the jsonrpc interface","title":"Parameters"},{"location":"PerformanceMonitorAPI/#result_2","text":"Name Type Description result object result?.data string (optional) Any string data upto the size specified in the length result?.length number (optional) result?.duration number (optional)","title":"Result"},{"location":"PerformanceMonitorAPI/#example_2","text":"","title":"Example"},{"location":"PerformanceMonitorAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.receive\", \"params\": 0 }","title":"Request"},{"location":"PerformanceMonitorAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Response"},{"location":"PerformanceMonitorAPI/#exchange-method","text":"Interface to test exchange data.","title":"exchange method"},{"location":"PerformanceMonitorAPI/#parameters_3","text":"Name Type Description params object params?.data string (optional) Any string data upto the size specified in the length params?.length number (optional) params?.duration number (optional)","title":"Parameters"},{"location":"PerformanceMonitorAPI/#result_3","text":"Name Type Description result object result?.data string (optional) Any string data upto the size specified in the length result?.length number (optional) result?.duration number (optional)","title":"Result"},{"location":"PerformanceMonitorAPI/#example_3","text":"","title":"Example"},{"location":"PerformanceMonitorAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.exchange\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Request"},{"location":"PerformanceMonitorAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Response"},{"location":"PerformanceMonitorAPI/#properties","text":"The following properties are provided by the PerformanceMonitor interface: PerformanceMonitor interface properties: Property Description measurement RO Retrieve the performance measurement against given package size","title":"Properties"},{"location":"PerformanceMonitorAPI/#measurement-property","text":"Provides access to the retrieve the performance measurement against given package size. Measurements will be provided in milliseconds. This property is read-only .","title":"measurement property"},{"location":"PerformanceMonitorAPI/#value","text":"Name Type Description (property) object Retrieve the performance measurement against given package size. Measurements will be provided in milliseconds (property).serialization object Time taken to complete serialization (property).serialization?.minimum number (optional) (property).serialization?.maximum number (optional) (property).serialization?.average number (optional) (property).serialization?.count number (optional) (property).deserialization object Time taken to complete deserialization (property).deserialization?.minimum number (optional) (property).deserialization?.maximum number (optional) (property).deserialization?.average number (optional) (property).deserialization?.count number (optional) (property).execution object Time taken to complete execution (property).execution?.minimum number (optional) (property).execution?.maximum number (optional) (property).execution?.average number (optional) (property).execution?.count number (optional) (property).threadpool object Time taken to complete threadpool wait (property).threadpool?.minimum number (optional) (property).threadpool?.maximum number (optional) (property).threadpool?.average number (optional) (property).threadpool?.count number (optional) (property).communication object Time taken to complete communication (property).communication?.minimum number (optional) (property).communication?.maximum number (optional) (property).communication?.average number (optional) (property).communication?.count number (optional) (property).total object Time taken to complete whole jsonrpc process (property).total?.minimum number (optional) (property).total?.maximum number (optional) (property).total?.average number (optional) (property).total?.count number (optional) The package size argument shall be passed as the index to the property, e.g. PerformanceMonitor.1.measurement@1000 . Size of package whose statistics info has to be retrieved.","title":"Value"},{"location":"PerformanceMonitorAPI/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"PerformanceMonitorAPI/#example_4","text":"","title":"Example"},{"location":"PerformanceMonitorAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.measurement@1000\" }","title":"Get Request"},{"location":"PerformanceMonitorAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"serialization\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"deserialization\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"execution\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"threadpool\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"communication\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"total\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 } } }","title":"Get Response"},{"location":"PerformanceMonitorPlugin/","text":"Performance Monitor Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: PerformanceMonitor plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Introduction Scope This document describes purpose and functionality of the PerformanceMonitor plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Retrieve the performance measurement against given package size. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PerformanceMonitor ) classname string Class name: PerformanceMonitor locator string Library name: libWPEFrameworkPerformanceMonitor.so autostart boolean Determines if the plugin shall be started automatically along with the framework Methods The following methods are provided by the PerformanceMonitor plugin: PerformanceMonitor interface methods: Method Description clear Clear all performance data collected send Interface to test send data receive Interface to test receive data exchange Interface to test exchange data clear method Clear all performance data collected. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.clear\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } send method Interface to test send data. Parameters Name Type Description params object params?.data string (optional) Any string data upto the size specified in the length params?.length number (optional) params?.duration number (optional) Result Name Type Description result number Size of data received by the jsonrpc interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.send\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } receive method Interface to test receive data. Parameters Name Type Description params number Size of data to be provided by the jsonrpc interface Result Name Type Description result object result?.data string (optional) Any string data upto the size specified in the length result?.length number (optional) result?.duration number (optional) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.receive\", \"params\": 0 } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } exchange method Interface to test exchange data. Parameters Name Type Description params object params?.data string (optional) Any string data upto the size specified in the length params?.length number (optional) params?.duration number (optional) Result Name Type Description result object result?.data string (optional) Any string data upto the size specified in the length result?.length number (optional) result?.duration number (optional) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.exchange\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Properties The following properties are provided by the PerformanceMonitor plugin: PerformanceMonitor interface properties: Property Description measurement RO Retrieve the performance measurement against given package size measurement property Provides access to the retrieve the performance measurement against given package size. Measurements will be provided in milliseconds. This property is read-only . Value Name Type Description (property) object Retrieve the performance measurement against given package size. Measurements will be provided in milliseconds (property).serialization object Time taken to complete serialization (property).serialization?.minimum number (optional) (property).serialization?.maximum number (optional) (property).serialization?.average number (optional) (property).serialization?.count number (optional) (property).deserialization object Time taken to complete deserialization (property).deserialization?.minimum number (optional) (property).deserialization?.maximum number (optional) (property).deserialization?.average number (optional) (property).deserialization?.count number (optional) (property).execution object Time taken to complete execution (property).execution?.minimum number (optional) (property).execution?.maximum number (optional) (property).execution?.average number (optional) (property).execution?.count number (optional) (property).threadpool object Time taken to complete threadpool wait (property).threadpool?.minimum number (optional) (property).threadpool?.maximum number (optional) (property).threadpool?.average number (optional) (property).threadpool?.count number (optional) (property).communication object Time taken to complete communication (property).communication?.minimum number (optional) (property).communication?.maximum number (optional) (property).communication?.average number (optional) (property).communication?.count number (optional) (property).total object Time taken to complete whole jsonrpc process (property).total?.minimum number (optional) (property).total?.maximum number (optional) (property).total?.average number (optional) (property).total?.count number (optional) The package size argument shall be passed as the index to the property, e.g. PerformanceMonitor.1.measurement@1000 . Size of package whose statistics info has to be retrieved. Result Name Type Description result null Always null Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.measurement@1000\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"serialization\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"deserialization\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"execution\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"threadpool\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"communication\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"total\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 } } }","title":"PerformanceMonitorPlugin"},{"location":"PerformanceMonitorPlugin/#performance-monitor-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: PerformanceMonitor plugin for Thunder framework.","title":"Performance Monitor Plugin"},{"location":"PerformanceMonitorPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties","title":"Table of Contents"},{"location":"PerformanceMonitorPlugin/#introduction","text":"","title":"Introduction"},{"location":"PerformanceMonitorPlugin/#scope","text":"This document describes purpose and functionality of the PerformanceMonitor plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"PerformanceMonitorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"PerformanceMonitorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"PerformanceMonitorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"PerformanceMonitorPlugin/#description","text":"Retrieve the performance measurement against given package size. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"PerformanceMonitorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PerformanceMonitor ) classname string Class name: PerformanceMonitor locator string Library name: libWPEFrameworkPerformanceMonitor.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"Configuration"},{"location":"PerformanceMonitorPlugin/#methods","text":"The following methods are provided by the PerformanceMonitor plugin: PerformanceMonitor interface methods: Method Description clear Clear all performance data collected send Interface to test send data receive Interface to test receive data exchange Interface to test exchange data","title":"Methods"},{"location":"PerformanceMonitorPlugin/#clear-method","text":"Clear all performance data collected.","title":"clear method"},{"location":"PerformanceMonitorPlugin/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"PerformanceMonitorPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"PerformanceMonitorPlugin/#example","text":"","title":"Example"},{"location":"PerformanceMonitorPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.clear\" }","title":"Request"},{"location":"PerformanceMonitorPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"PerformanceMonitorPlugin/#send-method","text":"Interface to test send data.","title":"send method"},{"location":"PerformanceMonitorPlugin/#parameters_1","text":"Name Type Description params object params?.data string (optional) Any string data upto the size specified in the length params?.length number (optional) params?.duration number (optional)","title":"Parameters"},{"location":"PerformanceMonitorPlugin/#result_1","text":"Name Type Description result number Size of data received by the jsonrpc interface","title":"Result"},{"location":"PerformanceMonitorPlugin/#example_1","text":"","title":"Example"},{"location":"PerformanceMonitorPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.send\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Request"},{"location":"PerformanceMonitorPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"PerformanceMonitorPlugin/#receive-method","text":"Interface to test receive data.","title":"receive method"},{"location":"PerformanceMonitorPlugin/#parameters_2","text":"Name Type Description params number Size of data to be provided by the jsonrpc interface","title":"Parameters"},{"location":"PerformanceMonitorPlugin/#result_2","text":"Name Type Description result object result?.data string (optional) Any string data upto the size specified in the length result?.length number (optional) result?.duration number (optional)","title":"Result"},{"location":"PerformanceMonitorPlugin/#example_2","text":"","title":"Example"},{"location":"PerformanceMonitorPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.receive\", \"params\": 0 }","title":"Request"},{"location":"PerformanceMonitorPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Response"},{"location":"PerformanceMonitorPlugin/#exchange-method","text":"Interface to test exchange data.","title":"exchange method"},{"location":"PerformanceMonitorPlugin/#parameters_3","text":"Name Type Description params object params?.data string (optional) Any string data upto the size specified in the length params?.length number (optional) params?.duration number (optional)","title":"Parameters"},{"location":"PerformanceMonitorPlugin/#result_3","text":"Name Type Description result object result?.data string (optional) Any string data upto the size specified in the length result?.length number (optional) result?.duration number (optional)","title":"Result"},{"location":"PerformanceMonitorPlugin/#example_3","text":"","title":"Example"},{"location":"PerformanceMonitorPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.exchange\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Request"},{"location":"PerformanceMonitorPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Response"},{"location":"PerformanceMonitorPlugin/#properties","text":"The following properties are provided by the PerformanceMonitor plugin: PerformanceMonitor interface properties: Property Description measurement RO Retrieve the performance measurement against given package size","title":"Properties"},{"location":"PerformanceMonitorPlugin/#measurement-property","text":"Provides access to the retrieve the performance measurement against given package size. Measurements will be provided in milliseconds. This property is read-only .","title":"measurement property"},{"location":"PerformanceMonitorPlugin/#value","text":"Name Type Description (property) object Retrieve the performance measurement against given package size. Measurements will be provided in milliseconds (property).serialization object Time taken to complete serialization (property).serialization?.minimum number (optional) (property).serialization?.maximum number (optional) (property).serialization?.average number (optional) (property).serialization?.count number (optional) (property).deserialization object Time taken to complete deserialization (property).deserialization?.minimum number (optional) (property).deserialization?.maximum number (optional) (property).deserialization?.average number (optional) (property).deserialization?.count number (optional) (property).execution object Time taken to complete execution (property).execution?.minimum number (optional) (property).execution?.maximum number (optional) (property).execution?.average number (optional) (property).execution?.count number (optional) (property).threadpool object Time taken to complete threadpool wait (property).threadpool?.minimum number (optional) (property).threadpool?.maximum number (optional) (property).threadpool?.average number (optional) (property).threadpool?.count number (optional) (property).communication object Time taken to complete communication (property).communication?.minimum number (optional) (property).communication?.maximum number (optional) (property).communication?.average number (optional) (property).communication?.count number (optional) (property).total object Time taken to complete whole jsonrpc process (property).total?.minimum number (optional) (property).total?.maximum number (optional) (property).total?.average number (optional) (property).total?.count number (optional) The package size argument shall be passed as the index to the property, e.g. PerformanceMonitor.1.measurement@1000 . Size of package whose statistics info has to be retrieved.","title":"Value"},{"location":"PerformanceMonitorPlugin/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"PerformanceMonitorPlugin/#example_4","text":"","title":"Example"},{"location":"PerformanceMonitorPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.measurement@1000\" }","title":"Get Request"},{"location":"PerformanceMonitorPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"serialization\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"deserialization\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"execution\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"threadpool\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"communication\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 }, \"total\": { \"minimum\": 0, \"maximum\": 0, \"average\": 0, \"count\": 0 } } }","title":"Get Response"},{"location":"PlayerInfoAPI/","text":"Player Info API Version: 1.0 Status: :black_circle::white_circle::white_circle: PlayerInfo interface for Thunder framework. Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the PlayerInfo interface. It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description PlayerInfo JSON-RPC interface. Properties The following properties are provided by the PlayerInfo interface: PlayerInfo interface properties: Property Description playerinfo RO Player general information dolbymode Dolby output mode playerinfo property Provides access to the player general information. This property is read-only . Value Name Type Description (property) object Player general information (property)?.audio array (optional) (property)?.audio[#] string (optional) Audio Codec supported by the platform (must be one of the following: Undefined , AAC , AC3 , AC3Plus , DTS , MPEG1 , MPEG2 , MPEG3 , MPEG4 , OPUS , VorbisOGG , WAV ) (property)?.video array (optional) (property)?.video[#] string (optional) Video Codec supported by the platform (must be one of the following: Undefined , H263 , H264 , H265 , H26510 , MPEG , VP8 , VP9 , VP10 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.playerinfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"audio\": [ \"AudioAAC\" ], \"video\": [ \"VideoH264\" ] } } dolbymode property Provides access to the dolby output mode. Value Name Type Description (property) string Dolby output mode (must be one of the following: DIGITAL_PCM , DIGITAL_PLUS , DIGITAL_AC3 , AUTO ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DIGITAL_PCM\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\", \"params\": \"DIGITAL_PCM\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"PlayerInfoAPI"},{"location":"PlayerInfoAPI/#player-info-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: PlayerInfo interface for Thunder framework.","title":"Player Info API"},{"location":"PlayerInfoAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"PlayerInfoAPI/#introduction","text":"","title":"Introduction"},{"location":"PlayerInfoAPI/#scope","text":"This document describes purpose and functionality of the PlayerInfo interface. It includes detailed specification about its properties provided.","title":"Scope"},{"location":"PlayerInfoAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"PlayerInfoAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"PlayerInfoAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"PlayerInfoAPI/#description","text":"PlayerInfo JSON-RPC interface.","title":"Description"},{"location":"PlayerInfoAPI/#properties","text":"The following properties are provided by the PlayerInfo interface: PlayerInfo interface properties: Property Description playerinfo RO Player general information dolbymode Dolby output mode","title":"Properties"},{"location":"PlayerInfoAPI/#playerinfo-property","text":"Provides access to the player general information. This property is read-only .","title":"playerinfo property"},{"location":"PlayerInfoAPI/#value","text":"Name Type Description (property) object Player general information (property)?.audio array (optional) (property)?.audio[#] string (optional) Audio Codec supported by the platform (must be one of the following: Undefined , AAC , AC3 , AC3Plus , DTS , MPEG1 , MPEG2 , MPEG3 , MPEG4 , OPUS , VorbisOGG , WAV ) (property)?.video array (optional) (property)?.video[#] string (optional) Video Codec supported by the platform (must be one of the following: Undefined , H263 , H264 , H265 , H26510 , MPEG , VP8 , VP9 , VP10 )","title":"Value"},{"location":"PlayerInfoAPI/#example","text":"","title":"Example"},{"location":"PlayerInfoAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.playerinfo\" }","title":"Get Request"},{"location":"PlayerInfoAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"audio\": [ \"AudioAAC\" ], \"video\": [ \"VideoH264\" ] } }","title":"Get Response"},{"location":"PlayerInfoAPI/#dolbymode-property","text":"Provides access to the dolby output mode.","title":"dolbymode property"},{"location":"PlayerInfoAPI/#value_1","text":"Name Type Description (property) string Dolby output mode (must be one of the following: DIGITAL_PCM , DIGITAL_PLUS , DIGITAL_AC3 , AUTO )","title":"Value"},{"location":"PlayerInfoAPI/#example_1","text":"","title":"Example"},{"location":"PlayerInfoAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\" }","title":"Get Request"},{"location":"PlayerInfoAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DIGITAL_PCM\" }","title":"Get Response"},{"location":"PlayerInfoAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\", \"params\": \"DIGITAL_PCM\" }","title":"Set Request"},{"location":"PlayerInfoAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"PlayerInfoPlugin/","text":"Player Info Plugin Version: 1.0 Status: :black_circle::black_circle::white_circle: PlayerInfo plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the PlayerInfo plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The PlayerInfo plugin helps to get system supported Audio Video codecs. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PlayerInfo ) classname string Class name: PlayerInfo locator string Library name: libWPEPlayerInfo.so autostart boolean Determines if the plugin shall be started automatically along with the framework Methods The following methods are provided by the PlayerInfo plugin: PlayerProperties interface methods: Method Description audiocodecs videocodecs audiocodecs method Parameters This method takes no parameters. Result Name Type Description codec array codec[#] string (must be one of the following: AudioUndefined , AudioAac , AudioAc3 , AudioAc3Plus , AudioDts , AudioMpeg1 , AudioMpeg2 , AudioMpeg3 , AudioMpeg4 , AudioOpus , AudioVorbisOgg , AudioWav ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.audiocodecs\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"AudioUndefined\" ] } videocodecs method Parameters This method takes no parameters. Result Name Type Description codec array codec[#] string (must be one of the following: VideoUndefined , VideoH263 , VideoH264 , VideoH265 , VideoH26510 , VideoMpeg , VideoVp8 , VideoVp9 , VideoVp10 ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.videocodecs\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"VideoUndefined\" ] } Properties The following properties are provided by the PlayerInfo plugin: PlayerProperties interface properties: Property Description resolution RO Current Video playback resolution isaudioequivalenceenabled RO Checks Loudness Equivalence in platform Dolby Output interface properties: Property Description dolby atmosmetadata RO Atmos capabilities of Sink dolby soundmode RO Sound Mode - Mono/Stereo/Surround dolby enableatmosoutput WO Enable Atmos Audio Output dolby mode Dolby Mode resolution property Provides access to the current Video playback resolution. This property is read-only . Value Name Type Description res string resolution (must be one of the following: ResolutionUnknown , Resolution480I24 , Resolution480I25 , Resolution480I30 , Resolution480I50 , Resolution480I , Resolution480P24 , Resolution480P25 , Resolution480P30 , Resolution480P50 , Resolution480P , Resolution576I24 , Resolution576I25 , Resolution576I30 , Resolution576I50 , Resolution576I , Resolution576P24 , Resolution576P25 , Resolution576P30 , Resolution576P50 , Resolution576P , Resolution720P24 , Resolution720P25 , Resolution720P30 , Resolution720P50 , Resolution720P , Resolution1080I24 , Resolution1080I25 , Resolution1080I30 , Resolution1080I50 , Resolution1080I , Resolution1080P24 , Resolution1080P25 , Resolution1080P30 , Resolution1080P50 , Resolution1080P , Resolution2160P24 , Resolution2160P25 , Resolution2160P30 , Resolution2160P50 , Resolution2160P60 , Resolution2160P ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.resolution\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ResolutionUnknown\" } isaudioequivalenceenabled property Provides access to the checks Loudness Equivalence in platform. This property is read-only . Value Name Type Description ae boolean enabled/disabled Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.isaudioequivalenceenabled\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } dolby_atmosmetadata property Provides access to the atmos capabilities of Sink. This property is read-only . Value Name Type Description supported boolean Atmos capabilities of Sink Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_atmosmetadata\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } dolby_soundmode property Provides access to the sound Mode - Mono/Stereo/Surround. This property is read-only . Value Name Type Description mode string Sound Mode - Mono/Stereo/Surround (must be one of the following: Unknown , Mono , Stereo , Surround , Passthru , SoundmodeAuto ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_soundmode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" } dolby_enableatmosoutput property Provides access to the enable Atmos Audio Output. This property is write-only . Value Name Type Description enable boolean enable/disable Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_enableatmosoutput\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } dolby_mode property Provides access to the dolby Mode. Value Name Type Description mode string dolby mode type (must be one of the following: DigitalPcm , DigitalPlus , DigitalAc3 , Auto , DigitalPassthrough , Ms12 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_mode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DigitalPcm\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_mode\", \"params\": \"DigitalPcm\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the PlayerInfo plugin: Dolby Output interface events: Event Description dolby audiomodechanged dolby_audiomodechanged event Parameters Name Type Description params object params.mode string (must be one of the following: Unknown , Mono , Stereo , Surround , Passthru , SoundmodeAuto ) params.enabled boolean Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.dolby_audiomodechanged\", \"params\": { \"mode\": \"Unknown\", \"enabled\": false } }","title":"PlayerInfoPlugin"},{"location":"PlayerInfoPlugin/#player-info-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::white_circle: PlayerInfo plugin for Thunder framework.","title":"Player Info Plugin"},{"location":"PlayerInfoPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"PlayerInfoPlugin/#introduction","text":"","title":"Introduction"},{"location":"PlayerInfoPlugin/#scope","text":"This document describes purpose and functionality of the PlayerInfo plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"PlayerInfoPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"PlayerInfoPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"PlayerInfoPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"PlayerInfoPlugin/#description","text":"The PlayerInfo plugin helps to get system supported Audio Video codecs. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"PlayerInfoPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PlayerInfo ) classname string Class name: PlayerInfo locator string Library name: libWPEPlayerInfo.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"Configuration"},{"location":"PlayerInfoPlugin/#methods","text":"The following methods are provided by the PlayerInfo plugin: PlayerProperties interface methods: Method Description audiocodecs videocodecs","title":"Methods"},{"location":"PlayerInfoPlugin/#audiocodecs-method","text":"","title":"audiocodecs method"},{"location":"PlayerInfoPlugin/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"PlayerInfoPlugin/#result","text":"Name Type Description codec array codec[#] string (must be one of the following: AudioUndefined , AudioAac , AudioAc3 , AudioAc3Plus , AudioDts , AudioMpeg1 , AudioMpeg2 , AudioMpeg3 , AudioMpeg4 , AudioOpus , AudioVorbisOgg , AudioWav )","title":"Result"},{"location":"PlayerInfoPlugin/#example","text":"","title":"Example"},{"location":"PlayerInfoPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.audiocodecs\" }","title":"Request"},{"location":"PlayerInfoPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"AudioUndefined\" ] }","title":"Response"},{"location":"PlayerInfoPlugin/#videocodecs-method","text":"","title":"videocodecs method"},{"location":"PlayerInfoPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"PlayerInfoPlugin/#result_1","text":"Name Type Description codec array codec[#] string (must be one of the following: VideoUndefined , VideoH263 , VideoH264 , VideoH265 , VideoH26510 , VideoMpeg , VideoVp8 , VideoVp9 , VideoVp10 )","title":"Result"},{"location":"PlayerInfoPlugin/#example_1","text":"","title":"Example"},{"location":"PlayerInfoPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.videocodecs\" }","title":"Request"},{"location":"PlayerInfoPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"VideoUndefined\" ] }","title":"Response"},{"location":"PlayerInfoPlugin/#properties","text":"The following properties are provided by the PlayerInfo plugin: PlayerProperties interface properties: Property Description resolution RO Current Video playback resolution isaudioequivalenceenabled RO Checks Loudness Equivalence in platform Dolby Output interface properties: Property Description dolby atmosmetadata RO Atmos capabilities of Sink dolby soundmode RO Sound Mode - Mono/Stereo/Surround dolby enableatmosoutput WO Enable Atmos Audio Output dolby mode Dolby Mode","title":"Properties"},{"location":"PlayerInfoPlugin/#resolution-property","text":"Provides access to the current Video playback resolution. This property is read-only .","title":"resolution property"},{"location":"PlayerInfoPlugin/#value","text":"Name Type Description res string resolution (must be one of the following: ResolutionUnknown , Resolution480I24 , Resolution480I25 , Resolution480I30 , Resolution480I50 , Resolution480I , Resolution480P24 , Resolution480P25 , Resolution480P30 , Resolution480P50 , Resolution480P , Resolution576I24 , Resolution576I25 , Resolution576I30 , Resolution576I50 , Resolution576I , Resolution576P24 , Resolution576P25 , Resolution576P30 , Resolution576P50 , Resolution576P , Resolution720P24 , Resolution720P25 , Resolution720P30 , Resolution720P50 , Resolution720P , Resolution1080I24 , Resolution1080I25 , Resolution1080I30 , Resolution1080I50 , Resolution1080I , Resolution1080P24 , Resolution1080P25 , Resolution1080P30 , Resolution1080P50 , Resolution1080P , Resolution2160P24 , Resolution2160P25 , Resolution2160P30 , Resolution2160P50 , Resolution2160P60 , Resolution2160P )","title":"Value"},{"location":"PlayerInfoPlugin/#example_2","text":"","title":"Example"},{"location":"PlayerInfoPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.resolution\" }","title":"Get Request"},{"location":"PlayerInfoPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ResolutionUnknown\" }","title":"Get Response"},{"location":"PlayerInfoPlugin/#isaudioequivalenceenabled-property","text":"Provides access to the checks Loudness Equivalence in platform. This property is read-only .","title":"isaudioequivalenceenabled property"},{"location":"PlayerInfoPlugin/#value_1","text":"Name Type Description ae boolean enabled/disabled","title":"Value"},{"location":"PlayerInfoPlugin/#example_3","text":"","title":"Example"},{"location":"PlayerInfoPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.isaudioequivalenceenabled\" }","title":"Get Request"},{"location":"PlayerInfoPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"PlayerInfoPlugin/#dolby_atmosmetadata-property","text":"Provides access to the atmos capabilities of Sink. This property is read-only .","title":"dolby_atmosmetadata property"},{"location":"PlayerInfoPlugin/#value_2","text":"Name Type Description supported boolean Atmos capabilities of Sink","title":"Value"},{"location":"PlayerInfoPlugin/#example_4","text":"","title":"Example"},{"location":"PlayerInfoPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_atmosmetadata\" }","title":"Get Request"},{"location":"PlayerInfoPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"PlayerInfoPlugin/#dolby_soundmode-property","text":"Provides access to the sound Mode - Mono/Stereo/Surround. This property is read-only .","title":"dolby_soundmode property"},{"location":"PlayerInfoPlugin/#value_3","text":"Name Type Description mode string Sound Mode - Mono/Stereo/Surround (must be one of the following: Unknown , Mono , Stereo , Surround , Passthru , SoundmodeAuto )","title":"Value"},{"location":"PlayerInfoPlugin/#example_5","text":"","title":"Example"},{"location":"PlayerInfoPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_soundmode\" }","title":"Get Request"},{"location":"PlayerInfoPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" }","title":"Get Response"},{"location":"PlayerInfoPlugin/#dolby_enableatmosoutput-property","text":"Provides access to the enable Atmos Audio Output. This property is write-only .","title":"dolby_enableatmosoutput property"},{"location":"PlayerInfoPlugin/#value_4","text":"Name Type Description enable boolean enable/disable","title":"Value"},{"location":"PlayerInfoPlugin/#example_6","text":"","title":"Example"},{"location":"PlayerInfoPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_enableatmosoutput\", \"params\": false }","title":"Set Request"},{"location":"PlayerInfoPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"PlayerInfoPlugin/#dolby_mode-property","text":"Provides access to the dolby Mode.","title":"dolby_mode property"},{"location":"PlayerInfoPlugin/#value_5","text":"Name Type Description mode string dolby mode type (must be one of the following: DigitalPcm , DigitalPlus , DigitalAc3 , Auto , DigitalPassthrough , Ms12 )","title":"Value"},{"location":"PlayerInfoPlugin/#example_7","text":"","title":"Example"},{"location":"PlayerInfoPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_mode\" }","title":"Get Request"},{"location":"PlayerInfoPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DigitalPcm\" }","title":"Get Response"},{"location":"PlayerInfoPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolby_mode\", \"params\": \"DigitalPcm\" }","title":"Set Request"},{"location":"PlayerInfoPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"PlayerInfoPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the PlayerInfo plugin: Dolby Output interface events: Event Description dolby audiomodechanged","title":"Notifications"},{"location":"PlayerInfoPlugin/#dolby_audiomodechanged-event","text":"","title":"dolby_audiomodechanged event"},{"location":"PlayerInfoPlugin/#parameters_2","text":"Name Type Description params object params.mode string (must be one of the following: Unknown , Mono , Stereo , Surround , Passthru , SoundmodeAuto ) params.enabled boolean","title":"Parameters"},{"location":"PlayerInfoPlugin/#example_8","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.dolby_audiomodechanged\", \"params\": { \"mode\": \"Unknown\", \"enabled\": false } }","title":"Example"},{"location":"PlayerPropertiesAPI/","text":"PlayerProperties API Version: 1.0 Status: :black_circle::white_circle::white_circle: PlayerProperties interface for Thunder framework. Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the PlayerProperties interface. It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description PlayerProperties JSON-RPC interface. Methods The following methods are provided by the PlayerProperties interface: PlayerProperties interface methods: Method Description audiocodecs videocodecs audiocodecs method Parameters This method takes no parameters. Result Name Type Description codec array codec[#] string (must be one of the following: AudioUndefined , AudioAac , AudioAc3 , AudioAc3Plus , AudioDts , AudioMpeg1 , AudioMpeg2 , AudioMpeg3 , AudioMpeg4 , AudioOpus , AudioVorbisOgg , AudioWav ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.audiocodecs\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"AudioUndefined\" ] } videocodecs method Parameters This method takes no parameters. Result Name Type Description codec array codec[#] string (must be one of the following: VideoUndefined , VideoH263 , VideoH264 , VideoH265 , VideoH26510 , VideoMpeg , VideoVp8 , VideoVp9 , VideoVp10 ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.videocodecs\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"VideoUndefined\" ] } Properties The following properties are provided by the PlayerProperties interface: PlayerProperties interface properties: Property Description resolution RO Current Video playback resolution isaudioequivalenceenabled RO Checks Loudness Equivalence in platform resolution property Provides access to the current Video playback resolution. This property is read-only . Value Name Type Description res string resolution (must be one of the following: ResolutionUnknown , Resolution480I24 , Resolution480I25 , Resolution480I30 , Resolution480I50 , Resolution480I , Resolution480P24 , Resolution480P25 , Resolution480P30 , Resolution480P50 , Resolution480P , Resolution576I24 , Resolution576I25 , Resolution576I30 , Resolution576I50 , Resolution576I , Resolution576P24 , Resolution576P25 , Resolution576P30 , Resolution576P50 , Resolution576P , Resolution720P24 , Resolution720P25 , Resolution720P30 , Resolution720P50 , Resolution720P , Resolution1080I24 , Resolution1080I25 , Resolution1080I30 , Resolution1080I50 , Resolution1080I , Resolution1080P24 , Resolution1080P25 , Resolution1080P30 , Resolution1080P50 , Resolution1080P , Resolution2160P24 , Resolution2160P25 , Resolution2160P30 , Resolution2160P50 , Resolution2160P60 , Resolution2160P ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.resolution\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ResolutionUnknown\" } isaudioequivalenceenabled property Provides access to the checks Loudness Equivalence in platform. This property is read-only . Value Name Type Description ae boolean enabled/disabled Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.isaudioequivalenceenabled\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"PlayerPropertiesAPI"},{"location":"PlayerPropertiesAPI/#playerproperties-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: PlayerProperties interface for Thunder framework.","title":"PlayerProperties API"},{"location":"PlayerPropertiesAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"PlayerPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"PlayerPropertiesAPI/#scope","text":"This document describes purpose and functionality of the PlayerProperties interface. It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"PlayerPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"PlayerPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"PlayerPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"PlayerPropertiesAPI/#description","text":"PlayerProperties JSON-RPC interface.","title":"Description"},{"location":"PlayerPropertiesAPI/#methods","text":"The following methods are provided by the PlayerProperties interface: PlayerProperties interface methods: Method Description audiocodecs videocodecs","title":"Methods"},{"location":"PlayerPropertiesAPI/#audiocodecs-method","text":"","title":"audiocodecs method"},{"location":"PlayerPropertiesAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"PlayerPropertiesAPI/#result","text":"Name Type Description codec array codec[#] string (must be one of the following: AudioUndefined , AudioAac , AudioAc3 , AudioAc3Plus , AudioDts , AudioMpeg1 , AudioMpeg2 , AudioMpeg3 , AudioMpeg4 , AudioOpus , AudioVorbisOgg , AudioWav )","title":"Result"},{"location":"PlayerPropertiesAPI/#example","text":"","title":"Example"},{"location":"PlayerPropertiesAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.audiocodecs\" }","title":"Request"},{"location":"PlayerPropertiesAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"AudioUndefined\" ] }","title":"Response"},{"location":"PlayerPropertiesAPI/#videocodecs-method","text":"","title":"videocodecs method"},{"location":"PlayerPropertiesAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"PlayerPropertiesAPI/#result_1","text":"Name Type Description codec array codec[#] string (must be one of the following: VideoUndefined , VideoH263 , VideoH264 , VideoH265 , VideoH26510 , VideoMpeg , VideoVp8 , VideoVp9 , VideoVp10 )","title":"Result"},{"location":"PlayerPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"PlayerPropertiesAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.videocodecs\" }","title":"Request"},{"location":"PlayerPropertiesAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"VideoUndefined\" ] }","title":"Response"},{"location":"PlayerPropertiesAPI/#properties","text":"The following properties are provided by the PlayerProperties interface: PlayerProperties interface properties: Property Description resolution RO Current Video playback resolution isaudioequivalenceenabled RO Checks Loudness Equivalence in platform","title":"Properties"},{"location":"PlayerPropertiesAPI/#resolution-property","text":"Provides access to the current Video playback resolution. This property is read-only .","title":"resolution property"},{"location":"PlayerPropertiesAPI/#value","text":"Name Type Description res string resolution (must be one of the following: ResolutionUnknown , Resolution480I24 , Resolution480I25 , Resolution480I30 , Resolution480I50 , Resolution480I , Resolution480P24 , Resolution480P25 , Resolution480P30 , Resolution480P50 , Resolution480P , Resolution576I24 , Resolution576I25 , Resolution576I30 , Resolution576I50 , Resolution576I , Resolution576P24 , Resolution576P25 , Resolution576P30 , Resolution576P50 , Resolution576P , Resolution720P24 , Resolution720P25 , Resolution720P30 , Resolution720P50 , Resolution720P , Resolution1080I24 , Resolution1080I25 , Resolution1080I30 , Resolution1080I50 , Resolution1080I , Resolution1080P24 , Resolution1080P25 , Resolution1080P30 , Resolution1080P50 , Resolution1080P , Resolution2160P24 , Resolution2160P25 , Resolution2160P30 , Resolution2160P50 , Resolution2160P60 , Resolution2160P )","title":"Value"},{"location":"PlayerPropertiesAPI/#example_2","text":"","title":"Example"},{"location":"PlayerPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.resolution\" }","title":"Get Request"},{"location":"PlayerPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ResolutionUnknown\" }","title":"Get Response"},{"location":"PlayerPropertiesAPI/#isaudioequivalenceenabled-property","text":"Provides access to the checks Loudness Equivalence in platform. This property is read-only .","title":"isaudioequivalenceenabled property"},{"location":"PlayerPropertiesAPI/#value_1","text":"Name Type Description ae boolean enabled/disabled","title":"Value"},{"location":"PlayerPropertiesAPI/#example_3","text":"","title":"Example"},{"location":"PlayerPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.isaudioequivalenceenabled\" }","title":"Get Request"},{"location":"PlayerPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"PowerAPI/","text":"Power API Version: 1.0 Status: :black_circle::white_circle::white_circle: Power interface for Thunder framework. Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the Power interface. It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Power JSON-RPC interface. Methods The following methods are provided by the Power interface: Power interface methods: Method Description set Sets power state set method Sets power state. Parameters Name Type Description params object params.powerstate string Power state (must be one of the following: on , activestandby , passivestandby , suspendtoram , hibernate , poweroff ) params.timeout number Time to wait for power state change Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL General failure 29 ERROR_DUPLICATE_KEY Trying to set the same power mode 5 ERROR_ILLEGAL_STATE Power state is not supported 30 ERROR_BAD_REQUEST Invalid Power state or Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.set\", \"params\": { \"powerstate\": \"on\", \"timeout\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Power interface: Power interface properties: Property Description state RO Power state state property Provides access to the power state. This property is read-only . Value Name Type Description (property) string Power state (must be one of the following: on , activestandby , passivestandby , suspendtoram , hibernate , poweroff ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"on\" }","title":"PowerAPI"},{"location":"PowerAPI/#power-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Power interface for Thunder framework.","title":"Power API"},{"location":"PowerAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"PowerAPI/#introduction","text":"","title":"Introduction"},{"location":"PowerAPI/#scope","text":"This document describes purpose and functionality of the Power interface. It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"PowerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"PowerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"PowerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"PowerAPI/#description","text":"Power JSON-RPC interface.","title":"Description"},{"location":"PowerAPI/#methods","text":"The following methods are provided by the Power interface: Power interface methods: Method Description set Sets power state","title":"Methods"},{"location":"PowerAPI/#set-method","text":"Sets power state.","title":"set method"},{"location":"PowerAPI/#parameters","text":"Name Type Description params object params.powerstate string Power state (must be one of the following: on , activestandby , passivestandby , suspendtoram , hibernate , poweroff ) params.timeout number Time to wait for power state change","title":"Parameters"},{"location":"PowerAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"PowerAPI/#errors","text":"Code Message Description 1 ERROR_GENERAL General failure 29 ERROR_DUPLICATE_KEY Trying to set the same power mode 5 ERROR_ILLEGAL_STATE Power state is not supported 30 ERROR_BAD_REQUEST Invalid Power state or Bad JSON param data format","title":"Errors"},{"location":"PowerAPI/#example","text":"","title":"Example"},{"location":"PowerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.set\", \"params\": { \"powerstate\": \"on\", \"timeout\": 0 } }","title":"Request"},{"location":"PowerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"PowerAPI/#properties","text":"The following properties are provided by the Power interface: Power interface properties: Property Description state RO Power state","title":"Properties"},{"location":"PowerAPI/#state-property","text":"Provides access to the power state. This property is read-only .","title":"state property"},{"location":"PowerAPI/#value","text":"Name Type Description (property) string Power state (must be one of the following: on , activestandby , passivestandby , suspendtoram , hibernate , poweroff )","title":"Value"},{"location":"PowerAPI/#example_1","text":"","title":"Example"},{"location":"PowerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.state\" }","title":"Get Request"},{"location":"PowerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"on\" }","title":"Get Response"},{"location":"PowerPlugin/","text":"Power Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: Power plugin for Thunder framework. Table of Contents Introduction Configuration Methods Properties Introduction Scope This document describes purpose and functionality of the Power plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Power ) classname string Class name: Power locator string Library name: libWPEFrameworkPower.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.powerkey number (optional) Key associated as powerkey configuration?.offmode string (optional) Type of offmode configuration?.control boolean (optional) Enable control clients configuration?.gpiopin number (optional) GGIO pin (Broadcom) configuration?.gpiotype sting (optional) GPIO type (Broadcom) configuration?.statechange number (optional) Statechange (Broadcom) Methods The following methods are provided by the Power plugin: Power interface methods: Method Description set Sets power state set method Sets power state. Parameters Name Type Description params object params.powerstate string Power state (must be one of the following: on , activestandby , passivestandby , suspendtoram , hibernate , poweroff ) params.timeout number Time to wait for power state change Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL General failure 29 ERROR_DUPLICATE_KEY Trying to set the same power mode 5 ERROR_ILLEGAL_STATE Power state is not supported 30 ERROR_BAD_REQUEST Invalid Power state or Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.set\", \"params\": { \"powerstate\": \"on\", \"timeout\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Power plugin: Power interface properties: Property Description state RO Power state state property Provides access to the power state. This property is read-only . Value Name Type Description (property) string Power state (must be one of the following: on , activestandby , passivestandby , suspendtoram , hibernate , poweroff ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"on\" }","title":"PowerPlugin"},{"location":"PowerPlugin/#power-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Power plugin for Thunder framework.","title":"Power Plugin"},{"location":"PowerPlugin/#table-of-contents","text":"Introduction Configuration Methods Properties","title":"Table of Contents"},{"location":"PowerPlugin/#introduction","text":"","title":"Introduction"},{"location":"PowerPlugin/#scope","text":"This document describes purpose and functionality of the Power plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"PowerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"PowerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"PowerPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"PowerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Power ) classname string Class name: Power locator string Library name: libWPEFrameworkPower.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.powerkey number (optional) Key associated as powerkey configuration?.offmode string (optional) Type of offmode configuration?.control boolean (optional) Enable control clients configuration?.gpiopin number (optional) GGIO pin (Broadcom) configuration?.gpiotype sting (optional) GPIO type (Broadcom) configuration?.statechange number (optional) Statechange (Broadcom)","title":"Configuration"},{"location":"PowerPlugin/#methods","text":"The following methods are provided by the Power plugin: Power interface methods: Method Description set Sets power state","title":"Methods"},{"location":"PowerPlugin/#set-method","text":"Sets power state.","title":"set method"},{"location":"PowerPlugin/#parameters","text":"Name Type Description params object params.powerstate string Power state (must be one of the following: on , activestandby , passivestandby , suspendtoram , hibernate , poweroff ) params.timeout number Time to wait for power state change","title":"Parameters"},{"location":"PowerPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"PowerPlugin/#errors","text":"Code Message Description 1 ERROR_GENERAL General failure 29 ERROR_DUPLICATE_KEY Trying to set the same power mode 5 ERROR_ILLEGAL_STATE Power state is not supported 30 ERROR_BAD_REQUEST Invalid Power state or Bad JSON param data format","title":"Errors"},{"location":"PowerPlugin/#example","text":"","title":"Example"},{"location":"PowerPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.set\", \"params\": { \"powerstate\": \"on\", \"timeout\": 0 } }","title":"Request"},{"location":"PowerPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"PowerPlugin/#properties","text":"The following properties are provided by the Power plugin: Power interface properties: Property Description state RO Power state","title":"Properties"},{"location":"PowerPlugin/#state-property","text":"Provides access to the power state. This property is read-only .","title":"state property"},{"location":"PowerPlugin/#value","text":"Name Type Description (property) string Power state (must be one of the following: on , activestandby , passivestandby , suspendtoram , hibernate , poweroff )","title":"Value"},{"location":"PowerPlugin/#example_1","text":"","title":"Example"},{"location":"PowerPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.state\" }","title":"Get Request"},{"location":"PowerPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"on\" }","title":"Get Response"},{"location":"ProcessContainers/","text":"Process Containers Version: 1.0 Status: :black_circle::white_circle::white_circle: Containers interface for Thunder framework. Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the Containers interface. It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Process Containers JSON-RPC API. Methods The following methods are provided by the Containers interface: Containers interface methods: Method Description start Starts a new container stop Stops a container start method Starts a new container. Parameters Name Type Description params object params?.name string (optional) Name of container params?.command string (optional) Command that will be started in the container params?.parameters array (optional) List of parameters supplied to command params?.parameters[#] string (optional) Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Container not found 1 ERROR_GENERAL Failed to start container Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.start\", \"params\": { \"name\": \"ContainerName\", \"command\": \"lsof\", \"parameters\": [ \"-i\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } stop method Stops a container. Parameters Name Type Description params object params.name string Name of container Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Container not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.stop\", \"params\": { \"name\": \"ContainerName\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Containers interface: Containers interface properties: Property Description containers RO List of active containers networks RO List of network interfaces of the container memory RO Memory taken by container cpu RO CPU time containers property Provides access to the list of active containers. This property is read-only . Value Name Type Description (property) array List of names of all containers (property)[#] string Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.containers\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ContainerName\" ] } networks property Provides access to the list of network interfaces of the container. This property is read-only . Value Name Type Description (property) array List of all network interfaces related to the container (property)[#] object Returns networks associated with the container (property)[#]?.interface string (optional) Interface name (property)[#]?.ips array (optional) List of ip addresses (property)[#]?.ips[#] string (optional) IP address The name argument shall be passed as the index to the property, e.g. Containers.1.networks@ContainerName . Errors Code Message Description 2 ERROR_UNAVAILABLE Container not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.networks@ContainerName\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"veth3NF06K\", \"ips\": [ \"192.168.0.12\" ] } ] } memory property Provides access to the memory taken by container. This property is read-only . Value Name Type Description (property) object Memory allocated by the container, in bytes (property)?.allocated number (optional) Memory allocated by container (property)?.resident number (optional) Resident memory of the container (property)?.shared number (optional) Shared memory in the container The name argument shall be passed as the index to the property, e.g. Containers.1.memory@ContainerName . Errors Code Message Description 2 ERROR_UNAVAILABLE Container not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.memory@ContainerName\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"resident\": 0, \"shared\": 0 } } cpu property Provides access to the CPU time. This property is read-only . Value Name Type Description (property) object CPU time spent on running the container, in nanoseconds (property)?.total number (optional) CPU-time spent on container, in nanoseconds (property)?.cores array (optional) Time spent on each cpu core, in nanoseconds (property)?.cores[#] number (optional) The name argument shall be passed as the index to the property, e.g. Containers.1.cpu@ContainerName . Errors Code Message Description 2 ERROR_UNAVAILABLE Container not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.cpu@ContainerName\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 2871287421, \"cores\": [ 2871287421 ] } }","title":"ProcessContainers"},{"location":"ProcessContainers/#process-containers","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Containers interface for Thunder framework.","title":"Process Containers"},{"location":"ProcessContainers/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"ProcessContainers/#introduction","text":"","title":"Introduction"},{"location":"ProcessContainers/#scope","text":"This document describes purpose and functionality of the Containers interface. It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"ProcessContainers/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"ProcessContainers/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"ProcessContainers/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"ProcessContainers/#description","text":"Process Containers JSON-RPC API.","title":"Description"},{"location":"ProcessContainers/#methods","text":"The following methods are provided by the Containers interface: Containers interface methods: Method Description start Starts a new container stop Stops a container","title":"Methods"},{"location":"ProcessContainers/#start-method","text":"Starts a new container.","title":"start method"},{"location":"ProcessContainers/#parameters","text":"Name Type Description params object params?.name string (optional) Name of container params?.command string (optional) Command that will be started in the container params?.parameters array (optional) List of parameters supplied to command params?.parameters[#] string (optional)","title":"Parameters"},{"location":"ProcessContainers/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"ProcessContainers/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Container not found 1 ERROR_GENERAL Failed to start container","title":"Errors"},{"location":"ProcessContainers/#example","text":"","title":"Example"},{"location":"ProcessContainers/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.start\", \"params\": { \"name\": \"ContainerName\", \"command\": \"lsof\", \"parameters\": [ \"-i\" ] } }","title":"Request"},{"location":"ProcessContainers/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"ProcessContainers/#stop-method","text":"Stops a container.","title":"stop method"},{"location":"ProcessContainers/#parameters_1","text":"Name Type Description params object params.name string Name of container","title":"Parameters"},{"location":"ProcessContainers/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"ProcessContainers/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"ProcessContainers/#example_1","text":"","title":"Example"},{"location":"ProcessContainers/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.stop\", \"params\": { \"name\": \"ContainerName\" } }","title":"Request"},{"location":"ProcessContainers/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"ProcessContainers/#properties","text":"The following properties are provided by the Containers interface: Containers interface properties: Property Description containers RO List of active containers networks RO List of network interfaces of the container memory RO Memory taken by container cpu RO CPU time","title":"Properties"},{"location":"ProcessContainers/#containers-property","text":"Provides access to the list of active containers. This property is read-only .","title":"containers property"},{"location":"ProcessContainers/#value","text":"Name Type Description (property) array List of names of all containers (property)[#] string","title":"Value"},{"location":"ProcessContainers/#example_2","text":"","title":"Example"},{"location":"ProcessContainers/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.containers\" }","title":"Get Request"},{"location":"ProcessContainers/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ContainerName\" ] }","title":"Get Response"},{"location":"ProcessContainers/#networks-property","text":"Provides access to the list of network interfaces of the container. This property is read-only .","title":"networks property"},{"location":"ProcessContainers/#value_1","text":"Name Type Description (property) array List of all network interfaces related to the container (property)[#] object Returns networks associated with the container (property)[#]?.interface string (optional) Interface name (property)[#]?.ips array (optional) List of ip addresses (property)[#]?.ips[#] string (optional) IP address The name argument shall be passed as the index to the property, e.g. Containers.1.networks@ContainerName .","title":"Value"},{"location":"ProcessContainers/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"ProcessContainers/#example_3","text":"","title":"Example"},{"location":"ProcessContainers/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.networks@ContainerName\" }","title":"Get Request"},{"location":"ProcessContainers/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"veth3NF06K\", \"ips\": [ \"192.168.0.12\" ] } ] }","title":"Get Response"},{"location":"ProcessContainers/#memory-property","text":"Provides access to the memory taken by container. This property is read-only .","title":"memory property"},{"location":"ProcessContainers/#value_2","text":"Name Type Description (property) object Memory allocated by the container, in bytes (property)?.allocated number (optional) Memory allocated by container (property)?.resident number (optional) Resident memory of the container (property)?.shared number (optional) Shared memory in the container The name argument shall be passed as the index to the property, e.g. Containers.1.memory@ContainerName .","title":"Value"},{"location":"ProcessContainers/#errors_3","text":"Code Message Description 2 ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"ProcessContainers/#example_4","text":"","title":"Example"},{"location":"ProcessContainers/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.memory@ContainerName\" }","title":"Get Request"},{"location":"ProcessContainers/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"resident\": 0, \"shared\": 0 } }","title":"Get Response"},{"location":"ProcessContainers/#cpu-property","text":"Provides access to the CPU time. This property is read-only .","title":"cpu property"},{"location":"ProcessContainers/#value_3","text":"Name Type Description (property) object CPU time spent on running the container, in nanoseconds (property)?.total number (optional) CPU-time spent on container, in nanoseconds (property)?.cores array (optional) Time spent on each cpu core, in nanoseconds (property)?.cores[#] number (optional) The name argument shall be passed as the index to the property, e.g. Containers.1.cpu@ContainerName .","title":"Value"},{"location":"ProcessContainers/#errors_4","text":"Code Message Description 2 ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"ProcessContainers/#example_5","text":"","title":"Example"},{"location":"ProcessContainers/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.cpu@ContainerName\" }","title":"Get Request"},{"location":"ProcessContainers/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 2871287421, \"cores\": [ 2871287421 ] } }","title":"Get Response"},{"location":"ProcessMonitorPlugin/","text":"ProcessMonitor Plugin Version: 1.0 Status: :black_circle::black_circle::black_circle: ProcessMonitor plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the ProcessMonitor plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description This ProcessMonitor plugin monitors any deactivated plugin and kills the associate process if it exists even after predefined time. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: ProcessMonitor ) classname string Class name: ProcessMonitor locator string Library name: libWPEFrameworkProcessMonitor.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"ProcessMonitorPlugin"},{"location":"ProcessMonitorPlugin/#processmonitor-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::black_circle: ProcessMonitor plugin for Thunder framework.","title":"ProcessMonitor Plugin"},{"location":"ProcessMonitorPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"ProcessMonitorPlugin/#introduction","text":"","title":"Introduction"},{"location":"ProcessMonitorPlugin/#scope","text":"This document describes purpose and functionality of the ProcessMonitor plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"ProcessMonitorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"ProcessMonitorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"ProcessMonitorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"ProcessMonitorPlugin/#description","text":"This ProcessMonitor plugin monitors any deactivated plugin and kills the associate process if it exists even after predefined time. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"ProcessMonitorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: ProcessMonitor ) classname string Class name: ProcessMonitor locator string Library name: libWPEFrameworkProcessMonitor.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"Configuration"},{"location":"ProvisioningAPI/","text":"Provisioning API Version: 1.0 Status: :black_circle::white_circle::white_circle: Provisioning interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Provisioning interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Provisioning JSON-RPC interface. Methods The following methods are provided by the Provisioning interface: Provisioning interface methods: Method Description provision Trigers platform provision process index Set the index for a provisioning key provision method Trigers platform provision process. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Provisioning in progress 2 ERROR_UNAVAILABLE Provisioning Back Office Client not available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.provision\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } index method Set the index for a provisioning key. Parameters Name Type Description params object params?.label string (optional) The label name for which the index should be changed params?.index number (optional) Index to be used for the key Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Provisioning Back Office Client not available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.index\", \"params\": { \"label\": \"cobalt\", \"index\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Provisioning interface: Provisioning interface properties: Property Description id RO Provision ID state RO Platform provision state id property Provides access to the provision ID. This property is read-only . Value Name Type Description (property) string Provision ID Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.id\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"WPE00000uCfrLF45\" } state property Provides access to the platform provision state. This property is read-only . Value Name Type Description (property) object Platform provision state (property).id string Provision ID value (property).status number Provision status (property).tokens array List of provisioned systems (property).tokens[#] string Errors Code Message Description 2 ERROR_UNAVAILABLE Provisioning Back Office Client not available Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": \"WPE00000uCfrLF45\", \"status\": 200, \"tokens\": [ \"netflix, playready\" ] } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Provisioning interface: Provisioning interface events: Event Description provisioningchange Signals a provisioning change provisioningchange event Signals a provisioning change. Parameters Name Type Description params object params.status number Provision status Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.provisioningchange\", \"params\": { \"status\": 200 } }","title":"ProvisioningAPI"},{"location":"ProvisioningAPI/#provisioning-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Provisioning interface for Thunder framework.","title":"Provisioning API"},{"location":"ProvisioningAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"ProvisioningAPI/#introduction","text":"","title":"Introduction"},{"location":"ProvisioningAPI/#scope","text":"This document describes purpose and functionality of the Provisioning interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"ProvisioningAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"ProvisioningAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"ProvisioningAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"ProvisioningAPI/#description","text":"Provisioning JSON-RPC interface.","title":"Description"},{"location":"ProvisioningAPI/#methods","text":"The following methods are provided by the Provisioning interface: Provisioning interface methods: Method Description provision Trigers platform provision process index Set the index for a provisioning key","title":"Methods"},{"location":"ProvisioningAPI/#provision-method","text":"Trigers platform provision process.","title":"provision method"},{"location":"ProvisioningAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"ProvisioningAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"ProvisioningAPI/#errors","text":"Code Message Description 12 ERROR_INPROGRESS Provisioning in progress 2 ERROR_UNAVAILABLE Provisioning Back Office Client not available","title":"Errors"},{"location":"ProvisioningAPI/#example","text":"","title":"Example"},{"location":"ProvisioningAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.provision\" }","title":"Request"},{"location":"ProvisioningAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"ProvisioningAPI/#index-method","text":"Set the index for a provisioning key.","title":"index method"},{"location":"ProvisioningAPI/#parameters_1","text":"Name Type Description params object params?.label string (optional) The label name for which the index should be changed params?.index number (optional) Index to be used for the key","title":"Parameters"},{"location":"ProvisioningAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"ProvisioningAPI/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Provisioning Back Office Client not available","title":"Errors"},{"location":"ProvisioningAPI/#example_1","text":"","title":"Example"},{"location":"ProvisioningAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.index\", \"params\": { \"label\": \"cobalt\", \"index\": 0 } }","title":"Request"},{"location":"ProvisioningAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"ProvisioningAPI/#properties","text":"The following properties are provided by the Provisioning interface: Provisioning interface properties: Property Description id RO Provision ID state RO Platform provision state","title":"Properties"},{"location":"ProvisioningAPI/#id-property","text":"Provides access to the provision ID. This property is read-only .","title":"id property"},{"location":"ProvisioningAPI/#value","text":"Name Type Description (property) string Provision ID","title":"Value"},{"location":"ProvisioningAPI/#example_2","text":"","title":"Example"},{"location":"ProvisioningAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.id\" }","title":"Get Request"},{"location":"ProvisioningAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"WPE00000uCfrLF45\" }","title":"Get Response"},{"location":"ProvisioningAPI/#state-property","text":"Provides access to the platform provision state. This property is read-only .","title":"state property"},{"location":"ProvisioningAPI/#value_1","text":"Name Type Description (property) object Platform provision state (property).id string Provision ID value (property).status number Provision status (property).tokens array List of provisioned systems (property).tokens[#] string","title":"Value"},{"location":"ProvisioningAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Provisioning Back Office Client not available","title":"Errors"},{"location":"ProvisioningAPI/#example_3","text":"","title":"Example"},{"location":"ProvisioningAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.state\" }","title":"Get Request"},{"location":"ProvisioningAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": \"WPE00000uCfrLF45\", \"status\": 200, \"tokens\": [ \"netflix, playready\" ] } }","title":"Get Response"},{"location":"ProvisioningAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Provisioning interface: Provisioning interface events: Event Description provisioningchange Signals a provisioning change","title":"Notifications"},{"location":"ProvisioningAPI/#provisioningchange-event","text":"Signals a provisioning change.","title":"provisioningchange event"},{"location":"ProvisioningAPI/#parameters_2","text":"Name Type Description params object params.status number Provision status","title":"Parameters"},{"location":"ProvisioningAPI/#example_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.provisioningchange\", \"params\": { \"status\": 200 } }","title":"Example"},{"location":"RemoteControlAPI/","text":"Remote Control API Version: 1.0 Status: :black_circle::white_circle::white_circle: RemoteControl interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the RemoteControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description RemoteControl JSON-RPC interface. Methods The following methods are provided by the RemoteControl interface: RemoteControl interface methods: Method Description key Gets key code details send Sends a key to a device (press and release) press Presses a key on a device release Releases a key on a device add Adds a key code to the key map modify Modifies a key code in the key map delete Deletes a key code from the key map load Re-loads the device's key map from persistent memory save Saves the device's key map into persistent path pair Activates pairing mode of a device unpair Unpairs a device key method Gets key code details. Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result object result.code number Key code result.key number Key ingest value result?.modifiers array (optional) List of key modifiers result?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl ) Errors Code Message Description 22 ERROR_UNKNOWN_KEY Key does not exist 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.key\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } send method Sends a key to a device (press and release). Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist 36 ERROR_ALREADY_RELEASED Key is already released Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.send\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } press method Presses a key on a device. Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.press\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } release method Releases a key on a device. Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist 36 ERROR_ALREADY_RELEASED Key is already released Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.release\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } add method Adds a key code to the key map. Parameters Name Type Description params object params.device string Device name params.code number Key code params.key number Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl ) Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Code already exists Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.add\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } modify method Modifies a key code in the key map. Parameters Name Type Description params object params.device string Device name params.code number Key code params.key number Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl ) Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.modify\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } delete method Deletes a key code from the key map. Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Key does not exist 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.delete\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } load method Re-loads the device's key map from persistent memory. Parameters Name Type Description params object params.device string Device name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL File does not exist 30 ERROR_BAD_REQUEST Bad JSON param data format 5 ERROR_ILLEGAL_STATE Illegal state 6 ERROR_OPENING_FAILED Opening failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.load\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } save method Saves the device's key map into persistent path. Parameters Name Type Description params object params.device string Device name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL File is not created 30 ERROR_BAD_REQUEST Bad JSON param data format 5 ERROR_ILLEGAL_STATE Illegal state Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.save\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pair method Activates pairing mode of a device. Parameters Name Type Description params object params.device string Device name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL Failed to activate pairing 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.pair\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unpair method Unpairs a device. Parameters Name Type Description params object params.device string Device name params.bindid string Binding ID Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL Failed to unpair the device 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.unpair\", \"params\": { \"device\": \"DevInput\", \"bindid\": \"id\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the RemoteControl interface: RemoteControl interface properties: Property Description devices RO Names of all available devices device RO Metadata of a specific device devices property Provides access to the names of all available devices. This property is read-only . Value Name Type Description (property) array Names of all available devices (property)[#] string Device name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.devices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Web\" ] } device property Provides access to the metadata of a specific device. This property is read-only . Value Name Type Description (property) object Metadata of a specific device (property).metadata string Device metadata The device argument shall be passed as the index to the property, e.g. RemoteControl.1.device@DevInput . Errors Code Message Description 1 ERROR_GENERAL Metadata not supported on a virtual device 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.device@DevInput\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": \"It is based on protocol A\" } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the RemoteControl interface: RemoteControl interface events: Event Description keypressed Notifies of a key press/release action keypressed event Notifies of a key press/release action. Parameters Name Type Description params object params.pressed boolean Denotes if the key was pressed (true) or released (false) The key code argument shall be passed within the designator, e.g. 42.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"42.client.events.1.keypressed\", \"params\": { \"pressed\": false } }","title":"RemoteControlAPI"},{"location":"RemoteControlAPI/#remote-control-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: RemoteControl interface for Thunder framework.","title":"Remote Control API"},{"location":"RemoteControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"RemoteControlAPI/#introduction","text":"","title":"Introduction"},{"location":"RemoteControlAPI/#scope","text":"This document describes purpose and functionality of the RemoteControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"RemoteControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"RemoteControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"RemoteControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"RemoteControlAPI/#description","text":"RemoteControl JSON-RPC interface.","title":"Description"},{"location":"RemoteControlAPI/#methods","text":"The following methods are provided by the RemoteControl interface: RemoteControl interface methods: Method Description key Gets key code details send Sends a key to a device (press and release) press Presses a key on a device release Releases a key on a device add Adds a key code to the key map modify Modifies a key code in the key map delete Deletes a key code from the key map load Re-loads the device's key map from persistent memory save Saves the device's key map into persistent path pair Activates pairing mode of a device unpair Unpairs a device","title":"Methods"},{"location":"RemoteControlAPI/#key-method","text":"Gets key code details.","title":"key method"},{"location":"RemoteControlAPI/#parameters","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlAPI/#result","text":"Name Type Description result object result.code number Key code result.key number Key ingest value result?.modifiers array (optional) List of key modifiers result?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl )","title":"Result"},{"location":"RemoteControlAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Key does not exist 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlAPI/#example","text":"","title":"Example"},{"location":"RemoteControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.key\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Response"},{"location":"RemoteControlAPI/#send-method","text":"Sends a key to a device (press and release).","title":"send method"},{"location":"RemoteControlAPI/#parameters_1","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist 36 ERROR_ALREADY_RELEASED Key is already released","title":"Errors"},{"location":"RemoteControlAPI/#example_1","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.send\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#press-method","text":"Presses a key on a device.","title":"press method"},{"location":"RemoteControlAPI/#parameters_2","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist","title":"Errors"},{"location":"RemoteControlAPI/#example_2","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.press\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#release-method","text":"Releases a key on a device.","title":"release method"},{"location":"RemoteControlAPI/#parameters_3","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlAPI/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_3","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist 36 ERROR_ALREADY_RELEASED Key is already released","title":"Errors"},{"location":"RemoteControlAPI/#example_3","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.release\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#add-method","text":"Adds a key code to the key map.","title":"add method"},{"location":"RemoteControlAPI/#parameters_4","text":"Name Type Description params object params.device string Device name params.code number Key code params.key number Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl )","title":"Parameters"},{"location":"RemoteControlAPI/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_4","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Code already exists","title":"Errors"},{"location":"RemoteControlAPI/#example_4","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.add\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Request"},{"location":"RemoteControlAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#modify-method","text":"Modifies a key code in the key map.","title":"modify method"},{"location":"RemoteControlAPI/#parameters_5","text":"Name Type Description params object params.device string Device name params.code number Key code params.key number Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl )","title":"Parameters"},{"location":"RemoteControlAPI/#result_5","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_5","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist","title":"Errors"},{"location":"RemoteControlAPI/#example_5","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.modify\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Request"},{"location":"RemoteControlAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#delete-method","text":"Deletes a key code from the key map.","title":"delete method"},{"location":"RemoteControlAPI/#parameters_6","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlAPI/#result_6","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_6","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Key does not exist 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlAPI/#example_6","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.delete\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlAPI/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#load-method","text":"Re-loads the device's key map from persistent memory.","title":"load method"},{"location":"RemoteControlAPI/#parameters_7","text":"Name Type Description params object params.device string Device name","title":"Parameters"},{"location":"RemoteControlAPI/#result_7","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_7","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL File does not exist 30 ERROR_BAD_REQUEST Bad JSON param data format 5 ERROR_ILLEGAL_STATE Illegal state 6 ERROR_OPENING_FAILED Opening failed","title":"Errors"},{"location":"RemoteControlAPI/#example_7","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.load\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"RemoteControlAPI/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#save-method","text":"Saves the device's key map into persistent path.","title":"save method"},{"location":"RemoteControlAPI/#parameters_8","text":"Name Type Description params object params.device string Device name","title":"Parameters"},{"location":"RemoteControlAPI/#result_8","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_8","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL File is not created 30 ERROR_BAD_REQUEST Bad JSON param data format 5 ERROR_ILLEGAL_STATE Illegal state","title":"Errors"},{"location":"RemoteControlAPI/#example_8","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.save\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"RemoteControlAPI/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#pair-method","text":"Activates pairing mode of a device.","title":"pair method"},{"location":"RemoteControlAPI/#parameters_9","text":"Name Type Description params object params.device string Device name","title":"Parameters"},{"location":"RemoteControlAPI/#result_9","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_9","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL Failed to activate pairing 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlAPI/#example_9","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.pair\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"RemoteControlAPI/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#unpair-method","text":"Unpairs a device.","title":"unpair method"},{"location":"RemoteControlAPI/#parameters_10","text":"Name Type Description params object params.device string Device name params.bindid string Binding ID","title":"Parameters"},{"location":"RemoteControlAPI/#result_10","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlAPI/#errors_10","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL Failed to unpair the device 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlAPI/#example_10","text":"","title":"Example"},{"location":"RemoteControlAPI/#request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.unpair\", \"params\": { \"device\": \"DevInput\", \"bindid\": \"id\" } }","title":"Request"},{"location":"RemoteControlAPI/#response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlAPI/#properties","text":"The following properties are provided by the RemoteControl interface: RemoteControl interface properties: Property Description devices RO Names of all available devices device RO Metadata of a specific device","title":"Properties"},{"location":"RemoteControlAPI/#devices-property","text":"Provides access to the names of all available devices. This property is read-only .","title":"devices property"},{"location":"RemoteControlAPI/#value","text":"Name Type Description (property) array Names of all available devices (property)[#] string Device name","title":"Value"},{"location":"RemoteControlAPI/#example_11","text":"","title":"Example"},{"location":"RemoteControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.devices\" }","title":"Get Request"},{"location":"RemoteControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Web\" ] }","title":"Get Response"},{"location":"RemoteControlAPI/#device-property","text":"Provides access to the metadata of a specific device. This property is read-only .","title":"device property"},{"location":"RemoteControlAPI/#value_1","text":"Name Type Description (property) object Metadata of a specific device (property).metadata string Device metadata The device argument shall be passed as the index to the property, e.g. RemoteControl.1.device@DevInput .","title":"Value"},{"location":"RemoteControlAPI/#errors_11","text":"Code Message Description 1 ERROR_GENERAL Metadata not supported on a virtual device 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlAPI/#example_12","text":"","title":"Example"},{"location":"RemoteControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.device@DevInput\" }","title":"Get Request"},{"location":"RemoteControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": \"It is based on protocol A\" } }","title":"Get Response"},{"location":"RemoteControlAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the RemoteControl interface: RemoteControl interface events: Event Description keypressed Notifies of a key press/release action","title":"Notifications"},{"location":"RemoteControlAPI/#keypressed-event","text":"Notifies of a key press/release action.","title":"keypressed event"},{"location":"RemoteControlAPI/#parameters_11","text":"Name Type Description params object params.pressed boolean Denotes if the key was pressed (true) or released (false) The key code argument shall be passed within the designator, e.g. 42.client.events.1 .","title":"Parameters"},{"location":"RemoteControlAPI/#example_13","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"42.client.events.1.keypressed\", \"params\": { \"pressed\": false } }","title":"Example"},{"location":"RemoteControlPlugin/","text":"Remote Control Plugin Version: 1.0 Status: :black_circle::black_circle::black_circle: RemoteControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the RemoteControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The RemoteControl plugin provides user-input functionality from various key-code sources (e.g. STB RC). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: RemoteControl ) classname string Class name: RemoteControl locator string Library name: libWPEFrameworkRemoteControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.mapfile string (optional) Map File configuration?.postlookupfile string (optional) PostLookup File configuration?.passon boolean (optional) Enable passon configuration?.repeatstart number (optional) Maximum number of repeats configuration?.repeatinterval number (optional) Maximum duration between repeats configuration?.releasetimeout number (optional) Release timeout configuration?.devices array (optional) List of devices configuration?.devices[#] object (optional) configuration?.devices[#]?.name string (optional) Name configuration?.devices[#]?.mapfile string (optional) Map File configuration?.devices[#]?.passon boolean (optional) Enable passon configuration?.devices[#]?.settings string (optional) Settings configuration?.virtuals array (optional) List of virtuals configuration?.virtuals[#] object (optional) configuration?.virtuals[#]?.name string (optional) Name configuration?.virtuals[#]?.mapfile string (optional) Map File configuration?.virtuals[#]?.passon boolean (optional) Enable passon configuration?.virtuals[#]?.settings string (optional) Settings configuration?.links array (optional) List of Links configuration?.links[#] object (optional) configuration?.links[#]?.name string (optional) Name configuration?.links[#]?.mapfile string (optional) Map File Methods The following methods are provided by the RemoteControl plugin: RemoteControl interface methods: Method Description key Gets key code details send Sends a key to a device (press and release) press Presses a key on a device release Releases a key on a device add Adds a key code to the key map modify Modifies a key code in the key map delete Deletes a key code from the key map load Re-loads the device's key map from persistent memory save Saves the device's key map into persistent path pair Activates pairing mode of a device unpair Unpairs a device key method Gets key code details. Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result object result.code number Key code result.key number Key ingest value result?.modifiers array (optional) List of key modifiers result?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl ) Errors Code Message Description 22 ERROR_UNKNOWN_KEY Key does not exist 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.key\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } send method Sends a key to a device (press and release). Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist 36 ERROR_ALREADY_RELEASED Key is already released Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.send\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } press method Presses a key on a device. Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.press\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } release method Releases a key on a device. Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist 36 ERROR_ALREADY_RELEASED Key is already released Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.release\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } add method Adds a key code to the key map. Parameters Name Type Description params object params.device string Device name params.code number Key code params.key number Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl ) Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Code already exists Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.add\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } modify method Modifies a key code in the key map. Parameters Name Type Description params object params.device string Device name params.code number Key code params.key number Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl ) Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.modify\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } delete method Deletes a key code from the key map. Parameters Name Type Description params object params.device string Device name params.code number Key code Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Key does not exist 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.delete\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } load method Re-loads the device's key map from persistent memory. Parameters Name Type Description params object params.device string Device name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL File does not exist 30 ERROR_BAD_REQUEST Bad JSON param data format 5 ERROR_ILLEGAL_STATE Illegal state 6 ERROR_OPENING_FAILED Opening failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.load\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } save method Saves the device's key map into persistent path. Parameters Name Type Description params object params.device string Device name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL File is not created 30 ERROR_BAD_REQUEST Bad JSON param data format 5 ERROR_ILLEGAL_STATE Illegal state Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.save\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pair method Activates pairing mode of a device. Parameters Name Type Description params object params.device string Device name Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL Failed to activate pairing 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.pair\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unpair method Unpairs a device. Parameters Name Type Description params object params.device string Device name params.bindid string Binding ID Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL Failed to unpair the device 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.unpair\", \"params\": { \"device\": \"DevInput\", \"bindid\": \"id\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the RemoteControl plugin: RemoteControl interface properties: Property Description devices RO Names of all available devices device RO Metadata of a specific device devices property Provides access to the names of all available devices. This property is read-only . Value Name Type Description (property) array Names of all available devices (property)[#] string Device name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.devices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Web\" ] } device property Provides access to the metadata of a specific device. This property is read-only . Value Name Type Description (property) object Metadata of a specific device (property).metadata string Device metadata The device argument shall be passed as the index to the property, e.g. RemoteControl.1.device@DevInput . Errors Code Message Description 1 ERROR_GENERAL Metadata not supported on a virtual device 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.device@DevInput\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": \"It is based on protocol A\" } } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the RemoteControl plugin: RemoteControl interface events: Event Description keypressed Notifies of a key press/release action keypressed event Notifies of a key press/release action. Parameters Name Type Description params object params.pressed boolean Denotes if the key was pressed (true) or released (false) The key code argument shall be passed within the designator, e.g. 42.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"42.client.events.1.keypressed\", \"params\": { \"pressed\": false } }","title":"RemoteControlPlugin"},{"location":"RemoteControlPlugin/#remote-control-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::black_circle: RemoteControl plugin for Thunder framework.","title":"Remote Control Plugin"},{"location":"RemoteControlPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"RemoteControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"RemoteControlPlugin/#scope","text":"This document describes purpose and functionality of the RemoteControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"RemoteControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"RemoteControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"RemoteControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"RemoteControlPlugin/#description","text":"The RemoteControl plugin provides user-input functionality from various key-code sources (e.g. STB RC). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"RemoteControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: RemoteControl ) classname string Class name: RemoteControl locator string Library name: libWPEFrameworkRemoteControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.mapfile string (optional) Map File configuration?.postlookupfile string (optional) PostLookup File configuration?.passon boolean (optional) Enable passon configuration?.repeatstart number (optional) Maximum number of repeats configuration?.repeatinterval number (optional) Maximum duration between repeats configuration?.releasetimeout number (optional) Release timeout configuration?.devices array (optional) List of devices configuration?.devices[#] object (optional) configuration?.devices[#]?.name string (optional) Name configuration?.devices[#]?.mapfile string (optional) Map File configuration?.devices[#]?.passon boolean (optional) Enable passon configuration?.devices[#]?.settings string (optional) Settings configuration?.virtuals array (optional) List of virtuals configuration?.virtuals[#] object (optional) configuration?.virtuals[#]?.name string (optional) Name configuration?.virtuals[#]?.mapfile string (optional) Map File configuration?.virtuals[#]?.passon boolean (optional) Enable passon configuration?.virtuals[#]?.settings string (optional) Settings configuration?.links array (optional) List of Links configuration?.links[#] object (optional) configuration?.links[#]?.name string (optional) Name configuration?.links[#]?.mapfile string (optional) Map File","title":"Configuration"},{"location":"RemoteControlPlugin/#methods","text":"The following methods are provided by the RemoteControl plugin: RemoteControl interface methods: Method Description key Gets key code details send Sends a key to a device (press and release) press Presses a key on a device release Releases a key on a device add Adds a key code to the key map modify Modifies a key code in the key map delete Deletes a key code from the key map load Re-loads the device's key map from persistent memory save Saves the device's key map into persistent path pair Activates pairing mode of a device unpair Unpairs a device","title":"Methods"},{"location":"RemoteControlPlugin/#key-method","text":"Gets key code details.","title":"key method"},{"location":"RemoteControlPlugin/#parameters","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlPlugin/#result","text":"Name Type Description result object result.code number Key code result.key number Key ingest value result?.modifiers array (optional) List of key modifiers result?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl )","title":"Result"},{"location":"RemoteControlPlugin/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Key does not exist 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlPlugin/#example","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.key\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Response"},{"location":"RemoteControlPlugin/#send-method","text":"Sends a key to a device (press and release).","title":"send method"},{"location":"RemoteControlPlugin/#parameters_1","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist 36 ERROR_ALREADY_RELEASED Key is already released","title":"Errors"},{"location":"RemoteControlPlugin/#example_1","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.send\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#press-method","text":"Presses a key on a device.","title":"press method"},{"location":"RemoteControlPlugin/#parameters_2","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlPlugin/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist","title":"Errors"},{"location":"RemoteControlPlugin/#example_2","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.press\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#release-method","text":"Releases a key on a device.","title":"release method"},{"location":"RemoteControlPlugin/#parameters_3","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlPlugin/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_3","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist 28 ERROR_UNKNOWN_TABLE Key map table does not exist 36 ERROR_ALREADY_RELEASED Key is already released","title":"Errors"},{"location":"RemoteControlPlugin/#example_3","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.release\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#add-method","text":"Adds a key code to the key map.","title":"add method"},{"location":"RemoteControlPlugin/#parameters_4","text":"Name Type Description params object params.device string Device name params.code number Key code params.key number Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl )","title":"Parameters"},{"location":"RemoteControlPlugin/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_4","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Code already exists","title":"Errors"},{"location":"RemoteControlPlugin/#example_4","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.add\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Request"},{"location":"RemoteControlPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#modify-method","text":"Modifies a key code in the key map.","title":"modify method"},{"location":"RemoteControlPlugin/#parameters_5","text":"Name Type Description params object params.device string Device name params.code number Key code params.key number Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier (must be one of the following: leftshift , rightshift , leftalt , rightalt , leftctrl , rightctrl )","title":"Parameters"},{"location":"RemoteControlPlugin/#result_5","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_5","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format 22 ERROR_UNKNOWN_KEY Key does not exist","title":"Errors"},{"location":"RemoteControlPlugin/#example_5","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.modify\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Request"},{"location":"RemoteControlPlugin/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#delete-method","text":"Deletes a key code from the key map.","title":"delete method"},{"location":"RemoteControlPlugin/#parameters_6","text":"Name Type Description params object params.device string Device name params.code number Key code","title":"Parameters"},{"location":"RemoteControlPlugin/#result_6","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_6","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Key does not exist 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlPlugin/#example_6","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.delete\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"RemoteControlPlugin/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#load-method","text":"Re-loads the device's key map from persistent memory.","title":"load method"},{"location":"RemoteControlPlugin/#parameters_7","text":"Name Type Description params object params.device string Device name","title":"Parameters"},{"location":"RemoteControlPlugin/#result_7","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_7","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL File does not exist 30 ERROR_BAD_REQUEST Bad JSON param data format 5 ERROR_ILLEGAL_STATE Illegal state 6 ERROR_OPENING_FAILED Opening failed","title":"Errors"},{"location":"RemoteControlPlugin/#example_7","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.load\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"RemoteControlPlugin/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#save-method","text":"Saves the device's key map into persistent path.","title":"save method"},{"location":"RemoteControlPlugin/#parameters_8","text":"Name Type Description params object params.device string Device name","title":"Parameters"},{"location":"RemoteControlPlugin/#result_8","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_8","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL File is not created 30 ERROR_BAD_REQUEST Bad JSON param data format 5 ERROR_ILLEGAL_STATE Illegal state","title":"Errors"},{"location":"RemoteControlPlugin/#example_8","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.save\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"RemoteControlPlugin/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#pair-method","text":"Activates pairing mode of a device.","title":"pair method"},{"location":"RemoteControlPlugin/#parameters_9","text":"Name Type Description params object params.device string Device name","title":"Parameters"},{"location":"RemoteControlPlugin/#result_9","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_9","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL Failed to activate pairing 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlPlugin/#example_9","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.pair\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"RemoteControlPlugin/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#unpair-method","text":"Unpairs a device.","title":"unpair method"},{"location":"RemoteControlPlugin/#parameters_10","text":"Name Type Description params object params.device string Device name params.bindid string Binding ID","title":"Parameters"},{"location":"RemoteControlPlugin/#result_10","text":"Name Type Description result null Always null","title":"Result"},{"location":"RemoteControlPlugin/#errors_10","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown device 1 ERROR_GENERAL Failed to unpair the device 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlPlugin/#example_10","text":"","title":"Example"},{"location":"RemoteControlPlugin/#request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.unpair\", \"params\": { \"device\": \"DevInput\", \"bindid\": \"id\" } }","title":"Request"},{"location":"RemoteControlPlugin/#response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"RemoteControlPlugin/#properties","text":"The following properties are provided by the RemoteControl plugin: RemoteControl interface properties: Property Description devices RO Names of all available devices device RO Metadata of a specific device","title":"Properties"},{"location":"RemoteControlPlugin/#devices-property","text":"Provides access to the names of all available devices. This property is read-only .","title":"devices property"},{"location":"RemoteControlPlugin/#value","text":"Name Type Description (property) array Names of all available devices (property)[#] string Device name","title":"Value"},{"location":"RemoteControlPlugin/#example_11","text":"","title":"Example"},{"location":"RemoteControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.devices\" }","title":"Get Request"},{"location":"RemoteControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Web\" ] }","title":"Get Response"},{"location":"RemoteControlPlugin/#device-property","text":"Provides access to the metadata of a specific device. This property is read-only .","title":"device property"},{"location":"RemoteControlPlugin/#value_1","text":"Name Type Description (property) object Metadata of a specific device (property).metadata string Device metadata The device argument shall be passed as the index to the property, e.g. RemoteControl.1.device@DevInput .","title":"Value"},{"location":"RemoteControlPlugin/#errors_11","text":"Code Message Description 1 ERROR_GENERAL Metadata not supported on a virtual device 2 ERROR_UNAVAILABLE Unknown device 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"RemoteControlPlugin/#example_12","text":"","title":"Example"},{"location":"RemoteControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.device@DevInput\" }","title":"Get Request"},{"location":"RemoteControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": \"It is based on protocol A\" } }","title":"Get Response"},{"location":"RemoteControlPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the RemoteControl plugin: RemoteControl interface events: Event Description keypressed Notifies of a key press/release action","title":"Notifications"},{"location":"RemoteControlPlugin/#keypressed-event","text":"Notifies of a key press/release action.","title":"keypressed event"},{"location":"RemoteControlPlugin/#parameters_11","text":"Name Type Description params object params.pressed boolean Denotes if the key was pressed (true) or released (false) The key code argument shall be passed within the designator, e.g. 42.client.events.1 .","title":"Parameters"},{"location":"RemoteControlPlugin/#example_13","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"42.client.events.1.keypressed\", \"params\": { \"pressed\": false } }","title":"Example"},{"location":"ResourceMonitorPlugin/","text":"ResourceMonitor Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: ResourceMonitor plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the ResourceMonitor plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The ResourceMonitor plugin provides web browsing functionality based on the ResourceMonitor engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: ResourceMonitor ) classname string Class name: ResourceMonitor locator string Library name: libWPEFrameworkResourceMonitor.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.path string (optional) Path of resource configuration?.interval number (optional) Duration between measurements (default: 5) configuration?.mode string (optional) Mode (options: \"single\", \"multiple\", \"callsign\", \"classname\") configuration?.parent-name string (optional) Name of parent process","title":"ResourceMonitorPlugin"},{"location":"ResourceMonitorPlugin/#resourcemonitor-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: ResourceMonitor plugin for Thunder framework.","title":"ResourceMonitor Plugin"},{"location":"ResourceMonitorPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"ResourceMonitorPlugin/#introduction","text":"","title":"Introduction"},{"location":"ResourceMonitorPlugin/#scope","text":"This document describes purpose and functionality of the ResourceMonitor plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"ResourceMonitorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"ResourceMonitorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"ResourceMonitorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"ResourceMonitorPlugin/#description","text":"The ResourceMonitor plugin provides web browsing functionality based on the ResourceMonitor engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"ResourceMonitorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: ResourceMonitor ) classname string Class name: ResourceMonitor locator string Library name: libWPEFrameworkResourceMonitor.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.path string (optional) Path of resource configuration?.interval number (optional) Duration between measurements (default: 5) configuration?.mode string (optional) Mode (options: \"single\", \"multiple\", \"callsign\", \"classname\") configuration?.parent-name string (optional) Name of parent process","title":"Configuration"},{"location":"SecureShellServerAPI/","text":"SecureShell Server API Version: 1.0 Status: :black_circle::white_circle::white_circle: SecureShellServer interface for Thunder framework. Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the SecureShellServer interface. It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description SecureShell Server JSON-RPC interface. Methods The following methods are provided by the SecureShellServer interface: SecureShellServer interface methods: Method Description get active sessions count Get count of currently active SSH client sessions maintained by SecureShell SSH Service get active sessions info RO Get details of currently active SSH client sessions maintained by SecureShell SSH Service close client session Close and active SSH client session get_active_sessions_count method Get count of currently active SSH client sessions maintained by SecureShell SSH Service. Description With this method SecureShell SSH service shall provide the count of active SSH client sessions. Parameters This method takes no parameters. Result Name Type Description result number Number of client sessions count Errors Code Message Description 1 ERROR_GENERAL Failed to get client sessions count 2 ERROR_UNAVAILABLE Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.get_active_sessions_count\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } get_active_sessions_info method Get details of currently active SSH client sessions maintained by SecureShell SSH Service. Description With this method SecureShell SSH service shall provide the full details of active SSH client sessions. Parameters This method takes no parameters. Result Name Type Description result array result[#] object result[#].pid number SSH client process ID result[#].ipaddress string SSH client connected from this IP address result[#].timestamp string SSH client connected at this timestamp Errors Code Message Description 1 ERROR_GENERAL Failed to get client sessions details 2 ERROR_UNAVAILABLE Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.get_active_sessions_info\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"pid\": 268, \"ipaddress\": \"192.168.33.57\", \"timestamp\": \"Sun Jun 30 21:49:08 2019\" } ] } close_client_session method Close and active SSH client session. Description With this method SecureShell an active SSH client session shall be closed. Parameters Name Type Description params object params.clientpid string SSH client process id Errors Code Message Description 1 ERROR_GENERAL Failed to close SSH client session 2 ERROR_UNAVAILABLE Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.close_client_session\", \"params\": { \"clientpid\": \"268\" } }","title":"SecureShellServerAPI"},{"location":"SecureShellServerAPI/#secureshell-server-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: SecureShellServer interface for Thunder framework.","title":"SecureShell Server API"},{"location":"SecureShellServerAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"SecureShellServerAPI/#introduction","text":"","title":"Introduction"},{"location":"SecureShellServerAPI/#scope","text":"This document describes purpose and functionality of the SecureShellServer interface. It includes detailed specification about its methods provided.","title":"Scope"},{"location":"SecureShellServerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"SecureShellServerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"SecureShellServerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"SecureShellServerAPI/#description","text":"SecureShell Server JSON-RPC interface.","title":"Description"},{"location":"SecureShellServerAPI/#methods","text":"The following methods are provided by the SecureShellServer interface: SecureShellServer interface methods: Method Description get active sessions count Get count of currently active SSH client sessions maintained by SecureShell SSH Service get active sessions info RO Get details of currently active SSH client sessions maintained by SecureShell SSH Service close client session Close and active SSH client session","title":"Methods"},{"location":"SecureShellServerAPI/#get_active_sessions_count-method","text":"Get count of currently active SSH client sessions maintained by SecureShell SSH Service.","title":"get_active_sessions_count method"},{"location":"SecureShellServerAPI/#description_1","text":"With this method SecureShell SSH service shall provide the count of active SSH client sessions.","title":"Description"},{"location":"SecureShellServerAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"SecureShellServerAPI/#result","text":"Name Type Description result number Number of client sessions count","title":"Result"},{"location":"SecureShellServerAPI/#errors","text":"Code Message Description 1 ERROR_GENERAL Failed to get client sessions count 2 ERROR_UNAVAILABLE Unknown error","title":"Errors"},{"location":"SecureShellServerAPI/#example","text":"","title":"Example"},{"location":"SecureShellServerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.get_active_sessions_count\" }","title":"Request"},{"location":"SecureShellServerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"SecureShellServerAPI/#get_active_sessions_info-method","text":"Get details of currently active SSH client sessions maintained by SecureShell SSH Service.","title":"get_active_sessions_info method"},{"location":"SecureShellServerAPI/#description_2","text":"With this method SecureShell SSH service shall provide the full details of active SSH client sessions.","title":"Description"},{"location":"SecureShellServerAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"SecureShellServerAPI/#result_1","text":"Name Type Description result array result[#] object result[#].pid number SSH client process ID result[#].ipaddress string SSH client connected from this IP address result[#].timestamp string SSH client connected at this timestamp","title":"Result"},{"location":"SecureShellServerAPI/#errors_1","text":"Code Message Description 1 ERROR_GENERAL Failed to get client sessions details 2 ERROR_UNAVAILABLE Unknown error","title":"Errors"},{"location":"SecureShellServerAPI/#example_1","text":"","title":"Example"},{"location":"SecureShellServerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.get_active_sessions_info\" }","title":"Request"},{"location":"SecureShellServerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"pid\": 268, \"ipaddress\": \"192.168.33.57\", \"timestamp\": \"Sun Jun 30 21:49:08 2019\" } ] }","title":"Response"},{"location":"SecureShellServerAPI/#close_client_session-method","text":"Close and active SSH client session.","title":"close_client_session method"},{"location":"SecureShellServerAPI/#description_3","text":"With this method SecureShell an active SSH client session shall be closed.","title":"Description"},{"location":"SecureShellServerAPI/#parameters_2","text":"Name Type Description params object params.clientpid string SSH client process id","title":"Parameters"},{"location":"SecureShellServerAPI/#errors_2","text":"Code Message Description 1 ERROR_GENERAL Failed to close SSH client session 2 ERROR_UNAVAILABLE Unknown error","title":"Errors"},{"location":"SecureShellServerAPI/#example_2","text":"","title":"Example"},{"location":"SecureShellServerAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.close_client_session\", \"params\": { \"clientpid\": \"268\" } }","title":"Request"},{"location":"SecurityAgentAPI/","text":"Security Agent API Version: 1.0 Status: :black_circle::white_circle::white_circle: SecurityAgent interface for Thunder framework. Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the SecurityAgent interface. It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Security Agent JSON-RPC interface. Methods The following methods are provided by the SecurityAgent interface: SecurityAgent interface methods: Method Description createtoken Creates Token validate Validates Token createtoken method Creates Token. Description Create a signed JsonWeb token from provided payload. Parameters Name Type Description params object params?.url string (optional) Url of application origin params?.user string (optional) Username params?.hash string (optional) Random hash Result Name Type Description result object result.token string Signed JsonWeb token Errors Code Message Description 1 ERROR_GENERAL Token creation failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.createtoken\", \"params\": { \"url\": \"https://test.comcast.com\", \"user\": \"Test\", \"hash\": \"1CLYex47SY\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } } validate method Validates Token. Description Checks whether the token is valid and properly signed. Parameters Name Type Description params object params.token string Token that will be validated Result Name Type Description result object result.valid boolean Tells whether token is signature is correct Errors Code Message Description Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.validate\", \"params\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"valid\": false } }","title":"SecurityAgentAPI"},{"location":"SecurityAgentAPI/#security-agent-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: SecurityAgent interface for Thunder framework.","title":"Security Agent API"},{"location":"SecurityAgentAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"SecurityAgentAPI/#introduction","text":"","title":"Introduction"},{"location":"SecurityAgentAPI/#scope","text":"This document describes purpose and functionality of the SecurityAgent interface. It includes detailed specification about its methods provided.","title":"Scope"},{"location":"SecurityAgentAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"SecurityAgentAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"SecurityAgentAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"SecurityAgentAPI/#description","text":"Security Agent JSON-RPC interface.","title":"Description"},{"location":"SecurityAgentAPI/#methods","text":"The following methods are provided by the SecurityAgent interface: SecurityAgent interface methods: Method Description createtoken Creates Token validate Validates Token","title":"Methods"},{"location":"SecurityAgentAPI/#createtoken-method","text":"Creates Token.","title":"createtoken method"},{"location":"SecurityAgentAPI/#description_1","text":"Create a signed JsonWeb token from provided payload.","title":"Description"},{"location":"SecurityAgentAPI/#parameters","text":"Name Type Description params object params?.url string (optional) Url of application origin params?.user string (optional) Username params?.hash string (optional) Random hash","title":"Parameters"},{"location":"SecurityAgentAPI/#result","text":"Name Type Description result object result.token string Signed JsonWeb token","title":"Result"},{"location":"SecurityAgentAPI/#errors","text":"Code Message Description 1 ERROR_GENERAL Token creation failed","title":"Errors"},{"location":"SecurityAgentAPI/#example","text":"","title":"Example"},{"location":"SecurityAgentAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.createtoken\", \"params\": { \"url\": \"https://test.comcast.com\", \"user\": \"Test\", \"hash\": \"1CLYex47SY\" } }","title":"Request"},{"location":"SecurityAgentAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } }","title":"Response"},{"location":"SecurityAgentAPI/#validate-method","text":"Validates Token.","title":"validate method"},{"location":"SecurityAgentAPI/#description_2","text":"Checks whether the token is valid and properly signed.","title":"Description"},{"location":"SecurityAgentAPI/#parameters_1","text":"Name Type Description params object params.token string Token that will be validated","title":"Parameters"},{"location":"SecurityAgentAPI/#result_1","text":"Name Type Description result object result.valid boolean Tells whether token is signature is correct","title":"Result"},{"location":"SecurityAgentAPI/#errors_1","text":"Code Message Description","title":"Errors"},{"location":"SecurityAgentAPI/#example_1","text":"","title":"Example"},{"location":"SecurityAgentAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.validate\", \"params\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } }","title":"Request"},{"location":"SecurityAgentAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"valid\": false } }","title":"Response"},{"location":"SparkAPI/","text":"Spark API Version: 1.0 Status: :black_circle::white_circle::white_circle: Spark interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Spark interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Spark JSON-RPC interface. Methods The following methods are provided by the Spark interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Spark interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Errors Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden ) Errors Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Name Type Description (property) number Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Spark interface: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Event Description statechange Signals a state change of the service urlchange event Signals a URL change in the browser. Parameters Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange event Signals a visibility change of the browser. Parameters Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } } statechange event Signals a state change of the service. Parameters Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"SparkAPI"},{"location":"SparkAPI/#spark-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Spark interface for Thunder framework.","title":"Spark API"},{"location":"SparkAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"SparkAPI/#introduction","text":"","title":"Introduction"},{"location":"SparkAPI/#scope","text":"This document describes purpose and functionality of the Spark interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"SparkAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"SparkAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"SparkAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"SparkAPI/#description","text":"Spark JSON-RPC interface.","title":"Description"},{"location":"SparkAPI/#methods","text":"The following methods are provided by the Spark interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"SparkAPI/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"SparkAPI/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"SparkAPI/#parameters","text":"Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"SparkAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"SparkAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"SparkAPI/#example","text":"","title":"Example"},{"location":"SparkAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"SparkAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"SparkAPI/#properties","text":"The following properties are provided by the Spark interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"SparkAPI/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"SparkAPI/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"SparkAPI/#errors_1","text":"Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"SparkAPI/#example_1","text":"","title":"Example"},{"location":"SparkAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\" }","title":"Get Request"},{"location":"SparkAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"SparkAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"SparkAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"SparkAPI/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"SparkAPI/#value_1","text":"Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden )","title":"Value"},{"location":"SparkAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"SparkAPI/#example_2","text":"","title":"Example"},{"location":"SparkAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\" }","title":"Get Request"},{"location":"SparkAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"SparkAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"SparkAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"SparkAPI/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"SparkAPI/#value_2","text":"Name Type Description (property) number Current number of frames per second the browser is rendering","title":"Value"},{"location":"SparkAPI/#example_3","text":"","title":"Example"},{"location":"SparkAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.fps\" }","title":"Get Request"},{"location":"SparkAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"SparkAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"SparkAPI/#value_3","text":"Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended )","title":"Value"},{"location":"SparkAPI/#example_4","text":"","title":"Example"},{"location":"SparkAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\" }","title":"Get Request"},{"location":"SparkAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"SparkAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"SparkAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"SparkAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Spark interface: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Event Description statechange Signals a state change of the service","title":"Notifications"},{"location":"SparkAPI/#urlchange-event","text":"Signals a URL change in the browser.","title":"urlchange event"},{"location":"SparkAPI/#parameters_1","text":"Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false)","title":"Parameters"},{"location":"SparkAPI/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Example"},{"location":"SparkAPI/#visibilitychange-event","text":"Signals a visibility change of the browser.","title":"visibilitychange event"},{"location":"SparkAPI/#parameters_2","text":"Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"SparkAPI/#example_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Example"},{"location":"SparkAPI/#statechange-event","text":"Signals a state change of the service.","title":"statechange event"},{"location":"SparkAPI/#parameters_3","text":"Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"SparkAPI/#example_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"Example"},{"location":"SparkPlugin/","text":"Spark Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: Spark plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Spark plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Spark plugin provides web browsing functionality based on the Spark engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Spark ) classname string Class name: Spark locator string Library name: libWPEFrameworkSpark.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.url string (optional) The URL that is loaded upon starting the browser Methods The following methods are provided by the Spark plugin: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Spark plugin: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Errors Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden ) Errors Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Name Type Description (property) number Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Spark plugin: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Event Description statechange Signals a state change of the service urlchange event Signals a URL change in the browser. Parameters Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange event Signals a visibility change of the browser. Parameters Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } } statechange event Signals a state change of the service. Parameters Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"SparkPlugin"},{"location":"SparkPlugin/#spark-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Spark plugin for Thunder framework.","title":"Spark Plugin"},{"location":"SparkPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"SparkPlugin/#introduction","text":"","title":"Introduction"},{"location":"SparkPlugin/#scope","text":"This document describes purpose and functionality of the Spark plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"SparkPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"SparkPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"SparkPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"SparkPlugin/#description","text":"The Spark plugin provides web browsing functionality based on the Spark engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"SparkPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Spark ) classname string Class name: Spark locator string Library name: libWPEFrameworkSpark.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.url string (optional) The URL that is loaded upon starting the browser","title":"Configuration"},{"location":"SparkPlugin/#methods","text":"The following methods are provided by the Spark plugin: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"SparkPlugin/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"SparkPlugin/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"SparkPlugin/#parameters","text":"Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"SparkPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"SparkPlugin/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"SparkPlugin/#example","text":"","title":"Example"},{"location":"SparkPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"SparkPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"SparkPlugin/#properties","text":"The following properties are provided by the Spark plugin: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps RO Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"SparkPlugin/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"SparkPlugin/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"SparkPlugin/#errors_1","text":"Code Message Description 15 ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"SparkPlugin/#example_1","text":"","title":"Example"},{"location":"SparkPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\" }","title":"Get Request"},{"location":"SparkPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"SparkPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"SparkPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"SparkPlugin/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"SparkPlugin/#value_1","text":"Name Type Description (property) string Current browser visibility (must be one of the following: visible , hidden )","title":"Value"},{"location":"SparkPlugin/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"SparkPlugin/#example_2","text":"","title":"Example"},{"location":"SparkPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\" }","title":"Get Request"},{"location":"SparkPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"SparkPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"SparkPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"SparkPlugin/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"SparkPlugin/#value_2","text":"Name Type Description (property) number Current number of frames per second the browser is rendering","title":"Value"},{"location":"SparkPlugin/#example_3","text":"","title":"Example"},{"location":"SparkPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.fps\" }","title":"Get Request"},{"location":"SparkPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"SparkPlugin/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"SparkPlugin/#value_3","text":"Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended )","title":"Value"},{"location":"SparkPlugin/#example_4","text":"","title":"Example"},{"location":"SparkPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\" }","title":"Get Request"},{"location":"SparkPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"SparkPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"SparkPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"SparkPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Spark plugin: Browser interface events: Event Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Event Description statechange Signals a state change of the service","title":"Notifications"},{"location":"SparkPlugin/#urlchange-event","text":"Signals a URL change in the browser.","title":"urlchange event"},{"location":"SparkPlugin/#parameters_1","text":"Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false)","title":"Parameters"},{"location":"SparkPlugin/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Example"},{"location":"SparkPlugin/#visibilitychange-event","text":"Signals a visibility change of the browser.","title":"visibilitychange event"},{"location":"SparkPlugin/#parameters_2","text":"Name Type Description params object params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"SparkPlugin/#example_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Example"},{"location":"SparkPlugin/#statechange-event","text":"Signals a state change of the service.","title":"statechange event"},{"location":"SparkPlugin/#parameters_3","text":"Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"SparkPlugin/#example_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"Example"},{"location":"StateControlAPI/","text":"StateControl API Version: 1.0 Status: :black_circle::white_circle::white_circle: StateControl interface for Thunder framework. Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the StateControl interface. It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description StateControl JSON-RPC interface. Properties The following properties are provided by the StateControl interface: StateControl interface properties: Property Description state Running state of the service state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the StateControl interface: StateControl interface events: Event Description statechange Signals a state change of the service statechange event Signals a state change of the service. Parameters Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"StateControlAPI"},{"location":"StateControlAPI/#statecontrol-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: StateControl interface for Thunder framework.","title":"StateControl API"},{"location":"StateControlAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"StateControlAPI/#introduction","text":"","title":"Introduction"},{"location":"StateControlAPI/#scope","text":"This document describes purpose and functionality of the StateControl interface. It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"StateControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"StateControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"StateControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"StateControlAPI/#description","text":"StateControl JSON-RPC interface.","title":"Description"},{"location":"StateControlAPI/#properties","text":"The following properties are provided by the StateControl interface: StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"StateControlAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"StateControlAPI/#value","text":"Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended )","title":"Value"},{"location":"StateControlAPI/#example","text":"","title":"Example"},{"location":"StateControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.state\" }","title":"Get Request"},{"location":"StateControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"StateControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"StateControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"StateControlAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the StateControl interface: StateControl interface events: Event Description statechange Signals a state change of the service","title":"Notifications"},{"location":"StateControlAPI/#statechange-event","text":"Signals a state change of the service.","title":"statechange event"},{"location":"StateControlAPI/#parameters","text":"Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"StateControlAPI/#example_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"Example"},{"location":"StreamerAPI/","text":"Streamer API Version: 1.0 Status: :black_circle::white_circle::white_circle: Streamer interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Streamer interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Streamer JSON-RPC interface. Methods The following methods are provided by the Streamer interface: Streamer interface methods: Method Description create Creates a stream instance destroy Destroys a stream instance load Loads a source into a stream attach Attaches a decoder to the streamer detach Detaches a decoder from the streamer create method Creates a stream instance. Parameters Name Type Description params object params.type string Stream type (must be one of the following: undefined , cable , handheld , satellite , terrestrial , dab , rf , unicast , multicast , ip ) Result Name Type Description result number Stream ID Errors Code Message Description 30 ERROR_BAD_REQUEST Invalid stream type given 2 ERROR_UNAVAILABLE Fronted of the selected stream type is not available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.create\", \"params\": { \"type\": \"cable\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } destroy method Destroys a stream instance. Parameters Name Type Description params object params.id number Stream ID Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.destroy\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } load method Loads a source into a stream. Also see: statechange Parameters Name Type Description params object params.id number Stream ID params.location string Location of the source to load Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 15 ERROR_INCORRECT_URL Invalid location given 1 ERROR_GENERAL Undefined loading error 5 ERROR_ILLEGAL_STATE Stream is not in a valid state Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.load\", \"params\": { \"id\": 0, \"location\": \"http://example.com/sample.m3u8\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } attach method Attaches a decoder to the streamer. Parameters Name Type Description params object params.id number Stream ID Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 12 ERROR_INPROGRESS Decoder already attached 5 ERROR_ILLEGAL_STATE Stream is not in a valid state 2 ERROR_UNAVAILABLE No free decoders available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.attach\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } detach method Detaches a decoder from the streamer. Parameters Name Type Description params object params.id number Stream ID Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Stream is not in a valid state or decoder not attached 12 ERROR_INPROGRESS Decoder is in use Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.detach\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Streamer interface: Streamer interface properties: Property Description speed Playback speed position Stream position window Stream playback window speeds RO Speeds supported by the stream player streams RO All created stream instance IDs type RO Type of a stream drm RO DRM type associated with a stream state RO Current state of a stream metadata RO Metadata associated with the stream error RO Most recent error code elements RO Stream elements speed property Provides access to the playback speed. Description Speed (in percentage) Also see: statechange Value Name Type Description (property) number Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speed@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\", \"params\": 100 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } position property Provides access to the stream position. Value Name Type Description (property) number Position (in milliseconds) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.position@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 60000 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\", \"params\": 60000 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } window property Provides access to the stream playback window. Value Name Type Description (property) object Geometry of the window (property).x number Horizontal position of the window (in pixels) (property).y number Vertical position of the window (in pixels) (property).width number Width of the window (in pixels) (property).height number Height of the window (in pixels) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.window@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } speeds property Provides access to the speeds supported by the stream player. This property is read-only . Value Name Type Description (property) array Supported speeds (in percentage) (property)[#] integer (speeds in percentage) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speeds@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speeds@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 100, -100, 200, -200, 400, -400 ] } streams property Provides access to the all created stream instance IDs. This property is read-only . Value Name Type Description (property) array Stream IDs (property)[#] number (a stream ID) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.streams\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 1, 2, 3 ] } type property Provides access to the type of a stream. This property is read-only . Value Name Type Description (property) string Stream type (must be one of the following: undefined , cable , handheld , satellite , terrestrial , dab , rf , unicast , multicast , ip ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.type@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.type@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"cable\" } drm property Provides access to the DRM type associated with a stream. This property is read-only . Also see: drmchange Value Name Type Description (property) string DRM used (must be one of the following: none , clearkey , playready , widevine , unknown ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.drm@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.drm@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"clearkey\" } state property Provides access to the current state of a stream. This property is read-only . Also see: statechange Value Name Type Description (property) string Stream state (must be one of the following: idle , loading , prepared , controlled , error ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.state@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.state@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"controlled\" } metadata property Provides access to the metadata associated with the stream. This property is read-only . Value Name Type Description (property) string Custom implementation-specific metadata The stream id argument shall be passed as the index to the property, e.g. Streamer.1.metadata@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.metadata@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } error property Provides access to the most recent error code. This property is read-only . Value Name Type Description (property) number Custom implementation-specific error code value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.error@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.error@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } elements property Provides access to the stream elements. This property is read-only . Value Name Type Description (property) array List of stream elements (property)[#] object Stream element (property)[#].type string Stream element type (must be one of the following: video , audio , subtitles , teletext , data ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.elements@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 2 ERROR_UNAVAILABLE Stream elements retrieval not supported Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.elements@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\" } ] } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Streamer interface: Streamer interface events: Event Description statechange Notifies of stream state change timeupdate Notifies of stream position change stream Notifies of a custom stream incident player Notifies of a custom player incident drm Notifies of a custom DRM-related incident statechange event Notifies of stream state change. Parameters Name Type Description params object params.state string Stream state (must be one of the following: idle , loading , prepared , controlled , error ) The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.statechange\", \"params\": { \"state\": \"controlled\" } } timeupdate event Notifies of stream position change. This event is fired every second to indicate the current stream position. It does not fire if the stream is paused (i.e. speed is set to 0). Parameters Name Type Description params object params.time number Stream position in miliseconds The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.timeupdate\", \"params\": { \"time\": 30000 } } stream event Notifies of a custom stream incident. Parameters Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.stream\", \"params\": { \"code\": 1 } } player event Notifies of a custom player incident. Parameters Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.player\", \"params\": { \"code\": 1 } } drm event Notifies of a custom DRM-related incident. Parameters Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.drm\", \"params\": { \"code\": 1 } }","title":"StreamerAPI"},{"location":"StreamerAPI/#streamer-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Streamer interface for Thunder framework.","title":"Streamer API"},{"location":"StreamerAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"StreamerAPI/#introduction","text":"","title":"Introduction"},{"location":"StreamerAPI/#scope","text":"This document describes purpose and functionality of the Streamer interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"StreamerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"StreamerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"StreamerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"StreamerAPI/#description","text":"Streamer JSON-RPC interface.","title":"Description"},{"location":"StreamerAPI/#methods","text":"The following methods are provided by the Streamer interface: Streamer interface methods: Method Description create Creates a stream instance destroy Destroys a stream instance load Loads a source into a stream attach Attaches a decoder to the streamer detach Detaches a decoder from the streamer","title":"Methods"},{"location":"StreamerAPI/#create-method","text":"Creates a stream instance.","title":"create method"},{"location":"StreamerAPI/#parameters","text":"Name Type Description params object params.type string Stream type (must be one of the following: undefined , cable , handheld , satellite , terrestrial , dab , rf , unicast , multicast , ip )","title":"Parameters"},{"location":"StreamerAPI/#result","text":"Name Type Description result number Stream ID","title":"Result"},{"location":"StreamerAPI/#errors","text":"Code Message Description 30 ERROR_BAD_REQUEST Invalid stream type given 2 ERROR_UNAVAILABLE Fronted of the selected stream type is not available","title":"Errors"},{"location":"StreamerAPI/#example","text":"","title":"Example"},{"location":"StreamerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.create\", \"params\": { \"type\": \"cable\" } }","title":"Request"},{"location":"StreamerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"StreamerAPI/#destroy-method","text":"Destroys a stream instance.","title":"destroy method"},{"location":"StreamerAPI/#parameters_1","text":"Name Type Description params object params.id number Stream ID","title":"Parameters"},{"location":"StreamerAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"StreamerAPI/#errors_1","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerAPI/#example_1","text":"","title":"Example"},{"location":"StreamerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.destroy\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"StreamerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"StreamerAPI/#load-method","text":"Loads a source into a stream. Also see: statechange","title":"load method"},{"location":"StreamerAPI/#parameters_2","text":"Name Type Description params object params.id number Stream ID params.location string Location of the source to load","title":"Parameters"},{"location":"StreamerAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"StreamerAPI/#errors_2","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 15 ERROR_INCORRECT_URL Invalid location given 1 ERROR_GENERAL Undefined loading error 5 ERROR_ILLEGAL_STATE Stream is not in a valid state","title":"Errors"},{"location":"StreamerAPI/#example_2","text":"","title":"Example"},{"location":"StreamerAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.load\", \"params\": { \"id\": 0, \"location\": \"http://example.com/sample.m3u8\" } }","title":"Request"},{"location":"StreamerAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"StreamerAPI/#attach-method","text":"Attaches a decoder to the streamer.","title":"attach method"},{"location":"StreamerAPI/#parameters_3","text":"Name Type Description params object params.id number Stream ID","title":"Parameters"},{"location":"StreamerAPI/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"StreamerAPI/#errors_3","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 12 ERROR_INPROGRESS Decoder already attached 5 ERROR_ILLEGAL_STATE Stream is not in a valid state 2 ERROR_UNAVAILABLE No free decoders available","title":"Errors"},{"location":"StreamerAPI/#example_3","text":"","title":"Example"},{"location":"StreamerAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.attach\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"StreamerAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"StreamerAPI/#detach-method","text":"Detaches a decoder from the streamer.","title":"detach method"},{"location":"StreamerAPI/#parameters_4","text":"Name Type Description params object params.id number Stream ID","title":"Parameters"},{"location":"StreamerAPI/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"StreamerAPI/#errors_4","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Stream is not in a valid state or decoder not attached 12 ERROR_INPROGRESS Decoder is in use","title":"Errors"},{"location":"StreamerAPI/#example_4","text":"","title":"Example"},{"location":"StreamerAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.detach\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"StreamerAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"StreamerAPI/#properties","text":"The following properties are provided by the Streamer interface: Streamer interface properties: Property Description speed Playback speed position Stream position window Stream playback window speeds RO Speeds supported by the stream player streams RO All created stream instance IDs type RO Type of a stream drm RO DRM type associated with a stream state RO Current state of a stream metadata RO Metadata associated with the stream error RO Most recent error code elements RO Stream elements","title":"Properties"},{"location":"StreamerAPI/#speed-property","text":"Provides access to the playback speed.","title":"speed property"},{"location":"StreamerAPI/#description_1","text":"Speed (in percentage) Also see: statechange","title":"Description"},{"location":"StreamerAPI/#value","text":"Name Type Description (property) number Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speed@0 .","title":"Value"},{"location":"StreamerAPI/#errors_5","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"StreamerAPI/#example_5","text":"","title":"Example"},{"location":"StreamerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 }","title":"Get Response"},{"location":"StreamerAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\", \"params\": 100 }","title":"Set Request"},{"location":"StreamerAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"StreamerAPI/#position-property","text":"Provides access to the stream position.","title":"position property"},{"location":"StreamerAPI/#value_1","text":"Name Type Description (property) number Position (in milliseconds) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.position@0 .","title":"Value"},{"location":"StreamerAPI/#errors_6","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"StreamerAPI/#example_6","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 60000 }","title":"Get Response"},{"location":"StreamerAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\", \"params\": 60000 }","title":"Set Request"},{"location":"StreamerAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"StreamerAPI/#window-property","text":"Provides access to the stream playback window.","title":"window property"},{"location":"StreamerAPI/#value_2","text":"Name Type Description (property) object Geometry of the window (property).x number Horizontal position of the window (in pixels) (property).y number Vertical position of the window (in pixels) (property).width number Width of the window (in pixels) (property).height number Height of the window (in pixels) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.window@0 .","title":"Value"},{"location":"StreamerAPI/#errors_7","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"StreamerAPI/#example_7","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } }","title":"Get Response"},{"location":"StreamerAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } }","title":"Set Request"},{"location":"StreamerAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"StreamerAPI/#speeds-property","text":"Provides access to the speeds supported by the stream player. This property is read-only .","title":"speeds property"},{"location":"StreamerAPI/#value_3","text":"Name Type Description (property) array Supported speeds (in percentage) (property)[#] integer (speeds in percentage) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speeds@0 .","title":"Value"},{"location":"StreamerAPI/#errors_8","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"StreamerAPI/#example_8","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speeds@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 100, -100, 200, -200, 400, -400 ] }","title":"Get Response"},{"location":"StreamerAPI/#streams-property","text":"Provides access to the all created stream instance IDs. This property is read-only .","title":"streams property"},{"location":"StreamerAPI/#value_4","text":"Name Type Description (property) array Stream IDs (property)[#] number (a stream ID)","title":"Value"},{"location":"StreamerAPI/#example_9","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.streams\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 1, 2, 3 ] }","title":"Get Response"},{"location":"StreamerAPI/#type-property","text":"Provides access to the type of a stream. This property is read-only .","title":"type property"},{"location":"StreamerAPI/#value_5","text":"Name Type Description (property) string Stream type (must be one of the following: undefined , cable , handheld , satellite , terrestrial , dab , rf , unicast , multicast , ip ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.type@0 .","title":"Value"},{"location":"StreamerAPI/#errors_9","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerAPI/#example_10","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.type@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"cable\" }","title":"Get Response"},{"location":"StreamerAPI/#drm-property","text":"Provides access to the DRM type associated with a stream. This property is read-only . Also see: drmchange","title":"drm property"},{"location":"StreamerAPI/#value_6","text":"Name Type Description (property) string DRM used (must be one of the following: none , clearkey , playready , widevine , unknown ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.drm@0 .","title":"Value"},{"location":"StreamerAPI/#errors_10","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerAPI/#example_11","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.drm@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"clearkey\" }","title":"Get Response"},{"location":"StreamerAPI/#state-property","text":"Provides access to the current state of a stream. This property is read-only . Also see: statechange","title":"state property"},{"location":"StreamerAPI/#value_7","text":"Name Type Description (property) string Stream state (must be one of the following: idle , loading , prepared , controlled , error ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.state@0 .","title":"Value"},{"location":"StreamerAPI/#errors_11","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerAPI/#example_12","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.state@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"controlled\" }","title":"Get Response"},{"location":"StreamerAPI/#metadata-property","text":"Provides access to the metadata associated with the stream. This property is read-only .","title":"metadata property"},{"location":"StreamerAPI/#value_8","text":"Name Type Description (property) string Custom implementation-specific metadata The stream id argument shall be passed as the index to the property, e.g. Streamer.1.metadata@0 .","title":"Value"},{"location":"StreamerAPI/#errors_12","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerAPI/#example_13","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.metadata@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"StreamerAPI/#error-property","text":"Provides access to the most recent error code. This property is read-only .","title":"error property"},{"location":"StreamerAPI/#value_9","text":"Name Type Description (property) number Custom implementation-specific error code value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.error@0 .","title":"Value"},{"location":"StreamerAPI/#errors_13","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerAPI/#example_14","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.error@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"StreamerAPI/#elements-property","text":"Provides access to the stream elements. This property is read-only .","title":"elements property"},{"location":"StreamerAPI/#value_10","text":"Name Type Description (property) array List of stream elements (property)[#] object Stream element (property)[#].type string Stream element type (must be one of the following: video , audio , subtitles , teletext , data ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.elements@0 .","title":"Value"},{"location":"StreamerAPI/#errors_14","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 2 ERROR_UNAVAILABLE Stream elements retrieval not supported","title":"Errors"},{"location":"StreamerAPI/#example_15","text":"","title":"Example"},{"location":"StreamerAPI/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.elements@0\" }","title":"Get Request"},{"location":"StreamerAPI/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\" } ] }","title":"Get Response"},{"location":"StreamerAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Streamer interface: Streamer interface events: Event Description statechange Notifies of stream state change timeupdate Notifies of stream position change stream Notifies of a custom stream incident player Notifies of a custom player incident drm Notifies of a custom DRM-related incident","title":"Notifications"},{"location":"StreamerAPI/#statechange-event","text":"Notifies of stream state change.","title":"statechange event"},{"location":"StreamerAPI/#parameters_5","text":"Name Type Description params object params.state string Stream state (must be one of the following: idle , loading , prepared , controlled , error ) The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerAPI/#example_16","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.statechange\", \"params\": { \"state\": \"controlled\" } }","title":"Example"},{"location":"StreamerAPI/#timeupdate-event","text":"Notifies of stream position change. This event is fired every second to indicate the current stream position. It does not fire if the stream is paused (i.e. speed is set to 0).","title":"timeupdate event"},{"location":"StreamerAPI/#parameters_6","text":"Name Type Description params object params.time number Stream position in miliseconds The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerAPI/#example_17","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.timeupdate\", \"params\": { \"time\": 30000 } }","title":"Example"},{"location":"StreamerAPI/#stream-event","text":"Notifies of a custom stream incident.","title":"stream event"},{"location":"StreamerAPI/#parameters_7","text":"Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerAPI/#example_18","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.stream\", \"params\": { \"code\": 1 } }","title":"Example"},{"location":"StreamerAPI/#player-event","text":"Notifies of a custom player incident.","title":"player event"},{"location":"StreamerAPI/#parameters_8","text":"Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerAPI/#example_19","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.player\", \"params\": { \"code\": 1 } }","title":"Example"},{"location":"StreamerAPI/#drm-event","text":"Notifies of a custom DRM-related incident.","title":"drm event"},{"location":"StreamerAPI/#parameters_9","text":"Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerAPI/#example_20","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.drm\", \"params\": { \"code\": 1 } }","title":"Example"},{"location":"StreamerPlugin/","text":"Streamer Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: Streamer plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Streamer plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description . The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Streamer ) classname string Class name: Streamer locator string Library name: libWPEFrameworkStreamer.so autostart boolean Determines if the plugin shall be started automatically along with the framework Methods The following methods are provided by the Streamer plugin: Streamer interface methods: Method Description create Creates a stream instance destroy Destroys a stream instance load Loads a source into a stream attach Attaches a decoder to the streamer detach Detaches a decoder from the streamer create method Creates a stream instance. Parameters Name Type Description params object params.type string Stream type (must be one of the following: undefined , cable , handheld , satellite , terrestrial , dab , rf , unicast , multicast , ip ) Result Name Type Description result number Stream ID Errors Code Message Description 30 ERROR_BAD_REQUEST Invalid stream type given 2 ERROR_UNAVAILABLE Fronted of the selected stream type is not available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.create\", \"params\": { \"type\": \"cable\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } destroy method Destroys a stream instance. Parameters Name Type Description params object params.id number Stream ID Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.destroy\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } load method Loads a source into a stream. Also see: statechange Parameters Name Type Description params object params.id number Stream ID params.location string Location of the source to load Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 15 ERROR_INCORRECT_URL Invalid location given 1 ERROR_GENERAL Undefined loading error 5 ERROR_ILLEGAL_STATE Stream is not in a valid state Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.load\", \"params\": { \"id\": 0, \"location\": \"http://example.com/sample.m3u8\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } attach method Attaches a decoder to the streamer. Parameters Name Type Description params object params.id number Stream ID Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 12 ERROR_INPROGRESS Decoder already attached 5 ERROR_ILLEGAL_STATE Stream is not in a valid state 2 ERROR_UNAVAILABLE No free decoders available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.attach\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } detach method Detaches a decoder from the streamer. Parameters Name Type Description params object params.id number Stream ID Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Stream is not in a valid state or decoder not attached 12 ERROR_INPROGRESS Decoder is in use Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.detach\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Streamer plugin: Streamer interface properties: Property Description speed Playback speed position Stream position window Stream playback window speeds RO Speeds supported by the stream player streams RO All created stream instance IDs type RO Type of a stream drm RO DRM type associated with a stream state RO Current state of a stream metadata RO Metadata associated with the stream error RO Most recent error code elements RO Stream elements speed property Provides access to the playback speed. Description Speed (in percentage) Also see: statechange Value Name Type Description (property) number Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speed@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\", \"params\": 100 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } position property Provides access to the stream position. Value Name Type Description (property) number Position (in milliseconds) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.position@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 60000 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\", \"params\": 60000 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } window property Provides access to the stream playback window. Value Name Type Description (property) object Geometry of the window (property).x number Horizontal position of the window (in pixels) (property).y number Vertical position of the window (in pixels) (property).width number Width of the window (in pixels) (property).height number Height of the window (in pixels) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.window@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } speeds property Provides access to the speeds supported by the stream player. This property is read-only . Value Name Type Description (property) array Supported speeds (in percentage) (property)[#] integer (speeds in percentage) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speeds@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speeds@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 100, -100, 200, -200, 400, -400 ] } streams property Provides access to the all created stream instance IDs. This property is read-only . Value Name Type Description (property) array Stream IDs (property)[#] number (a stream ID) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.streams\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 1, 2, 3 ] } type property Provides access to the type of a stream. This property is read-only . Value Name Type Description (property) string Stream type (must be one of the following: undefined , cable , handheld , satellite , terrestrial , dab , rf , unicast , multicast , ip ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.type@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.type@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"cable\" } drm property Provides access to the DRM type associated with a stream. This property is read-only . Also see: drmchange Value Name Type Description (property) string DRM used (must be one of the following: none , clearkey , playready , widevine , unknown ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.drm@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.drm@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"clearkey\" } state property Provides access to the current state of a stream. This property is read-only . Also see: statechange Value Name Type Description (property) string Stream state (must be one of the following: idle , loading , prepared , controlled , error ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.state@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.state@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"controlled\" } metadata property Provides access to the metadata associated with the stream. This property is read-only . Value Name Type Description (property) string Custom implementation-specific metadata The stream id argument shall be passed as the index to the property, e.g. Streamer.1.metadata@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.metadata@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } error property Provides access to the most recent error code. This property is read-only . Value Name Type Description (property) number Custom implementation-specific error code value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.error@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.error@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } elements property Provides access to the stream elements. This property is read-only . Value Name Type Description (property) array List of stream elements (property)[#] object Stream element (property)[#].type string Stream element type (must be one of the following: video , audio , subtitles , teletext , data ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.elements@0 . Errors Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 2 ERROR_UNAVAILABLE Stream elements retrieval not supported Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.elements@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\" } ] } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Streamer plugin: Streamer interface events: Event Description statechange Notifies of stream state change timeupdate Notifies of stream position change stream Notifies of a custom stream incident player Notifies of a custom player incident drm Notifies of a custom DRM-related incident statechange event Notifies of stream state change. Parameters Name Type Description params object params.state string Stream state (must be one of the following: idle , loading , prepared , controlled , error ) The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.statechange\", \"params\": { \"state\": \"controlled\" } } timeupdate event Notifies of stream position change. This event is fired every second to indicate the current stream position. It does not fire if the stream is paused (i.e. speed is set to 0). Parameters Name Type Description params object params.time number Stream position in miliseconds The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.timeupdate\", \"params\": { \"time\": 30000 } } stream event Notifies of a custom stream incident. Parameters Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.stream\", \"params\": { \"code\": 1 } } player event Notifies of a custom player incident. Parameters Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.player\", \"params\": { \"code\": 1 } } drm event Notifies of a custom DRM-related incident. Parameters Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 . Example { \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.drm\", \"params\": { \"code\": 1 } }","title":"StreamerPlugin"},{"location":"StreamerPlugin/#streamer-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: Streamer plugin for Thunder framework.","title":"Streamer Plugin"},{"location":"StreamerPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"StreamerPlugin/#introduction","text":"","title":"Introduction"},{"location":"StreamerPlugin/#scope","text":"This document describes purpose and functionality of the Streamer plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"StreamerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"StreamerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"StreamerPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"StreamerPlugin/#description","text":". The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"StreamerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Streamer ) classname string Class name: Streamer locator string Library name: libWPEFrameworkStreamer.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"Configuration"},{"location":"StreamerPlugin/#methods","text":"The following methods are provided by the Streamer plugin: Streamer interface methods: Method Description create Creates a stream instance destroy Destroys a stream instance load Loads a source into a stream attach Attaches a decoder to the streamer detach Detaches a decoder from the streamer","title":"Methods"},{"location":"StreamerPlugin/#create-method","text":"Creates a stream instance.","title":"create method"},{"location":"StreamerPlugin/#parameters","text":"Name Type Description params object params.type string Stream type (must be one of the following: undefined , cable , handheld , satellite , terrestrial , dab , rf , unicast , multicast , ip )","title":"Parameters"},{"location":"StreamerPlugin/#result","text":"Name Type Description result number Stream ID","title":"Result"},{"location":"StreamerPlugin/#errors","text":"Code Message Description 30 ERROR_BAD_REQUEST Invalid stream type given 2 ERROR_UNAVAILABLE Fronted of the selected stream type is not available","title":"Errors"},{"location":"StreamerPlugin/#example","text":"","title":"Example"},{"location":"StreamerPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.create\", \"params\": { \"type\": \"cable\" } }","title":"Request"},{"location":"StreamerPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"StreamerPlugin/#destroy-method","text":"Destroys a stream instance.","title":"destroy method"},{"location":"StreamerPlugin/#parameters_1","text":"Name Type Description params object params.id number Stream ID","title":"Parameters"},{"location":"StreamerPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"StreamerPlugin/#errors_1","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerPlugin/#example_1","text":"","title":"Example"},{"location":"StreamerPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.destroy\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"StreamerPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"StreamerPlugin/#load-method","text":"Loads a source into a stream. Also see: statechange","title":"load method"},{"location":"StreamerPlugin/#parameters_2","text":"Name Type Description params object params.id number Stream ID params.location string Location of the source to load","title":"Parameters"},{"location":"StreamerPlugin/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"StreamerPlugin/#errors_2","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 15 ERROR_INCORRECT_URL Invalid location given 1 ERROR_GENERAL Undefined loading error 5 ERROR_ILLEGAL_STATE Stream is not in a valid state","title":"Errors"},{"location":"StreamerPlugin/#example_2","text":"","title":"Example"},{"location":"StreamerPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.load\", \"params\": { \"id\": 0, \"location\": \"http://example.com/sample.m3u8\" } }","title":"Request"},{"location":"StreamerPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"StreamerPlugin/#attach-method","text":"Attaches a decoder to the streamer.","title":"attach method"},{"location":"StreamerPlugin/#parameters_3","text":"Name Type Description params object params.id number Stream ID","title":"Parameters"},{"location":"StreamerPlugin/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"StreamerPlugin/#errors_3","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 12 ERROR_INPROGRESS Decoder already attached 5 ERROR_ILLEGAL_STATE Stream is not in a valid state 2 ERROR_UNAVAILABLE No free decoders available","title":"Errors"},{"location":"StreamerPlugin/#example_3","text":"","title":"Example"},{"location":"StreamerPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.attach\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"StreamerPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"StreamerPlugin/#detach-method","text":"Detaches a decoder from the streamer.","title":"detach method"},{"location":"StreamerPlugin/#parameters_4","text":"Name Type Description params object params.id number Stream ID","title":"Parameters"},{"location":"StreamerPlugin/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"StreamerPlugin/#errors_4","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Stream is not in a valid state or decoder not attached 12 ERROR_INPROGRESS Decoder is in use","title":"Errors"},{"location":"StreamerPlugin/#example_4","text":"","title":"Example"},{"location":"StreamerPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.detach\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"StreamerPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"StreamerPlugin/#properties","text":"The following properties are provided by the Streamer plugin: Streamer interface properties: Property Description speed Playback speed position Stream position window Stream playback window speeds RO Speeds supported by the stream player streams RO All created stream instance IDs type RO Type of a stream drm RO DRM type associated with a stream state RO Current state of a stream metadata RO Metadata associated with the stream error RO Most recent error code elements RO Stream elements","title":"Properties"},{"location":"StreamerPlugin/#speed-property","text":"Provides access to the playback speed.","title":"speed property"},{"location":"StreamerPlugin/#description_1","text":"Speed (in percentage) Also see: statechange","title":"Description"},{"location":"StreamerPlugin/#value","text":"Name Type Description (property) number Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speed@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_5","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"StreamerPlugin/#example_5","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 }","title":"Get Response"},{"location":"StreamerPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\", \"params\": 100 }","title":"Set Request"},{"location":"StreamerPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"StreamerPlugin/#position-property","text":"Provides access to the stream position.","title":"position property"},{"location":"StreamerPlugin/#value_1","text":"Name Type Description (property) number Position (in milliseconds) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.position@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_6","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"StreamerPlugin/#example_6","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 60000 }","title":"Get Response"},{"location":"StreamerPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\", \"params\": 60000 }","title":"Set Request"},{"location":"StreamerPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"StreamerPlugin/#window-property","text":"Provides access to the stream playback window.","title":"window property"},{"location":"StreamerPlugin/#value_2","text":"Name Type Description (property) object Geometry of the window (property).x number Horizontal position of the window (in pixels) (property).y number Vertical position of the window (in pixels) (property).width number Width of the window (in pixels) (property).height number Height of the window (in pixels) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.window@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_7","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"StreamerPlugin/#example_7","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } }","title":"Get Response"},{"location":"StreamerPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } }","title":"Set Request"},{"location":"StreamerPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"StreamerPlugin/#speeds-property","text":"Provides access to the speeds supported by the stream player. This property is read-only .","title":"speeds property"},{"location":"StreamerPlugin/#value_3","text":"Name Type Description (property) array Supported speeds (in percentage) (property)[#] integer (speeds in percentage) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speeds@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_8","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 5 ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"StreamerPlugin/#example_8","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speeds@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 100, -100, 200, -200, 400, -400 ] }","title":"Get Response"},{"location":"StreamerPlugin/#streams-property","text":"Provides access to the all created stream instance IDs. This property is read-only .","title":"streams property"},{"location":"StreamerPlugin/#value_4","text":"Name Type Description (property) array Stream IDs (property)[#] number (a stream ID)","title":"Value"},{"location":"StreamerPlugin/#example_9","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.streams\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 1, 2, 3 ] }","title":"Get Response"},{"location":"StreamerPlugin/#type-property","text":"Provides access to the type of a stream. This property is read-only .","title":"type property"},{"location":"StreamerPlugin/#value_5","text":"Name Type Description (property) string Stream type (must be one of the following: undefined , cable , handheld , satellite , terrestrial , dab , rf , unicast , multicast , ip ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.type@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_9","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerPlugin/#example_10","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.type@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"cable\" }","title":"Get Response"},{"location":"StreamerPlugin/#drm-property","text":"Provides access to the DRM type associated with a stream. This property is read-only . Also see: drmchange","title":"drm property"},{"location":"StreamerPlugin/#value_6","text":"Name Type Description (property) string DRM used (must be one of the following: none , clearkey , playready , widevine , unknown ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.drm@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_10","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerPlugin/#example_11","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.drm@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"clearkey\" }","title":"Get Response"},{"location":"StreamerPlugin/#state-property","text":"Provides access to the current state of a stream. This property is read-only . Also see: statechange","title":"state property"},{"location":"StreamerPlugin/#value_7","text":"Name Type Description (property) string Stream state (must be one of the following: idle , loading , prepared , controlled , error ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.state@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_11","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerPlugin/#example_12","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.state@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"controlled\" }","title":"Get Response"},{"location":"StreamerPlugin/#metadata-property","text":"Provides access to the metadata associated with the stream. This property is read-only .","title":"metadata property"},{"location":"StreamerPlugin/#value_8","text":"Name Type Description (property) string Custom implementation-specific metadata The stream id argument shall be passed as the index to the property, e.g. Streamer.1.metadata@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_12","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerPlugin/#example_13","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.metadata@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"StreamerPlugin/#error-property","text":"Provides access to the most recent error code. This property is read-only .","title":"error property"},{"location":"StreamerPlugin/#value_9","text":"Name Type Description (property) number Custom implementation-specific error code value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.error@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_13","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"StreamerPlugin/#example_14","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.error@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"StreamerPlugin/#elements-property","text":"Provides access to the stream elements. This property is read-only .","title":"elements property"},{"location":"StreamerPlugin/#value_10","text":"Name Type Description (property) array List of stream elements (property)[#] object Stream element (property)[#].type string Stream element type (must be one of the following: video , audio , subtitles , teletext , data ) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.elements@0 .","title":"Value"},{"location":"StreamerPlugin/#errors_14","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Unknown stream ID given 2 ERROR_UNAVAILABLE Stream elements retrieval not supported","title":"Errors"},{"location":"StreamerPlugin/#example_15","text":"","title":"Example"},{"location":"StreamerPlugin/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.elements@0\" }","title":"Get Request"},{"location":"StreamerPlugin/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\" } ] }","title":"Get Response"},{"location":"StreamerPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Streamer plugin: Streamer interface events: Event Description statechange Notifies of stream state change timeupdate Notifies of stream position change stream Notifies of a custom stream incident player Notifies of a custom player incident drm Notifies of a custom DRM-related incident","title":"Notifications"},{"location":"StreamerPlugin/#statechange-event","text":"Notifies of stream state change.","title":"statechange event"},{"location":"StreamerPlugin/#parameters_5","text":"Name Type Description params object params.state string Stream state (must be one of the following: idle , loading , prepared , controlled , error ) The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerPlugin/#example_16","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.statechange\", \"params\": { \"state\": \"controlled\" } }","title":"Example"},{"location":"StreamerPlugin/#timeupdate-event","text":"Notifies of stream position change. This event is fired every second to indicate the current stream position. It does not fire if the stream is paused (i.e. speed is set to 0).","title":"timeupdate event"},{"location":"StreamerPlugin/#parameters_6","text":"Name Type Description params object params.time number Stream position in miliseconds The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerPlugin/#example_17","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.timeupdate\", \"params\": { \"time\": 30000 } }","title":"Example"},{"location":"StreamerPlugin/#stream-event","text":"Notifies of a custom stream incident.","title":"stream event"},{"location":"StreamerPlugin/#parameters_7","text":"Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerPlugin/#example_18","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.stream\", \"params\": { \"code\": 1 } }","title":"Example"},{"location":"StreamerPlugin/#player-event","text":"Notifies of a custom player incident.","title":"player event"},{"location":"StreamerPlugin/#parameters_8","text":"Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerPlugin/#example_19","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.player\", \"params\": { \"code\": 1 } }","title":"Example"},{"location":"StreamerPlugin/#drm-event","text":"Notifies of a custom DRM-related incident.","title":"drm event"},{"location":"StreamerPlugin/#parameters_9","text":"Name Type Description params object params.code number Implementation-specific incident code The Stream ID argument shall be passed within the designator, e.g. 0.client.events.1 .","title":"Parameters"},{"location":"StreamerPlugin/#example_20","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.events.1.drm\", \"params\": { \"code\": 1 } }","title":"Example"},{"location":"SubsystemControlAPI/","text":"Subsystem Control API Version: 1.0 Status: :black_circle::white_circle::white_circle: SubsystemControl interface for Thunder framework. Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the SubsystemControl interface. It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description SubsystemControl JSON-RPC interface. Methods The following methods are provided by the SubsystemControl interface: SubsystemControl interface methods: Method Description activate Activates a subsystem deactivate Deactivates a subsystem activate method Activates a subsystem. Description This method allows a subsystem to be activated from the outside. This is usefull in case Thunder can not determine the availability of a subsystem but it needs to be triggered from the outside. Parameters Name Type Description params object params.system string Subsystem to activate (must be one of the following: platform , network , internet , time , security , location , identifier , provisioning , decryption , bluetooth , websource , graphics , streaming ) params?.configuration string (optional) A JSON string that holds the information applicable to the subsystem to be activated Result Name Type Description result number The result of the activating anythin unequal to 0 means somthing failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SubsystemControl.1.activate\", \"params\": { \"system\": \"network\", \"configuration\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } deactivate method Deactivates a subsystem. Description This method allows a subsystem to be deactivated from the outside. This is usefull in case Thunder can not determine the availability of a subsystem but it needs to be triggered from the outside. Parameters Name Type Description params string Subsystem to deactivate (must be one of the following: platform , network , internet , time , security , location , identifier , provisioning , decryption , bluetooth , websource , graphics , streaming ) Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SubsystemControl.1.deactivate\", \"params\": \"network\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"SubsystemControlAPI"},{"location":"SubsystemControlAPI/#subsystem-control-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: SubsystemControl interface for Thunder framework.","title":"Subsystem Control API"},{"location":"SubsystemControlAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"SubsystemControlAPI/#introduction","text":"","title":"Introduction"},{"location":"SubsystemControlAPI/#scope","text":"This document describes purpose and functionality of the SubsystemControl interface. It includes detailed specification about its methods provided.","title":"Scope"},{"location":"SubsystemControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"SubsystemControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"SubsystemControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"SubsystemControlAPI/#description","text":"SubsystemControl JSON-RPC interface.","title":"Description"},{"location":"SubsystemControlAPI/#methods","text":"The following methods are provided by the SubsystemControl interface: SubsystemControl interface methods: Method Description activate Activates a subsystem deactivate Deactivates a subsystem","title":"Methods"},{"location":"SubsystemControlAPI/#activate-method","text":"Activates a subsystem.","title":"activate method"},{"location":"SubsystemControlAPI/#description_1","text":"This method allows a subsystem to be activated from the outside. This is usefull in case Thunder can not determine the availability of a subsystem but it needs to be triggered from the outside.","title":"Description"},{"location":"SubsystemControlAPI/#parameters","text":"Name Type Description params object params.system string Subsystem to activate (must be one of the following: platform , network , internet , time , security , location , identifier , provisioning , decryption , bluetooth , websource , graphics , streaming ) params?.configuration string (optional) A JSON string that holds the information applicable to the subsystem to be activated","title":"Parameters"},{"location":"SubsystemControlAPI/#result","text":"Name Type Description result number The result of the activating anythin unequal to 0 means somthing failed","title":"Result"},{"location":"SubsystemControlAPI/#example","text":"","title":"Example"},{"location":"SubsystemControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SubsystemControl.1.activate\", \"params\": { \"system\": \"network\", \"configuration\": \"...\" } }","title":"Request"},{"location":"SubsystemControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"SubsystemControlAPI/#deactivate-method","text":"Deactivates a subsystem.","title":"deactivate method"},{"location":"SubsystemControlAPI/#description_2","text":"This method allows a subsystem to be deactivated from the outside. This is usefull in case Thunder can not determine the availability of a subsystem but it needs to be triggered from the outside.","title":"Description"},{"location":"SubsystemControlAPI/#parameters_1","text":"Name Type Description params string Subsystem to deactivate (must be one of the following: platform , network , internet , time , security , location , identifier , provisioning , decryption , bluetooth , websource , graphics , streaming )","title":"Parameters"},{"location":"SubsystemControlAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"SubsystemControlAPI/#example_1","text":"","title":"Example"},{"location":"SubsystemControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SubsystemControl.1.deactivate\", \"params\": \"network\" }","title":"Request"},{"location":"SubsystemControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"SyslogExportPlugin/","text":"Syslog Export Plugin Version: 1.0 Status: :white_circle::white_circle::white_circle: SyslogExport plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the SyslogExport plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The SyslogExport plugin provides functionality for sending syslog messages over websocket. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SyslogExport ) classname string Class name: SyslogExport locator string Library name: libWPEFrameworkSysLogExport.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"SyslogExportPlugin"},{"location":"SyslogExportPlugin/#syslog-export-plugin","text":"Version: 1.0 Status: :white_circle::white_circle::white_circle: SyslogExport plugin for Thunder framework.","title":"Syslog Export Plugin"},{"location":"SyslogExportPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"SyslogExportPlugin/#introduction","text":"","title":"Introduction"},{"location":"SyslogExportPlugin/#scope","text":"This document describes purpose and functionality of the SyslogExport plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"SyslogExportPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"SyslogExportPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"SyslogExportPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"SyslogExportPlugin/#description","text":"The SyslogExport plugin provides functionality for sending syslog messages over websocket. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"SyslogExportPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SyslogExport ) classname string Class name: SyslogExport locator string Library name: libWPEFrameworkSysLogExport.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"Configuration"},{"location":"SystemCommandsAPI/","text":"System Commands API Version: 1.0 Status: :black_circle::white_circle::white_circle: SystemCommands interface for Thunder framework. Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the SystemCommands interface. It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description System Commands JSON-RPC interface. Methods The following methods are provided by the SystemCommands interface: SystemCommands interface methods: Method Description usbreset Resets a USB device usbreset method Resets a USB device. Description With this method a USB device can be reset using USBFS_RESET ioctl command. Parameters Name Type Description params object params.device string USB device to reset Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to reset the USB device 2 ERROR_UNAVAILABLE Unknown USB device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SystemCommands.1.usbreset\", \"params\": { \"device\": \"/dev/usb/001\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"SystemCommandsAPI"},{"location":"SystemCommandsAPI/#system-commands-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: SystemCommands interface for Thunder framework.","title":"System Commands API"},{"location":"SystemCommandsAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"SystemCommandsAPI/#introduction","text":"","title":"Introduction"},{"location":"SystemCommandsAPI/#scope","text":"This document describes purpose and functionality of the SystemCommands interface. It includes detailed specification about its methods provided.","title":"Scope"},{"location":"SystemCommandsAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"SystemCommandsAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"SystemCommandsAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"SystemCommandsAPI/#description","text":"System Commands JSON-RPC interface.","title":"Description"},{"location":"SystemCommandsAPI/#methods","text":"The following methods are provided by the SystemCommands interface: SystemCommands interface methods: Method Description usbreset Resets a USB device","title":"Methods"},{"location":"SystemCommandsAPI/#usbreset-method","text":"Resets a USB device.","title":"usbreset method"},{"location":"SystemCommandsAPI/#description_1","text":"With this method a USB device can be reset using USBFS_RESET ioctl command.","title":"Description"},{"location":"SystemCommandsAPI/#parameters","text":"Name Type Description params object params.device string USB device to reset","title":"Parameters"},{"location":"SystemCommandsAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"SystemCommandsAPI/#errors","text":"Code Message Description 1 ERROR_GENERAL Failed to reset the USB device 2 ERROR_UNAVAILABLE Unknown USB device","title":"Errors"},{"location":"SystemCommandsAPI/#example","text":"","title":"Example"},{"location":"SystemCommandsAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SystemCommands.1.usbreset\", \"params\": { \"device\": \"/dev/usb/001\" } }","title":"Request"},{"location":"SystemCommandsAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"SystemCommandsPlugin/","text":"System Commands Plugin Version: 1.0 Status: :black_circle::black_circle::white_circle: SystemCommands plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Introduction Scope This document describes purpose and functionality of the SystemCommands plugin. It includes detailed specification about its configuration and methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The System Commands plugin allows executing of low level actions on the system. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SystemCommands ) classname string Class name: SystemCommands locator string Library name: libWPEFrameworkSystemCommands.so autostart boolean Determines if the plugin shall be started automatically along with the framework Methods The following methods are provided by the SystemCommands plugin: SystemCommands interface methods: Method Description usbreset Resets a USB device usbreset method Resets a USB device. Description With this method a USB device can be reset using USBFS_RESET ioctl command. Parameters Name Type Description params object params.device string USB device to reset Result Name Type Description result null Always null Errors Code Message Description 1 ERROR_GENERAL Failed to reset the USB device 2 ERROR_UNAVAILABLE Unknown USB device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SystemCommands.1.usbreset\", \"params\": { \"device\": \"/dev/usb/001\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"SystemCommandsPlugin"},{"location":"SystemCommandsPlugin/#system-commands-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::white_circle: SystemCommands plugin for Thunder framework.","title":"System Commands Plugin"},{"location":"SystemCommandsPlugin/#table-of-contents","text":"Introduction Description Configuration Methods","title":"Table of Contents"},{"location":"SystemCommandsPlugin/#introduction","text":"","title":"Introduction"},{"location":"SystemCommandsPlugin/#scope","text":"This document describes purpose and functionality of the SystemCommands plugin. It includes detailed specification about its configuration and methods provided.","title":"Scope"},{"location":"SystemCommandsPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"SystemCommandsPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"SystemCommandsPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"SystemCommandsPlugin/#description","text":"The System Commands plugin allows executing of low level actions on the system. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"SystemCommandsPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SystemCommands ) classname string Class name: SystemCommands locator string Library name: libWPEFrameworkSystemCommands.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"Configuration"},{"location":"SystemCommandsPlugin/#methods","text":"The following methods are provided by the SystemCommands plugin: SystemCommands interface methods: Method Description usbreset Resets a USB device","title":"Methods"},{"location":"SystemCommandsPlugin/#usbreset-method","text":"Resets a USB device.","title":"usbreset method"},{"location":"SystemCommandsPlugin/#description_1","text":"With this method a USB device can be reset using USBFS_RESET ioctl command.","title":"Description"},{"location":"SystemCommandsPlugin/#parameters","text":"Name Type Description params object params.device string USB device to reset","title":"Parameters"},{"location":"SystemCommandsPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"SystemCommandsPlugin/#errors","text":"Code Message Description 1 ERROR_GENERAL Failed to reset the USB device 2 ERROR_UNAVAILABLE Unknown USB device","title":"Errors"},{"location":"SystemCommandsPlugin/#example","text":"","title":"Example"},{"location":"SystemCommandsPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SystemCommands.1.usbreset\", \"params\": { \"device\": \"/dev/usb/001\" } }","title":"Request"},{"location":"SystemCommandsPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"TestControllerAPI/","text":"Test Controller API Version: 1.0 Status: :black_circle::white_circle::white_circle: TestController interface for Thunder framework. Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the TestController interface. It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description TestController JSON-RPC interface. Methods The following methods are provided by the TestController interface: TestController interface methods: Method Description run Runs a single test or multiple tests run method Runs a single test or multiple tests. Parameters Name Type Description params object params?.category string (optional) Test category name, if omitted: all tests are executed params?.test string (optional) Test name, if omitted: all tests of category are executed params?.args string (optional) The test arguments in JSON format Result Name Type Description result array List of test results result[#] object result[#].test string Test name result[#].status string Test status Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category/test 30 ERROR_BAD_REQUEST Bad json param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestController.1.run\", \"params\": { \"category\": \"JSONRPC\", \"test\": \"JSONRPCTest\", \"args\": \"{ }\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"test\": \"JSONRPCTest\", \"status\": \"Success\" } ] } Properties The following properties are provided by the TestController interface: TestController interface properties: Property Description categories RO List of test categories tests RO List of tests for a category description RO Description of a test categories property Provides access to the list of test categories. This property is read-only . Value Name Type Description (property) array List of test categories (property)[#] string Test category name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestController.1.categories\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"JSONRPC\" ] } tests property Provides access to the list of tests for a category. This property is read-only . Value Name Type Description (property) array List of tests for a category (property)[#] string Test name The category argument shall be passed as the index to the property, e.g. TestController.1.tests@JSONRPC . Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestController.1.tests@JSONRPC\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"JSONRPCTest\" ] } description property Provides access to the description of a test. This property is read-only . Value Name Type Description (property) object Description of a test (property).description string Test description The test argument shall be passed as the index to the property, e.g. TestController.1.description@JSONRPC . Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category/test 30 ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestController.1.description@JSONRPC\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"description\": \"Tests JSONRPC functionality\" } }","title":"TestControllerAPI"},{"location":"TestControllerAPI/#test-controller-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: TestController interface for Thunder framework.","title":"Test Controller API"},{"location":"TestControllerAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"TestControllerAPI/#introduction","text":"","title":"Introduction"},{"location":"TestControllerAPI/#scope","text":"This document describes purpose and functionality of the TestController interface. It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"TestControllerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"TestControllerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"TestControllerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"TestControllerAPI/#description","text":"TestController JSON-RPC interface.","title":"Description"},{"location":"TestControllerAPI/#methods","text":"The following methods are provided by the TestController interface: TestController interface methods: Method Description run Runs a single test or multiple tests","title":"Methods"},{"location":"TestControllerAPI/#run-method","text":"Runs a single test or multiple tests.","title":"run method"},{"location":"TestControllerAPI/#parameters","text":"Name Type Description params object params?.category string (optional) Test category name, if omitted: all tests are executed params?.test string (optional) Test name, if omitted: all tests of category are executed params?.args string (optional) The test arguments in JSON format","title":"Parameters"},{"location":"TestControllerAPI/#result","text":"Name Type Description result array List of test results result[#] object result[#].test string Test name result[#].status string Test status","title":"Result"},{"location":"TestControllerAPI/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category/test 30 ERROR_BAD_REQUEST Bad json param data format","title":"Errors"},{"location":"TestControllerAPI/#example","text":"","title":"Example"},{"location":"TestControllerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestController.1.run\", \"params\": { \"category\": \"JSONRPC\", \"test\": \"JSONRPCTest\", \"args\": \"{ }\" } }","title":"Request"},{"location":"TestControllerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"test\": \"JSONRPCTest\", \"status\": \"Success\" } ] }","title":"Response"},{"location":"TestControllerAPI/#properties","text":"The following properties are provided by the TestController interface: TestController interface properties: Property Description categories RO List of test categories tests RO List of tests for a category description RO Description of a test","title":"Properties"},{"location":"TestControllerAPI/#categories-property","text":"Provides access to the list of test categories. This property is read-only .","title":"categories property"},{"location":"TestControllerAPI/#value","text":"Name Type Description (property) array List of test categories (property)[#] string Test category name","title":"Value"},{"location":"TestControllerAPI/#example_1","text":"","title":"Example"},{"location":"TestControllerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestController.1.categories\" }","title":"Get Request"},{"location":"TestControllerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"JSONRPC\" ] }","title":"Get Response"},{"location":"TestControllerAPI/#tests-property","text":"Provides access to the list of tests for a category. This property is read-only .","title":"tests property"},{"location":"TestControllerAPI/#value_1","text":"Name Type Description (property) array List of tests for a category (property)[#] string Test name The category argument shall be passed as the index to the property, e.g. TestController.1.tests@JSONRPC .","title":"Value"},{"location":"TestControllerAPI/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestControllerAPI/#example_2","text":"","title":"Example"},{"location":"TestControllerAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestController.1.tests@JSONRPC\" }","title":"Get Request"},{"location":"TestControllerAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"JSONRPCTest\" ] }","title":"Get Response"},{"location":"TestControllerAPI/#description-property","text":"Provides access to the description of a test. This property is read-only .","title":"description property"},{"location":"TestControllerAPI/#value_2","text":"Name Type Description (property) object Description of a test (property).description string Test description The test argument shall be passed as the index to the property, e.g. TestController.1.description@JSONRPC .","title":"Value"},{"location":"TestControllerAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category/test 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestControllerAPI/#example_3","text":"","title":"Example"},{"location":"TestControllerAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestController.1.description@JSONRPC\" }","title":"Get Request"},{"location":"TestControllerAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"description\": \"Tests JSONRPC functionality\" } }","title":"Get Response"},{"location":"TestUtilityAPI/","text":"Test Utility API Version: 1.0 Status: :black_circle::white_circle::white_circle: TestUtility interface for Thunder framework. Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the TestUtility interface. It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description TestUtility JSON-RPC interface. Methods The following methods are provided by the TestUtility interface: TestUtility interface methods: Method Description runmemory Runs a memory test command runcrash Runs a crash test command runmemory method Runs a memory test command. Parameters Name Type Description params object params.command string Test command name params?.size number (optional) The amount of memory in KB for allocation (applicable for Malloc commands) Result Name Type Description result object result.allocated number Already allocated memory in KB result.size number Current allocation in KB result.resident number Resident memory in KB Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.runmemory\", \"params\": { \"command\": \"Malloc\", \"size\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"size\": 0, \"resident\": 0 } } runcrash method Runs a crash test command. Parameters Name Type Description params object params.command string Test command name params?.delay number (optional) Delay (in seconds) before the crash attempt (applicable for Crash command) params?.count number (optional) How many times a Crash command will be executed consecutively (applicable for CrashNTimes command) Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.runcrash\", \"params\": { \"command\": \"Crash\", \"delay\": 1, \"count\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the TestUtility interface: TestUtility interface properties: Property Description commands RO List of test commands description RO Description of a test command parameters RO Parameters of a test command shutdowntimeout WO Timeout to be waited before deactivating the plugin commands property Provides access to the list of test commands. This property is read-only . Value Name Type Description (property) array List of test commands (property)[#] string Available test commands Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.commands\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Malloc\" ] } description property Provides access to the description of a test command. This property is read-only . Value Name Type Description (property) object Description of a test command (property).description string Test command description The command argument shall be passed as the index to the property, e.g. TestUtility.1.description@Malloc . Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.description@Malloc\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"description\": \"Allocates desired amount of memory (in KB) and holds it\" } } parameters property Provides access to the parameters of a test command. This property is read-only . Value Name Type Description (property) object Parameters of a test command (property)?.input array (optional) (property)?.input[#] object (optional) (property)?.input[#].name string Test command input parameter (property)?.input[#].type string Test command input parameter type (must be one of the following: Number , String , Boolean , Object , Symbol ) (property)?.input[#].comment string Test command input parameter description (property).output object (property).output.name string Test command output parameter (property).output.type string Test command output parameter type (must be one of the following: Number , String , Boolean , Object , Symbol ) (property).output.comment string Test command output parameter description The command argument shall be passed as the index to the property, e.g. TestUtility.1.parameters@Malloc . Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.parameters@Malloc\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"input\": [ { \"name\": \"memory\", \"type\": \"Number\", \"comment\": \"Memory statistics in KB\" } ], \"output\": { \"name\": \"memory\", \"type\": \"Number\", \"comment\": \"Memory statistics in KB\" } } } shutdowntimeout property Provides access to the timeout to be waited before deactivating the plugin. This property is write-only . Value Name Type Description (property) number Timeout in milli seconds Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.shutdowntimeout\", \"params\": 5000 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"TestUtilityAPI"},{"location":"TestUtilityAPI/#test-utility-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: TestUtility interface for Thunder framework.","title":"Test Utility API"},{"location":"TestUtilityAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"TestUtilityAPI/#introduction","text":"","title":"Introduction"},{"location":"TestUtilityAPI/#scope","text":"This document describes purpose and functionality of the TestUtility interface. It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"TestUtilityAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"TestUtilityAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"TestUtilityAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"TestUtilityAPI/#description","text":"TestUtility JSON-RPC interface.","title":"Description"},{"location":"TestUtilityAPI/#methods","text":"The following methods are provided by the TestUtility interface: TestUtility interface methods: Method Description runmemory Runs a memory test command runcrash Runs a crash test command","title":"Methods"},{"location":"TestUtilityAPI/#runmemory-method","text":"Runs a memory test command.","title":"runmemory method"},{"location":"TestUtilityAPI/#parameters","text":"Name Type Description params object params.command string Test command name params?.size number (optional) The amount of memory in KB for allocation (applicable for Malloc commands)","title":"Parameters"},{"location":"TestUtilityAPI/#result","text":"Name Type Description result object result.allocated number Already allocated memory in KB result.size number Current allocation in KB result.resident number Resident memory in KB","title":"Result"},{"location":"TestUtilityAPI/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestUtilityAPI/#example","text":"","title":"Example"},{"location":"TestUtilityAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.runmemory\", \"params\": { \"command\": \"Malloc\", \"size\": 0 } }","title":"Request"},{"location":"TestUtilityAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"size\": 0, \"resident\": 0 } }","title":"Response"},{"location":"TestUtilityAPI/#runcrash-method","text":"Runs a crash test command.","title":"runcrash method"},{"location":"TestUtilityAPI/#parameters_1","text":"Name Type Description params object params.command string Test command name params?.delay number (optional) Delay (in seconds) before the crash attempt (applicable for Crash command) params?.count number (optional) How many times a Crash command will be executed consecutively (applicable for CrashNTimes command)","title":"Parameters"},{"location":"TestUtilityAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"TestUtilityAPI/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestUtilityAPI/#example_1","text":"","title":"Example"},{"location":"TestUtilityAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.runcrash\", \"params\": { \"command\": \"Crash\", \"delay\": 1, \"count\": 1 } }","title":"Request"},{"location":"TestUtilityAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"TestUtilityAPI/#properties","text":"The following properties are provided by the TestUtility interface: TestUtility interface properties: Property Description commands RO List of test commands description RO Description of a test command parameters RO Parameters of a test command shutdowntimeout WO Timeout to be waited before deactivating the plugin","title":"Properties"},{"location":"TestUtilityAPI/#commands-property","text":"Provides access to the list of test commands. This property is read-only .","title":"commands property"},{"location":"TestUtilityAPI/#value","text":"Name Type Description (property) array List of test commands (property)[#] string Available test commands","title":"Value"},{"location":"TestUtilityAPI/#example_2","text":"","title":"Example"},{"location":"TestUtilityAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.commands\" }","title":"Get Request"},{"location":"TestUtilityAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Malloc\" ] }","title":"Get Response"},{"location":"TestUtilityAPI/#description-property","text":"Provides access to the description of a test command. This property is read-only .","title":"description property"},{"location":"TestUtilityAPI/#value_1","text":"Name Type Description (property) object Description of a test command (property).description string Test command description The command argument shall be passed as the index to the property, e.g. TestUtility.1.description@Malloc .","title":"Value"},{"location":"TestUtilityAPI/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestUtilityAPI/#example_3","text":"","title":"Example"},{"location":"TestUtilityAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.description@Malloc\" }","title":"Get Request"},{"location":"TestUtilityAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"description\": \"Allocates desired amount of memory (in KB) and holds it\" } }","title":"Get Response"},{"location":"TestUtilityAPI/#parameters-property","text":"Provides access to the parameters of a test command. This property is read-only .","title":"parameters property"},{"location":"TestUtilityAPI/#value_2","text":"Name Type Description (property) object Parameters of a test command (property)?.input array (optional) (property)?.input[#] object (optional) (property)?.input[#].name string Test command input parameter (property)?.input[#].type string Test command input parameter type (must be one of the following: Number , String , Boolean , Object , Symbol ) (property)?.input[#].comment string Test command input parameter description (property).output object (property).output.name string Test command output parameter (property).output.type string Test command output parameter type (must be one of the following: Number , String , Boolean , Object , Symbol ) (property).output.comment string Test command output parameter description The command argument shall be passed as the index to the property, e.g. TestUtility.1.parameters@Malloc .","title":"Value"},{"location":"TestUtilityAPI/#errors_3","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestUtilityAPI/#example_4","text":"","title":"Example"},{"location":"TestUtilityAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.parameters@Malloc\" }","title":"Get Request"},{"location":"TestUtilityAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"input\": [ { \"name\": \"memory\", \"type\": \"Number\", \"comment\": \"Memory statistics in KB\" } ], \"output\": { \"name\": \"memory\", \"type\": \"Number\", \"comment\": \"Memory statistics in KB\" } } }","title":"Get Response"},{"location":"TestUtilityAPI/#shutdowntimeout-property","text":"Provides access to the timeout to be waited before deactivating the plugin. This property is write-only .","title":"shutdowntimeout property"},{"location":"TestUtilityAPI/#value_3","text":"Name Type Description (property) number Timeout in milli seconds","title":"Value"},{"location":"TestUtilityAPI/#example_5","text":"","title":"Example"},{"location":"TestUtilityAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.shutdowntimeout\", \"params\": 5000 }","title":"Set Request"},{"location":"TestUtilityAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"TestUtilityPlugin/","text":"Test Utility Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: TestUtility plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Introduction Scope This document describes purpose and functionality of the TestUtility plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The TestUtility plugin enables to execute embedded test commands on the platform. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: TestUtility ) classname string Class name: TestUtility locator string Library name: libWPEFrameworkTestUtility.so autostart boolean Determines if the plugin shall be started automatically along with the framework Methods The following methods are provided by the TestUtility plugin: TestUtility interface methods: Method Description runmemory Runs a memory test command runcrash Runs a crash test command runmemory method Runs a memory test command. Parameters Name Type Description params object params.command string Test command name params?.size number (optional) The amount of memory in KB for allocation (applicable for Malloc commands) Result Name Type Description result object result.allocated number Already allocated memory in KB result.size number Current allocation in KB result.resident number Resident memory in KB Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.runmemory\", \"params\": { \"command\": \"Malloc\", \"size\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"size\": 0, \"resident\": 0 } } runcrash method Runs a crash test command. Parameters Name Type Description params object params.command string Test command name params?.delay number (optional) Delay (in seconds) before the crash attempt (applicable for Crash command) params?.count number (optional) How many times a Crash command will be executed consecutively (applicable for CrashNTimes command) Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.runcrash\", \"params\": { \"command\": \"Crash\", \"delay\": 1, \"count\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the TestUtility plugin: TestUtility interface properties: Property Description commands RO List of test commands description RO Description of a test command parameters RO Parameters of a test command shutdowntimeout WO Timeout to be waited before deactivating the plugin commands property Provides access to the list of test commands. This property is read-only . Value Name Type Description (property) array List of test commands (property)[#] string Available test commands Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.commands\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Malloc\" ] } description property Provides access to the description of a test command. This property is read-only . Value Name Type Description (property) object Description of a test command (property).description string Test command description The command argument shall be passed as the index to the property, e.g. TestUtility.1.description@Malloc . Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.description@Malloc\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"description\": \"Allocates desired amount of memory (in KB) and holds it\" } } parameters property Provides access to the parameters of a test command. This property is read-only . Value Name Type Description (property) object Parameters of a test command (property)?.input array (optional) (property)?.input[#] object (optional) (property)?.input[#].name string Test command input parameter (property)?.input[#].type string Test command input parameter type (must be one of the following: Number , String , Boolean , Object , Symbol ) (property)?.input[#].comment string Test command input parameter description (property).output object (property).output.name string Test command output parameter (property).output.type string Test command output parameter type (must be one of the following: Number , String , Boolean , Object , Symbol ) (property).output.comment string Test command output parameter description The command argument shall be passed as the index to the property, e.g. TestUtility.1.parameters@Malloc . Errors Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.parameters@Malloc\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"input\": [ { \"name\": \"memory\", \"type\": \"Number\", \"comment\": \"Memory statistics in KB\" } ], \"output\": { \"name\": \"memory\", \"type\": \"Number\", \"comment\": \"Memory statistics in KB\" } } } shutdowntimeout property Provides access to the timeout to be waited before deactivating the plugin. This property is write-only . Value Name Type Description (property) number Timeout in milli seconds Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.shutdowntimeout\", \"params\": 5000 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"TestUtilityPlugin"},{"location":"TestUtilityPlugin/#test-utility-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: TestUtility plugin for Thunder framework.","title":"Test Utility Plugin"},{"location":"TestUtilityPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties","title":"Table of Contents"},{"location":"TestUtilityPlugin/#introduction","text":"","title":"Introduction"},{"location":"TestUtilityPlugin/#scope","text":"This document describes purpose and functionality of the TestUtility plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"TestUtilityPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"TestUtilityPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"TestUtilityPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"TestUtilityPlugin/#description","text":"The TestUtility plugin enables to execute embedded test commands on the platform. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"TestUtilityPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: TestUtility ) classname string Class name: TestUtility locator string Library name: libWPEFrameworkTestUtility.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"Configuration"},{"location":"TestUtilityPlugin/#methods","text":"The following methods are provided by the TestUtility plugin: TestUtility interface methods: Method Description runmemory Runs a memory test command runcrash Runs a crash test command","title":"Methods"},{"location":"TestUtilityPlugin/#runmemory-method","text":"Runs a memory test command.","title":"runmemory method"},{"location":"TestUtilityPlugin/#parameters","text":"Name Type Description params object params.command string Test command name params?.size number (optional) The amount of memory in KB for allocation (applicable for Malloc commands)","title":"Parameters"},{"location":"TestUtilityPlugin/#result","text":"Name Type Description result object result.allocated number Already allocated memory in KB result.size number Current allocation in KB result.resident number Resident memory in KB","title":"Result"},{"location":"TestUtilityPlugin/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestUtilityPlugin/#example","text":"","title":"Example"},{"location":"TestUtilityPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.runmemory\", \"params\": { \"command\": \"Malloc\", \"size\": 0 } }","title":"Request"},{"location":"TestUtilityPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"size\": 0, \"resident\": 0 } }","title":"Response"},{"location":"TestUtilityPlugin/#runcrash-method","text":"Runs a crash test command.","title":"runcrash method"},{"location":"TestUtilityPlugin/#parameters_1","text":"Name Type Description params object params.command string Test command name params?.delay number (optional) Delay (in seconds) before the crash attempt (applicable for Crash command) params?.count number (optional) How many times a Crash command will be executed consecutively (applicable for CrashNTimes command)","title":"Parameters"},{"location":"TestUtilityPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"TestUtilityPlugin/#errors_1","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestUtilityPlugin/#example_1","text":"","title":"Example"},{"location":"TestUtilityPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.runcrash\", \"params\": { \"command\": \"Crash\", \"delay\": 1, \"count\": 1 } }","title":"Request"},{"location":"TestUtilityPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"TestUtilityPlugin/#properties","text":"The following properties are provided by the TestUtility plugin: TestUtility interface properties: Property Description commands RO List of test commands description RO Description of a test command parameters RO Parameters of a test command shutdowntimeout WO Timeout to be waited before deactivating the plugin","title":"Properties"},{"location":"TestUtilityPlugin/#commands-property","text":"Provides access to the list of test commands. This property is read-only .","title":"commands property"},{"location":"TestUtilityPlugin/#value","text":"Name Type Description (property) array List of test commands (property)[#] string Available test commands","title":"Value"},{"location":"TestUtilityPlugin/#example_2","text":"","title":"Example"},{"location":"TestUtilityPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.commands\" }","title":"Get Request"},{"location":"TestUtilityPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Malloc\" ] }","title":"Get Response"},{"location":"TestUtilityPlugin/#description-property","text":"Provides access to the description of a test command. This property is read-only .","title":"description property"},{"location":"TestUtilityPlugin/#value_1","text":"Name Type Description (property) object Description of a test command (property).description string Test command description The command argument shall be passed as the index to the property, e.g. TestUtility.1.description@Malloc .","title":"Value"},{"location":"TestUtilityPlugin/#errors_2","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestUtilityPlugin/#example_3","text":"","title":"Example"},{"location":"TestUtilityPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.description@Malloc\" }","title":"Get Request"},{"location":"TestUtilityPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"description\": \"Allocates desired amount of memory (in KB) and holds it\" } }","title":"Get Response"},{"location":"TestUtilityPlugin/#parameters-property","text":"Provides access to the parameters of a test command. This property is read-only .","title":"parameters property"},{"location":"TestUtilityPlugin/#value_2","text":"Name Type Description (property) object Parameters of a test command (property)?.input array (optional) (property)?.input[#] object (optional) (property)?.input[#].name string Test command input parameter (property)?.input[#].type string Test command input parameter type (must be one of the following: Number , String , Boolean , Object , Symbol ) (property)?.input[#].comment string Test command input parameter description (property).output object (property).output.name string Test command output parameter (property).output.type string Test command output parameter type (must be one of the following: Number , String , Boolean , Object , Symbol ) (property).output.comment string Test command output parameter description The command argument shall be passed as the index to the property, e.g. TestUtility.1.parameters@Malloc .","title":"Value"},{"location":"TestUtilityPlugin/#errors_3","text":"Code Message Description 2 ERROR_UNAVAILABLE Unknown category 30 ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"TestUtilityPlugin/#example_4","text":"","title":"Example"},{"location":"TestUtilityPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.parameters@Malloc\" }","title":"Get Request"},{"location":"TestUtilityPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"input\": [ { \"name\": \"memory\", \"type\": \"Number\", \"comment\": \"Memory statistics in KB\" } ], \"output\": { \"name\": \"memory\", \"type\": \"Number\", \"comment\": \"Memory statistics in KB\" } } }","title":"Get Response"},{"location":"TestUtilityPlugin/#shutdowntimeout-property","text":"Provides access to the timeout to be waited before deactivating the plugin. This property is write-only .","title":"shutdowntimeout property"},{"location":"TestUtilityPlugin/#value_3","text":"Name Type Description (property) number Timeout in milli seconds","title":"Value"},{"location":"TestUtilityPlugin/#example_5","text":"","title":"Example"},{"location":"TestUtilityPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TestUtility.1.shutdowntimeout\", \"params\": 5000 }","title":"Set Request"},{"location":"TestUtilityPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"TimeSyncAPI/","text":"Time Sync API Version: 1.0 Status: :black_circle::white_circle::white_circle: TimeSync interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the TimeSync interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description TimeSync JSON-RPC interface. Methods The following methods are provided by the TimeSync interface: TimeSync interface methods: Method Description synchronize Synchronizes time synchronize method Synchronizes time. Description Use this method to synchronize the system time with the currently configured time source. If automatic time synchronization is initially disabled or stopped, it will be restarted. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Returned when the method is called while previously triggered synchronization is in progress. 23 ERROR_INCOMPLETE_CONFIG Returned when the source configuration is missing or invalid. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synchronize\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the TimeSync interface: TimeSync interface properties: Property Description synctime RO Most recent synchronized time time Current system time synctime property Provides access to the most recent synchronized time. This property is read-only . Value Name Type Description (property) object Most recent synchronized time (property).time string Synchronized time (in ISO8601 format); empty string if the time has never been synchronized (property)?.source string (optional) The synchronization source e.g. an NTP server Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synctime\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"time\": \"2019-05-07T07:20:26Z\", \"source\": \"ntp://example.com\" } } time property Provides access to the current system time. Description Upon setting this property automatic time synchronization will be stopped. If not already active, the framework's time subsystem will become activated. If the property is set empty then the time subsystem will still become activated but without setting the time (thereby notifying the framework that the time has been set externally). Value Name Type Description (property) string System time (in ISO8601 format) Errors Code Message Description 30 ERROR_BAD_REQUEST The time is invalid Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"2019-05-07T07:20:26Z\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\", \"params\": \"2019-05-07T07:20:26Z\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeSync interface: TimeSync interface events: Event Description timechange Signals a time change timechange event Signals a time change. Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.timechange\" }","title":"TimeSyncAPI"},{"location":"TimeSyncAPI/#time-sync-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: TimeSync interface for Thunder framework.","title":"Time Sync API"},{"location":"TimeSyncAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"TimeSyncAPI/#introduction","text":"","title":"Introduction"},{"location":"TimeSyncAPI/#scope","text":"This document describes purpose and functionality of the TimeSync interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"TimeSyncAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"TimeSyncAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"TimeSyncAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"TimeSyncAPI/#description","text":"TimeSync JSON-RPC interface.","title":"Description"},{"location":"TimeSyncAPI/#methods","text":"The following methods are provided by the TimeSync interface: TimeSync interface methods: Method Description synchronize Synchronizes time","title":"Methods"},{"location":"TimeSyncAPI/#synchronize-method","text":"Synchronizes time.","title":"synchronize method"},{"location":"TimeSyncAPI/#description_1","text":"Use this method to synchronize the system time with the currently configured time source. If automatic time synchronization is initially disabled or stopped, it will be restarted.","title":"Description"},{"location":"TimeSyncAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"TimeSyncAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"TimeSyncAPI/#errors","text":"Code Message Description 12 ERROR_INPROGRESS Returned when the method is called while previously triggered synchronization is in progress. 23 ERROR_INCOMPLETE_CONFIG Returned when the source configuration is missing or invalid.","title":"Errors"},{"location":"TimeSyncAPI/#example","text":"","title":"Example"},{"location":"TimeSyncAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synchronize\" }","title":"Request"},{"location":"TimeSyncAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"TimeSyncAPI/#properties","text":"The following properties are provided by the TimeSync interface: TimeSync interface properties: Property Description synctime RO Most recent synchronized time time Current system time","title":"Properties"},{"location":"TimeSyncAPI/#synctime-property","text":"Provides access to the most recent synchronized time. This property is read-only .","title":"synctime property"},{"location":"TimeSyncAPI/#value","text":"Name Type Description (property) object Most recent synchronized time (property).time string Synchronized time (in ISO8601 format); empty string if the time has never been synchronized (property)?.source string (optional) The synchronization source e.g. an NTP server","title":"Value"},{"location":"TimeSyncAPI/#example_1","text":"","title":"Example"},{"location":"TimeSyncAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synctime\" }","title":"Get Request"},{"location":"TimeSyncAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"time\": \"2019-05-07T07:20:26Z\", \"source\": \"ntp://example.com\" } }","title":"Get Response"},{"location":"TimeSyncAPI/#time-property","text":"Provides access to the current system time.","title":"time property"},{"location":"TimeSyncAPI/#description_2","text":"Upon setting this property automatic time synchronization will be stopped. If not already active, the framework's time subsystem will become activated. If the property is set empty then the time subsystem will still become activated but without setting the time (thereby notifying the framework that the time has been set externally).","title":"Description"},{"location":"TimeSyncAPI/#value_1","text":"Name Type Description (property) string System time (in ISO8601 format)","title":"Value"},{"location":"TimeSyncAPI/#errors_1","text":"Code Message Description 30 ERROR_BAD_REQUEST The time is invalid","title":"Errors"},{"location":"TimeSyncAPI/#example_2","text":"","title":"Example"},{"location":"TimeSyncAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\" }","title":"Get Request"},{"location":"TimeSyncAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"2019-05-07T07:20:26Z\" }","title":"Get Response"},{"location":"TimeSyncAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\", \"params\": \"2019-05-07T07:20:26Z\" }","title":"Set Request"},{"location":"TimeSyncAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"TimeSyncAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeSync interface: TimeSync interface events: Event Description timechange Signals a time change","title":"Notifications"},{"location":"TimeSyncAPI/#timechange-event","text":"Signals a time change.","title":"timechange event"},{"location":"TimeSyncAPI/#parameters_1","text":"This event carries no parameters.","title":"Parameters"},{"location":"TimeSyncAPI/#example_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.timechange\" }","title":"Example"},{"location":"TimeSyncPlugin/","text":"Time Sync Plugin Version: 1.0 Status: :black_circle::black_circle::black_circle: TimeSync plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the TimeSync plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Time Sync plugin provides time synchronization functionality from various time sources (e.g. NTP). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: TimeSync ) classname string Class name: TimeSync locator string Library name: libWPEFrameworkTimeSync.so autostart boolean Determines if the plugin shall be started automatically along with the framework deferred boolean (optional) Determines if automatic time sync shall be initially disabled periodicity number (optional) Periodicity of time synchronization (in hours), 0 for one-off synchronization retries number (optional) Number of synchronization attempts if the source cannot be reached (may be 0) interval number (optional) Time to wait (in milliseconds) before retrying a synchronization attempt after a failure sources array Time sources sources[#] string (a time source entry) Methods The following methods are provided by the TimeSync plugin: TimeSync interface methods: Method Description synchronize Synchronizes time synchronize method Synchronizes time. Description Use this method to synchronize the system time with the currently configured time source. If automatic time synchronization is initially disabled or stopped, it will be restarted. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Returned when the method is called while previously triggered synchronization is in progress. 23 ERROR_INCOMPLETE_CONFIG Returned when the source configuration is missing or invalid. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synchronize\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the TimeSync plugin: TimeSync interface properties: Property Description synctime RO Most recent synchronized time time Current system time synctime property Provides access to the most recent synchronized time. This property is read-only . Value Name Type Description (property) object Most recent synchronized time (property).time string Synchronized time (in ISO8601 format); empty string if the time has never been synchronized (property)?.source string (optional) The synchronization source e.g. an NTP server Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synctime\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"time\": \"2019-05-07T07:20:26Z\", \"source\": \"ntp://example.com\" } } time property Provides access to the current system time. Description Upon setting this property automatic time synchronization will be stopped. If not already active, the framework's time subsystem will become activated. If the property is set empty then the time subsystem will still become activated but without setting the time (thereby notifying the framework that the time has been set externally). Value Name Type Description (property) string System time (in ISO8601 format) Errors Code Message Description 30 ERROR_BAD_REQUEST The time is invalid Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"2019-05-07T07:20:26Z\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\", \"params\": \"2019-05-07T07:20:26Z\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeSync plugin: TimeSync interface events: Event Description timechange Signals a time change timechange event Signals a time change. Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.timechange\" }","title":"TimeSyncPlugin"},{"location":"TimeSyncPlugin/#time-sync-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::black_circle: TimeSync plugin for Thunder framework.","title":"Time Sync Plugin"},{"location":"TimeSyncPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"TimeSyncPlugin/#introduction","text":"","title":"Introduction"},{"location":"TimeSyncPlugin/#scope","text":"This document describes purpose and functionality of the TimeSync plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"TimeSyncPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"TimeSyncPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"TimeSyncPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"TimeSyncPlugin/#description","text":"The Time Sync plugin provides time synchronization functionality from various time sources (e.g. NTP). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"TimeSyncPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: TimeSync ) classname string Class name: TimeSync locator string Library name: libWPEFrameworkTimeSync.so autostart boolean Determines if the plugin shall be started automatically along with the framework deferred boolean (optional) Determines if automatic time sync shall be initially disabled periodicity number (optional) Periodicity of time synchronization (in hours), 0 for one-off synchronization retries number (optional) Number of synchronization attempts if the source cannot be reached (may be 0) interval number (optional) Time to wait (in milliseconds) before retrying a synchronization attempt after a failure sources array Time sources sources[#] string (a time source entry)","title":"Configuration"},{"location":"TimeSyncPlugin/#methods","text":"The following methods are provided by the TimeSync plugin: TimeSync interface methods: Method Description synchronize Synchronizes time","title":"Methods"},{"location":"TimeSyncPlugin/#synchronize-method","text":"Synchronizes time.","title":"synchronize method"},{"location":"TimeSyncPlugin/#description_1","text":"Use this method to synchronize the system time with the currently configured time source. If automatic time synchronization is initially disabled or stopped, it will be restarted.","title":"Description"},{"location":"TimeSyncPlugin/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"TimeSyncPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"TimeSyncPlugin/#errors","text":"Code Message Description 12 ERROR_INPROGRESS Returned when the method is called while previously triggered synchronization is in progress. 23 ERROR_INCOMPLETE_CONFIG Returned when the source configuration is missing or invalid.","title":"Errors"},{"location":"TimeSyncPlugin/#example","text":"","title":"Example"},{"location":"TimeSyncPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synchronize\" }","title":"Request"},{"location":"TimeSyncPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"TimeSyncPlugin/#properties","text":"The following properties are provided by the TimeSync plugin: TimeSync interface properties: Property Description synctime RO Most recent synchronized time time Current system time","title":"Properties"},{"location":"TimeSyncPlugin/#synctime-property","text":"Provides access to the most recent synchronized time. This property is read-only .","title":"synctime property"},{"location":"TimeSyncPlugin/#value","text":"Name Type Description (property) object Most recent synchronized time (property).time string Synchronized time (in ISO8601 format); empty string if the time has never been synchronized (property)?.source string (optional) The synchronization source e.g. an NTP server","title":"Value"},{"location":"TimeSyncPlugin/#example_1","text":"","title":"Example"},{"location":"TimeSyncPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synctime\" }","title":"Get Request"},{"location":"TimeSyncPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"time\": \"2019-05-07T07:20:26Z\", \"source\": \"ntp://example.com\" } }","title":"Get Response"},{"location":"TimeSyncPlugin/#time-property","text":"Provides access to the current system time.","title":"time property"},{"location":"TimeSyncPlugin/#description_2","text":"Upon setting this property automatic time synchronization will be stopped. If not already active, the framework's time subsystem will become activated. If the property is set empty then the time subsystem will still become activated but without setting the time (thereby notifying the framework that the time has been set externally).","title":"Description"},{"location":"TimeSyncPlugin/#value_1","text":"Name Type Description (property) string System time (in ISO8601 format)","title":"Value"},{"location":"TimeSyncPlugin/#errors_1","text":"Code Message Description 30 ERROR_BAD_REQUEST The time is invalid","title":"Errors"},{"location":"TimeSyncPlugin/#example_2","text":"","title":"Example"},{"location":"TimeSyncPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\" }","title":"Get Request"},{"location":"TimeSyncPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"2019-05-07T07:20:26Z\" }","title":"Get Response"},{"location":"TimeSyncPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\", \"params\": \"2019-05-07T07:20:26Z\" }","title":"Set Request"},{"location":"TimeSyncPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"TimeSyncPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeSync plugin: TimeSync interface events: Event Description timechange Signals a time change","title":"Notifications"},{"location":"TimeSyncPlugin/#timechange-event","text":"Signals a time change.","title":"timechange event"},{"location":"TimeSyncPlugin/#parameters_1","text":"This event carries no parameters.","title":"Parameters"},{"location":"TimeSyncPlugin/#example_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.timechange\" }","title":"Example"},{"location":"TraceControlAPI/","text":"Trace Control API Version: 1.0 Status: :black_circle::white_circle::white_circle: TraceControl interface for Thunder framework. Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the TraceControl interface. It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description TraceControl JSON-RPC interface. Methods The following methods are provided by the TraceControl interface: TraceControl interface methods: Method Description status Retrieves general information set Sets traces status method Retrieves general information. Description Retrieves the actual trace status information for targeted module and category, if either category nor module is given, all information is returned. It will retrieves the details about console status and remote address(port and binding address), if these are configured. Parameters Name Type Description params object params.module string Module name params.category string Category name Result Name Type Description result object result.console boolean Config attribute (Console) result.remote object result.remote.port number Config attribute (port) result.remote.binding string Config attribute (binding) result.settings array result.settings[#] object result.settings[#].module string Module name result.settings[#].category string Category name result.settings[#].state string State value (must be one of the following: enabled , disabled , tristated ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TraceControl.1.status\", \"params\": { \"module\": \"Plugin_Monitor\", \"category\": \"Information\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"console\": false, \"remote\": { \"port\": 2200, \"binding\": \"0.0.0.0\" }, \"settings\": [ { \"module\": \"Plugin_Monitor\", \"category\": \"Information\", \"state\": \"disabled\" } ] } } set method Sets traces. Description Disables/enables all/select category traces for particular module. Parameters Name Type Description params object params.module string Module name params.category string Category name params.state string State value (must be one of the following: enabled , disabled , tristated ) Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TraceControl.1.set\", \"params\": { \"module\": \"Plugin_Monitor\", \"category\": \"Information\", \"state\": \"disabled\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"TraceControlAPI"},{"location":"TraceControlAPI/#trace-control-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: TraceControl interface for Thunder framework.","title":"Trace Control API"},{"location":"TraceControlAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"TraceControlAPI/#introduction","text":"","title":"Introduction"},{"location":"TraceControlAPI/#scope","text":"This document describes purpose and functionality of the TraceControl interface. It includes detailed specification about its methods provided.","title":"Scope"},{"location":"TraceControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"TraceControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"TraceControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"TraceControlAPI/#description","text":"TraceControl JSON-RPC interface.","title":"Description"},{"location":"TraceControlAPI/#methods","text":"The following methods are provided by the TraceControl interface: TraceControl interface methods: Method Description status Retrieves general information set Sets traces","title":"Methods"},{"location":"TraceControlAPI/#status-method","text":"Retrieves general information.","title":"status method"},{"location":"TraceControlAPI/#description_1","text":"Retrieves the actual trace status information for targeted module and category, if either category nor module is given, all information is returned. It will retrieves the details about console status and remote address(port and binding address), if these are configured.","title":"Description"},{"location":"TraceControlAPI/#parameters","text":"Name Type Description params object params.module string Module name params.category string Category name","title":"Parameters"},{"location":"TraceControlAPI/#result","text":"Name Type Description result object result.console boolean Config attribute (Console) result.remote object result.remote.port number Config attribute (port) result.remote.binding string Config attribute (binding) result.settings array result.settings[#] object result.settings[#].module string Module name result.settings[#].category string Category name result.settings[#].state string State value (must be one of the following: enabled , disabled , tristated )","title":"Result"},{"location":"TraceControlAPI/#example","text":"","title":"Example"},{"location":"TraceControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TraceControl.1.status\", \"params\": { \"module\": \"Plugin_Monitor\", \"category\": \"Information\" } }","title":"Request"},{"location":"TraceControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"console\": false, \"remote\": { \"port\": 2200, \"binding\": \"0.0.0.0\" }, \"settings\": [ { \"module\": \"Plugin_Monitor\", \"category\": \"Information\", \"state\": \"disabled\" } ] } }","title":"Response"},{"location":"TraceControlAPI/#set-method","text":"Sets traces.","title":"set method"},{"location":"TraceControlAPI/#description_2","text":"Disables/enables all/select category traces for particular module.","title":"Description"},{"location":"TraceControlAPI/#parameters_1","text":"Name Type Description params object params.module string Module name params.category string Category name params.state string State value (must be one of the following: enabled , disabled , tristated )","title":"Parameters"},{"location":"TraceControlAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"TraceControlAPI/#example_1","text":"","title":"Example"},{"location":"TraceControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TraceControl.1.set\", \"params\": { \"module\": \"Plugin_Monitor\", \"category\": \"Information\", \"state\": \"disabled\" } }","title":"Request"},{"location":"TraceControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"VolumeControlAPI/","text":"VolumeControl API Version: 1.0 Status: :black_circle::white_circle::white_circle: VolumeControl interface for Thunder framework. Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the VolumeControl interface. It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description VolumeControl JSON-RPC interface. Properties The following properties are provided by the VolumeControl interface: VolumeControl interface properties: Property Description muted Audio mute state volume Audio volume level muted property Provides access to the audio mute state. Value Name Type Description muted boolean Mute state (true: muted, false: un-muted) Errors Code Message Description ERROR_GENERAL Failed to set/retrieve muting state Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } volume property Provides access to the audio volume level. Value Name Type Description volume integer Volume level in percent Errors Code Message Description ERROR_GENERAL Failed to set/retrieve audio volume Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\", \"params\": 100 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the VolumeControl interface: VolumeControl interface events: Event Description volume Signals volume change muted Signals mute state change volume event Signals volume change. Parameters Name Type Description params object params.volume integer New bolume level in percent Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.volume\", \"params\": { \"volume\": 100 } } muted event Signals mute state change. Parameters Name Type Description params object params.muted boolean New mute state (true: muted, false: un-muted) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.muted\", \"params\": { \"muted\": false } }","title":"VolumeControlAPI"},{"location":"VolumeControlAPI/#volumecontrol-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: VolumeControl interface for Thunder framework.","title":"VolumeControl API"},{"location":"VolumeControlAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"VolumeControlAPI/#introduction","text":"","title":"Introduction"},{"location":"VolumeControlAPI/#scope","text":"This document describes purpose and functionality of the VolumeControl interface. It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"VolumeControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"VolumeControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"VolumeControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"VolumeControlAPI/#description","text":"VolumeControl JSON-RPC interface.","title":"Description"},{"location":"VolumeControlAPI/#properties","text":"The following properties are provided by the VolumeControl interface: VolumeControl interface properties: Property Description muted Audio mute state volume Audio volume level","title":"Properties"},{"location":"VolumeControlAPI/#muted-property","text":"Provides access to the audio mute state.","title":"muted property"},{"location":"VolumeControlAPI/#value","text":"Name Type Description muted boolean Mute state (true: muted, false: un-muted)","title":"Value"},{"location":"VolumeControlAPI/#errors","text":"Code Message Description ERROR_GENERAL Failed to set/retrieve muting state","title":"Errors"},{"location":"VolumeControlAPI/#example","text":"","title":"Example"},{"location":"VolumeControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\" }","title":"Get Request"},{"location":"VolumeControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"VolumeControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\", \"params\": false }","title":"Set Request"},{"location":"VolumeControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"VolumeControlAPI/#volume-property","text":"Provides access to the audio volume level.","title":"volume property"},{"location":"VolumeControlAPI/#value_1","text":"Name Type Description volume integer Volume level in percent","title":"Value"},{"location":"VolumeControlAPI/#errors_1","text":"Code Message Description ERROR_GENERAL Failed to set/retrieve audio volume","title":"Errors"},{"location":"VolumeControlAPI/#example_1","text":"","title":"Example"},{"location":"VolumeControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\" }","title":"Get Request"},{"location":"VolumeControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 }","title":"Get Response"},{"location":"VolumeControlAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\", \"params\": 100 }","title":"Set Request"},{"location":"VolumeControlAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"VolumeControlAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the VolumeControl interface: VolumeControl interface events: Event Description volume Signals volume change muted Signals mute state change","title":"Notifications"},{"location":"VolumeControlAPI/#volume-event","text":"Signals volume change.","title":"volume event"},{"location":"VolumeControlAPI/#parameters","text":"Name Type Description params object params.volume integer New bolume level in percent","title":"Parameters"},{"location":"VolumeControlAPI/#example_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.volume\", \"params\": { \"volume\": 100 } }","title":"Example"},{"location":"VolumeControlAPI/#muted-event","text":"Signals mute state change.","title":"muted event"},{"location":"VolumeControlAPI/#parameters_1","text":"Name Type Description params object params.muted boolean New mute state (true: muted, false: un-muted)","title":"Parameters"},{"location":"VolumeControlAPI/#example_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.muted\", \"params\": { \"muted\": false } }","title":"Example"},{"location":"VolumeControlPlugin/","text":"Volume Control Plugin Version: 1.0 Status: :black_circle::black_circle::white_circle: VolumeControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Properties Notifications Introduction Scope This document describes purpose and functionality of the VolumeControl plugin. It includes detailed specification about its configuration, properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Volume Control plugin allows to manage system's audio volume. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: VolumeControl ) classname string Class name: VolumeControl locator string Library name: libWPEVolumeControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework Properties The following properties are provided by the VolumeControl plugin: VolumeControl interface properties: Property Description muted Audio mute state volume Audio volume level muted property Provides access to the audio mute state. Value Name Type Description muted boolean Mute state (true: muted, false: un-muted) Errors Code Message Description ERROR_GENERAL Failed to set/retrieve muting state Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } volume property Provides access to the audio volume level. Value Name Type Description volume integer Volume level in percent Errors Code Message Description ERROR_GENERAL Failed to set/retrieve audio volume Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\", \"params\": 100 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the VolumeControl plugin: VolumeControl interface events: Event Description volume Signals volume change muted Signals mute state change volume event Signals volume change. Parameters Name Type Description params object params.volume integer New bolume level in percent Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.volume\", \"params\": { \"volume\": 100 } } muted event Signals mute state change. Parameters Name Type Description params object params.muted boolean New mute state (true: muted, false: un-muted) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.muted\", \"params\": { \"muted\": false } }","title":"VolumeControlPlugin"},{"location":"VolumeControlPlugin/#volume-control-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::white_circle: VolumeControl plugin for Thunder framework.","title":"Volume Control Plugin"},{"location":"VolumeControlPlugin/#table-of-contents","text":"Introduction Description Configuration Properties Notifications","title":"Table of Contents"},{"location":"VolumeControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"VolumeControlPlugin/#scope","text":"This document describes purpose and functionality of the VolumeControl plugin. It includes detailed specification about its configuration, properties provided and notifications sent.","title":"Scope"},{"location":"VolumeControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"VolumeControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"VolumeControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"VolumeControlPlugin/#description","text":"The Volume Control plugin allows to manage system's audio volume. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"VolumeControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: VolumeControl ) classname string Class name: VolumeControl locator string Library name: libWPEVolumeControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework","title":"Configuration"},{"location":"VolumeControlPlugin/#properties","text":"The following properties are provided by the VolumeControl plugin: VolumeControl interface properties: Property Description muted Audio mute state volume Audio volume level","title":"Properties"},{"location":"VolumeControlPlugin/#muted-property","text":"Provides access to the audio mute state.","title":"muted property"},{"location":"VolumeControlPlugin/#value","text":"Name Type Description muted boolean Mute state (true: muted, false: un-muted)","title":"Value"},{"location":"VolumeControlPlugin/#errors","text":"Code Message Description ERROR_GENERAL Failed to set/retrieve muting state","title":"Errors"},{"location":"VolumeControlPlugin/#example","text":"","title":"Example"},{"location":"VolumeControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\" }","title":"Get Request"},{"location":"VolumeControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"VolumeControlPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\", \"params\": false }","title":"Set Request"},{"location":"VolumeControlPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"VolumeControlPlugin/#volume-property","text":"Provides access to the audio volume level.","title":"volume property"},{"location":"VolumeControlPlugin/#value_1","text":"Name Type Description volume integer Volume level in percent","title":"Value"},{"location":"VolumeControlPlugin/#errors_1","text":"Code Message Description ERROR_GENERAL Failed to set/retrieve audio volume","title":"Errors"},{"location":"VolumeControlPlugin/#example_1","text":"","title":"Example"},{"location":"VolumeControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\" }","title":"Get Request"},{"location":"VolumeControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 }","title":"Get Response"},{"location":"VolumeControlPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\", \"params\": 100 }","title":"Set Request"},{"location":"VolumeControlPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"VolumeControlPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the VolumeControl plugin: VolumeControl interface events: Event Description volume Signals volume change muted Signals mute state change","title":"Notifications"},{"location":"VolumeControlPlugin/#volume-event","text":"Signals volume change.","title":"volume event"},{"location":"VolumeControlPlugin/#parameters","text":"Name Type Description params object params.volume integer New bolume level in percent","title":"Parameters"},{"location":"VolumeControlPlugin/#example_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.volume\", \"params\": { \"volume\": 100 } }","title":"Example"},{"location":"VolumeControlPlugin/#muted-event","text":"Signals mute state change.","title":"muted event"},{"location":"VolumeControlPlugin/#parameters_1","text":"Name Type Description params object params.muted boolean New mute state (true: muted, false: un-muted)","title":"Parameters"},{"location":"VolumeControlPlugin/#example_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.muted\", \"params\": { \"muted\": false } }","title":"Example"},{"location":"WebBrowserAPI/","text":"WebBrowser API Version: 1.0 Status: :black_circle::white_circle::white_circle: WebBrowser interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the WebBrowser interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description WebBrowser JSON-RPC interface. Methods The following methods are provided by the WebBrowser interface: WebBrowser interface methods: Method Description collectgarbage Initiate garbage collection collectgarbage method Initiate garbage collection. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.collectgarbage\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the WebBrowser interface: WebBrowser interface properties: Property Description url Page loaded in the browser visibility Browser window visibility state fps RO Current framerate the browser is rendering at useragent UserAgent string used by the browser localstorageenabled Controls the local storage availability httpcookieacceptpolicy HTTP cookies accept policy bridgereply WO Response for legacy $badger bridgeevent WO Send legacy $badger event url property Provides access to the page loaded in the browser. Value Name Type Description url string Loaded URL Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://example.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.url\", \"params\": \"https://example.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the browser window visibility state. Value Name Type Description visible string Visiblity state (must be one of the following: hidden , visible ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"hidden\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.visibility\", \"params\": \"hidden\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current framerate the browser is rendering at. This property is read-only . Value Name Type Description fps integer Current FPS Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } useragent property Provides access to the userAgent string used by the browser. Value Name Type Description useragent string UserAgent value Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.useragent\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Mozilla/5.0 (Linux; x86_64 GNU/Linux) AppleWebKit/601.1 (KHTML, like Gecko) Version/8.0 Safari/601.1 WP\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.useragent\", \"params\": \"Mozilla/5.0 (Linux; x86_64 GNU/Linux) AppleWebKit/601.1 (KHTML, like Gecko) Version/8.0 Safari/601.1 WP\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } localstorageenabled property Provides access to the controls the local storage availability. Value Name Type Description enabled boolean Controls the local storage availability Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.localstorageenabled\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.localstorageenabled\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } httpcookieacceptpolicy property Provides access to the HTTP cookies accept policy. Value Name Type Description policy string HTTP Cookie Accept Policy Type (must be one of the following: always , never , onlyfrommaindocumentdomain , exclusivelyfrommaindocumentdomain ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.httpcookieacceptpolicy\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"always\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.httpcookieacceptpolicy\", \"params\": \"always\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } bridgereply property Provides access to the response for legacy $badger. This property is write-only . Value Name Type Description payload string base64 encoded JSON string response to be delivered to $badger.callback Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.bridgereply\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } bridgeevent property Provides access to the send legacy $badger event. This property is write-only . Value Name Type Description payload string base64 encoded JSON string response to be delivered to window.$badger.event Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.bridgeevent\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebBrowser interface: WebBrowser interface events: Event Description loadfinished Initial HTML document has been completely loaded and parsed loadfailed Browser failed to load page urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window loadfinished event Initial HTML document has been completely loaded and parsed. Parameters Name Type Description params object params.url string The URL that has been loaded params.httpstatus integer The response code of main resource request Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.loadfinished\", \"params\": { \"url\": \"https://example.com\", \"httpstatus\": 200 } } loadfailed event Browser failed to load page. Parameters Name Type Description params object params.url string The URL that has been failed to load Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.loadfailed\", \"params\": { \"url\": \"https://example.com\" } } urlchange event Signals a URL change in the browser. Parameters Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean loaded (true) or not (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://example.com\", \"loaded\": false } } visibilitychange event Signals a visibility change of the browser. Parameters Name Type Description params object params.hidden boolean hidden (true) or visible (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } } pageclosure event Notifies that the web page requests to close its window. Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.pageclosure\" }","title":"WebBrowserAPI"},{"location":"WebBrowserAPI/#webbrowser-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: WebBrowser interface for Thunder framework.","title":"WebBrowser API"},{"location":"WebBrowserAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"WebBrowserAPI/#introduction","text":"","title":"Introduction"},{"location":"WebBrowserAPI/#scope","text":"This document describes purpose and functionality of the WebBrowser interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"WebBrowserAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"WebBrowserAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"WebBrowserAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"WebBrowserAPI/#description","text":"WebBrowser JSON-RPC interface.","title":"Description"},{"location":"WebBrowserAPI/#methods","text":"The following methods are provided by the WebBrowser interface: WebBrowser interface methods: Method Description collectgarbage Initiate garbage collection","title":"Methods"},{"location":"WebBrowserAPI/#collectgarbage-method","text":"Initiate garbage collection.","title":"collectgarbage method"},{"location":"WebBrowserAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"WebBrowserAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"WebBrowserAPI/#example","text":"","title":"Example"},{"location":"WebBrowserAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.collectgarbage\" }","title":"Request"},{"location":"WebBrowserAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WebBrowserAPI/#properties","text":"The following properties are provided by the WebBrowser interface: WebBrowser interface properties: Property Description url Page loaded in the browser visibility Browser window visibility state fps RO Current framerate the browser is rendering at useragent UserAgent string used by the browser localstorageenabled Controls the local storage availability httpcookieacceptpolicy HTTP cookies accept policy bridgereply WO Response for legacy $badger bridgeevent WO Send legacy $badger event","title":"Properties"},{"location":"WebBrowserAPI/#url-property","text":"Provides access to the page loaded in the browser.","title":"url property"},{"location":"WebBrowserAPI/#value","text":"Name Type Description url string Loaded URL","title":"Value"},{"location":"WebBrowserAPI/#example_1","text":"","title":"Example"},{"location":"WebBrowserAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.url\" }","title":"Get Request"},{"location":"WebBrowserAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://example.com\" }","title":"Get Response"},{"location":"WebBrowserAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.url\", \"params\": \"https://example.com\" }","title":"Set Request"},{"location":"WebBrowserAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebBrowserAPI/#visibility-property","text":"Provides access to the browser window visibility state.","title":"visibility property"},{"location":"WebBrowserAPI/#value_1","text":"Name Type Description visible string Visiblity state (must be one of the following: hidden , visible )","title":"Value"},{"location":"WebBrowserAPI/#example_2","text":"","title":"Example"},{"location":"WebBrowserAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.visibility\" }","title":"Get Request"},{"location":"WebBrowserAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"hidden\" }","title":"Get Response"},{"location":"WebBrowserAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.visibility\", \"params\": \"hidden\" }","title":"Set Request"},{"location":"WebBrowserAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebBrowserAPI/#fps-property","text":"Provides access to the current framerate the browser is rendering at. This property is read-only .","title":"fps property"},{"location":"WebBrowserAPI/#value_2","text":"Name Type Description fps integer Current FPS","title":"Value"},{"location":"WebBrowserAPI/#example_3","text":"","title":"Example"},{"location":"WebBrowserAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.fps\" }","title":"Get Request"},{"location":"WebBrowserAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"WebBrowserAPI/#useragent-property","text":"Provides access to the userAgent string used by the browser.","title":"useragent property"},{"location":"WebBrowserAPI/#value_3","text":"Name Type Description useragent string UserAgent value","title":"Value"},{"location":"WebBrowserAPI/#example_4","text":"","title":"Example"},{"location":"WebBrowserAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.useragent\" }","title":"Get Request"},{"location":"WebBrowserAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Mozilla/5.0 (Linux; x86_64 GNU/Linux) AppleWebKit/601.1 (KHTML, like Gecko) Version/8.0 Safari/601.1 WP\" }","title":"Get Response"},{"location":"WebBrowserAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.useragent\", \"params\": \"Mozilla/5.0 (Linux; x86_64 GNU/Linux) AppleWebKit/601.1 (KHTML, like Gecko) Version/8.0 Safari/601.1 WP\" }","title":"Set Request"},{"location":"WebBrowserAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebBrowserAPI/#localstorageenabled-property","text":"Provides access to the controls the local storage availability.","title":"localstorageenabled property"},{"location":"WebBrowserAPI/#value_4","text":"Name Type Description enabled boolean Controls the local storage availability","title":"Value"},{"location":"WebBrowserAPI/#example_5","text":"","title":"Example"},{"location":"WebBrowserAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.localstorageenabled\" }","title":"Get Request"},{"location":"WebBrowserAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"WebBrowserAPI/#set-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.localstorageenabled\", \"params\": false }","title":"Set Request"},{"location":"WebBrowserAPI/#set-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebBrowserAPI/#httpcookieacceptpolicy-property","text":"Provides access to the HTTP cookies accept policy.","title":"httpcookieacceptpolicy property"},{"location":"WebBrowserAPI/#value_5","text":"Name Type Description policy string HTTP Cookie Accept Policy Type (must be one of the following: always , never , onlyfrommaindocumentdomain , exclusivelyfrommaindocumentdomain )","title":"Value"},{"location":"WebBrowserAPI/#example_6","text":"","title":"Example"},{"location":"WebBrowserAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.httpcookieacceptpolicy\" }","title":"Get Request"},{"location":"WebBrowserAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"always\" }","title":"Get Response"},{"location":"WebBrowserAPI/#set-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.httpcookieacceptpolicy\", \"params\": \"always\" }","title":"Set Request"},{"location":"WebBrowserAPI/#set-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebBrowserAPI/#bridgereply-property","text":"Provides access to the response for legacy $badger. This property is write-only .","title":"bridgereply property"},{"location":"WebBrowserAPI/#value_6","text":"Name Type Description payload string base64 encoded JSON string response to be delivered to $badger.callback","title":"Value"},{"location":"WebBrowserAPI/#example_7","text":"","title":"Example"},{"location":"WebBrowserAPI/#set-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.bridgereply\", \"params\": \"...\" }","title":"Set Request"},{"location":"WebBrowserAPI/#set-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebBrowserAPI/#bridgeevent-property","text":"Provides access to the send legacy $badger event. This property is write-only .","title":"bridgeevent property"},{"location":"WebBrowserAPI/#value_7","text":"Name Type Description payload string base64 encoded JSON string response to be delivered to window.$badger.event","title":"Value"},{"location":"WebBrowserAPI/#example_8","text":"","title":"Example"},{"location":"WebBrowserAPI/#set-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.bridgeevent\", \"params\": \"...\" }","title":"Set Request"},{"location":"WebBrowserAPI/#set-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebBrowserAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebBrowser interface: WebBrowser interface events: Event Description loadfinished Initial HTML document has been completely loaded and parsed loadfailed Browser failed to load page urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window","title":"Notifications"},{"location":"WebBrowserAPI/#loadfinished-event","text":"Initial HTML document has been completely loaded and parsed.","title":"loadfinished event"},{"location":"WebBrowserAPI/#parameters_1","text":"Name Type Description params object params.url string The URL that has been loaded params.httpstatus integer The response code of main resource request","title":"Parameters"},{"location":"WebBrowserAPI/#example_9","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.loadfinished\", \"params\": { \"url\": \"https://example.com\", \"httpstatus\": 200 } }","title":"Example"},{"location":"WebBrowserAPI/#loadfailed-event","text":"Browser failed to load page.","title":"loadfailed event"},{"location":"WebBrowserAPI/#parameters_2","text":"Name Type Description params object params.url string The URL that has been failed to load","title":"Parameters"},{"location":"WebBrowserAPI/#example_10","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.loadfailed\", \"params\": { \"url\": \"https://example.com\" } }","title":"Example"},{"location":"WebBrowserAPI/#urlchange-event","text":"Signals a URL change in the browser.","title":"urlchange event"},{"location":"WebBrowserAPI/#parameters_3","text":"Name Type Description params object params.url string The URL that has been loaded or requested params.loaded boolean loaded (true) or not (false)","title":"Parameters"},{"location":"WebBrowserAPI/#example_11","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.urlchange\", \"params\": { \"url\": \"https://example.com\", \"loaded\": false } }","title":"Example"},{"location":"WebBrowserAPI/#visibilitychange-event","text":"Signals a visibility change of the browser.","title":"visibilitychange event"},{"location":"WebBrowserAPI/#parameters_4","text":"Name Type Description params object params.hidden boolean hidden (true) or visible (false)","title":"Parameters"},{"location":"WebBrowserAPI/#example_12","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Example"},{"location":"WebBrowserAPI/#pageclosure-event","text":"Notifies that the web page requests to close its window.","title":"pageclosure event"},{"location":"WebBrowserAPI/#parameters_5","text":"This event carries no parameters.","title":"Parameters"},{"location":"WebBrowserAPI/#example_13","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.pageclosure\" }","title":"Example"},{"location":"WebKitBrowserAPI/","text":"WebKit Browser API Version: 1.0 Status: :black_circle::white_circle::white_circle: WebKitBrowser interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the WebKitBrowser interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description WebKitBrowser JSON-RPC interface. Methods The following methods are provided by the WebKitBrowser interface: WebKitBrowser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the WebKitBrowser interface: WebKitBrowser interface properties: Property Description languages User preferred languages headers Headers to send on all requests that the browser makes StateControl interface properties: Property Description state Running state of the service languages property Provides access to the user preferred languages. Value Name Type Description (property) array User preferred languages (property)[#] string Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"en-US\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\", \"params\": [ \"en-US\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } headers property Provides access to the headers to send on all requests that the browser makes. Value Name Type Description (property) array Headers to send on all requests that the browser makes (property)[#] object (property)[#]?.name string (optional) Header name (property)[#]?.value string (optional) Header value Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\", \"params\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebKitBrowser interface: WebKitBrowser interface events: Event Description bridgequery A Base64 encoded JSON message from legacy $badger bridge StateControl interface events: Event Description statechange Signals a state change of the service bridgequery event A Base64 encoded JSON message from legacy $badger bridge. This API is obsolete . It is no longer recommended for use in new implementations. Parameters Name Type Description params string Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.bridgequery\", \"params\": \"...\" } statechange event Signals a state change of the service. Parameters Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"WebKitBrowserAPI"},{"location":"WebKitBrowserAPI/#webkit-browser-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: WebKitBrowser interface for Thunder framework.","title":"WebKit Browser API"},{"location":"WebKitBrowserAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"WebKitBrowserAPI/#introduction","text":"","title":"Introduction"},{"location":"WebKitBrowserAPI/#scope","text":"This document describes purpose and functionality of the WebKitBrowser interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"WebKitBrowserAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"WebKitBrowserAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"WebKitBrowserAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"WebKitBrowserAPI/#description","text":"WebKitBrowser JSON-RPC interface.","title":"Description"},{"location":"WebKitBrowserAPI/#methods","text":"The following methods are provided by the WebKitBrowser interface: WebKitBrowser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"WebKitBrowserAPI/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"WebKitBrowserAPI/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"WebKitBrowserAPI/#parameters","text":"Name Type Description params object params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"WebKitBrowserAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"WebKitBrowserAPI/#errors","text":"Code Message Description 22 ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"WebKitBrowserAPI/#example","text":"","title":"Example"},{"location":"WebKitBrowserAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"WebKitBrowserAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WebKitBrowserAPI/#properties","text":"The following properties are provided by the WebKitBrowser interface: WebKitBrowser interface properties: Property Description languages User preferred languages headers Headers to send on all requests that the browser makes StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"WebKitBrowserAPI/#languages-property","text":"Provides access to the user preferred languages.","title":"languages property"},{"location":"WebKitBrowserAPI/#value","text":"Name Type Description (property) array User preferred languages (property)[#] string","title":"Value"},{"location":"WebKitBrowserAPI/#example_1","text":"","title":"Example"},{"location":"WebKitBrowserAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\" }","title":"Get Request"},{"location":"WebKitBrowserAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"en-US\" ] }","title":"Get Response"},{"location":"WebKitBrowserAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\", \"params\": [ \"en-US\" ] }","title":"Set Request"},{"location":"WebKitBrowserAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebKitBrowserAPI/#headers-property","text":"Provides access to the headers to send on all requests that the browser makes.","title":"headers property"},{"location":"WebKitBrowserAPI/#value_1","text":"Name Type Description (property) array Headers to send on all requests that the browser makes (property)[#] object (property)[#]?.name string (optional) Header name (property)[#]?.value string (optional) Header value","title":"Value"},{"location":"WebKitBrowserAPI/#example_2","text":"","title":"Example"},{"location":"WebKitBrowserAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\" }","title":"Get Request"},{"location":"WebKitBrowserAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] }","title":"Get Response"},{"location":"WebKitBrowserAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\", \"params\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] }","title":"Set Request"},{"location":"WebKitBrowserAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebKitBrowserAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"WebKitBrowserAPI/#value_2","text":"Name Type Description (property) string Running state of the service (must be one of the following: resumed , suspended )","title":"Value"},{"location":"WebKitBrowserAPI/#example_3","text":"","title":"Example"},{"location":"WebKitBrowserAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\" }","title":"Get Request"},{"location":"WebKitBrowserAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"WebKitBrowserAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"WebKitBrowserAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WebKitBrowserAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebKitBrowser interface: WebKitBrowser interface events: Event Description bridgequery A Base64 encoded JSON message from legacy $badger bridge StateControl interface events: Event Description statechange Signals a state change of the service","title":"Notifications"},{"location":"WebKitBrowserAPI/#bridgequery-event","text":"A Base64 encoded JSON message from legacy $badger bridge. This API is obsolete . It is no longer recommended for use in new implementations.","title":"bridgequery event"},{"location":"WebKitBrowserAPI/#parameters_1","text":"Name Type Description params string","title":"Parameters"},{"location":"WebKitBrowserAPI/#example_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.bridgequery\", \"params\": \"...\" }","title":"Example"},{"location":"WebKitBrowserAPI/#statechange-event","text":"Signals a state change of the service.","title":"statechange event"},{"location":"WebKitBrowserAPI/#parameters_2","text":"Name Type Description params object params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"WebKitBrowserAPI/#example_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.statechange\", \"params\": { \"suspended\": false } }","title":"Example"},{"location":"WebPAPlugin/","text":"WebPA Plugin Version: 1.0 Status: :black_circle::white_circle::white_circle: WebPA plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the WebPA plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The WebPA plugin provides web browsing functionality based on the WebPA engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WebPA ) classname string Class name: WebPA locator string Library name: libWPEFrameworkWebPA.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.interface string (optional) Interface configuration?.pingwaittime string (optional) Ping waittime timout configuration?.webpaurl string (optional) WebPA url configuration?.paroduslocalurl string (optional) Parodus local url configuration?.partnerid string (optional) Partner id configuration?.webpabackoffmax string (optional) WebPA backoff max configuration?.sslcertpath string (optional) Path of SSL certification configuration?.forceipv4 string (optional) Force IPv4 configuration?.location string (optional) Location","title":"WebPAPlugin"},{"location":"WebPAPlugin/#webpa-plugin","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: WebPA plugin for Thunder framework.","title":"WebPA Plugin"},{"location":"WebPAPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"WebPAPlugin/#introduction","text":"","title":"Introduction"},{"location":"WebPAPlugin/#scope","text":"This document describes purpose and functionality of the WebPA plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"WebPAPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"WebPAPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"WebPAPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"WebPAPlugin/#description","text":"The WebPA plugin provides web browsing functionality based on the WebPA engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"WebPAPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WebPA ) classname string Class name: WebPA locator string Library name: libWPEFrameworkWebPA.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.interface string (optional) Interface configuration?.pingwaittime string (optional) Ping waittime timout configuration?.webpaurl string (optional) WebPA url configuration?.paroduslocalurl string (optional) Parodus local url configuration?.partnerid string (optional) Partner id configuration?.webpabackoffmax string (optional) WebPA backoff max configuration?.sslcertpath string (optional) Path of SSL certification configuration?.forceipv4 string (optional) Force IPv4 configuration?.location string (optional) Location","title":"Configuration"},{"location":"WiFiControlAPI/","text":"WiFi Control API Version: 1.0 Status: :black_circle::white_circle::white_circle: WifiControl interface for Thunder framework. Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the WifiControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description WifiControl JSON-RPC interface. Methods The following methods are provided by the WifiControl interface: WifiControl interface methods: Method Description delete Forgets the configuration of a network store Stores the configurations in persistent storage scan Searches for available networks connect Attempts connection to a network disconnect Disconnects from a network delete method Forgets the configuration of a network. Parameters Name Type Description params object params.ssid string Identifier of a network Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Returned when unable to update config list stored on disk Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.delete\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } store method Stores the configurations in persistent storage. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 40 ERROR_WRITE_ERROR Returned when the operation failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.store\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } scan method Searches for available networks. Also see: scanresults Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Returned when scan is already in progress 2 ERROR_UNAVAILABLE Returned when scanning is not available for some reason Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.scan\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } connect method Attempts connection to a network. Also see: connectionchange Parameters Name Type Description params object params.ssid string Identifier of a network Result Name Type Description result null Always null Errors Code Message Description 43 ERROR_NOT_EXIST Returned when the network with a the given SSID doesn't exists 22 ERROR_UNKNOWN_KEY Returned when the network with a the given security type doesn't exists 2 ERROR_UNAVAILABLE Returned when connection fails if there is no associated bssid to connect and not defined as AccessPoint. Rescan and try to connect 38 ERROR_INVALID_SIGNATURE Returned when connection is attempted with wrong password 9 ERROR_ALREADY_CONNECTED Returned when connection already exists 4 ERROR_ASYNC_ABORTED Returned when connection attempt fails for other reasons Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.connect\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } disconnect method Disconnects from a network. Also see: connectionchange Parameters Name Type Description params object params.ssid string Identifier of a network Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Returned when the network with a the given SSID doesn't exists 4 ERROR_ASYNC_ABORTED Returned when disconnection attempt fails for other reasons Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.disconnect\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the WifiControl interface: WifiControl interface properties: Property Description status RO Network status networks RO Available networks configs RO All WiFi configurations config Single WiFi configuration debug WO Sets debug level status property Provides access to the network status. This property is read-only . Value Name Type Description (property) object Network status (property).connected string Identifier of the connected network (property).scanning boolean Indicates whether a scanning for available network is in progress Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.status\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"connected\": \"MyCorporateNetwork\", \"scanning\": false } } networks property Provides access to the available networks. This property is read-only . Value Name Type Description (property) array Available networks (property)[#] object (property)[#].ssid string Identifier of a network (property)[#].pairs array (property)[#].pairs[#] object (property)[#].pairs[#].method string Encryption method used by the network (property)[#].pairs[#].keys array (property)[#].pairs[#].keys[#] string Types of supported keys (property)[#]?.bssid string (optional) 48-bits long BSS identifier (might be MAC format) (property)[#].frequency number Network's frequency in MHz (property)[#].signal number Network's signal level in dBm Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.networks\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"MyCorporateNetwork\", \"pairs\": [ { \"method\": \"WPA\", \"keys\": [ \"psk\" ] } ], \"bssid\": \"94:b4:0f:77:cc:71\", \"frequency\": 5180, \"signal\": -44 } ] } configs property Provides access to the all WiFi configurations. This property is read-only . Value Name Type Description (property) array All WiFi configurations (property)[#] object (property)[#].ssid string Identifier of a network (property)[#]?.type string (optional) Type of protection. WPA_WPA2 means WPA, WPA2 and mixed types are allowed (must be one of the following: Unknown , Unsecure , WPA , WPA2 , WPA_WPA2 , Enterprise ) (property)[#].hidden boolean Indicates whether a network is hidden (property)[#].accesspoint boolean Indicates if the network operates in AP mode (property)[#]?.psk string (optional) Network's PSK in plaintext (irrelevant if hash is provided) (property)[#]?.hash string (optional) Network's PSK as a hash (property)[#].identity string User credentials (username part) for EAP (property)[#].password string User credentials (password part) for EAP Errors Code Message Description 22 ERROR_UNKNOWN_KEY Configuration does not exist Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.configs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } ] } config property Provides access to the single WiFi configuration. Value Name Type Description (property) object Single WiFi configuration (property).ssid string Identifier of a network (property)?.type string (optional) Type of protection. WPA_WPA2 means WPA, WPA2 and mixed types are allowed (must be one of the following: Unknown , Unsecure , WPA , WPA2 , WPA_WPA2 , Enterprise ) (property).hidden boolean Indicates whether a network is hidden (property).accesspoint boolean Indicates if the network operates in AP mode (property)?.psk string (optional) Network's PSK in plaintext (irrelevant if hash is provided) (property)?.hash string (optional) Network's PSK as a hash (property).identity string User credentials (username part) for EAP (property).password string User credentials (password part) for EAP The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.config@MyCorporateNetwork . If not specified all configurations are returned. Errors Code Message Description 22 ERROR_UNKNOWN_KEY Configuration does not exist 23 ERROR_INCOMPLETE_CONFIG Passed in configuration is invalid Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@MyCorporateNetwork\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@MyCorporateNetwork\", \"params\": { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } debug property Provides access to the sets debug level. This property is write-only . Value Name Type Description (property) number Debug level Errors Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.debug\", \"params\": 0 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WifiControl interface: WifiControl interface events: Event Description scanresults Signals that the scan operation has finished networkchange Signals that a network property has changed connectionchange Notifies about connection state change scanresults event Signals that the scan operation has finished. Parameters Name Type Description params array params[#] object params[#].ssid string Identifier of a network params[#].pairs array params[#].pairs[#] object params[#].pairs[#].method string Encryption method used by the network params[#].pairs[#].keys array params[#].pairs[#].keys[#] string Types of supported keys params[#]?.bssid string (optional) 48-bits long BSS identifier (might be MAC format) params[#].frequency number Network's frequency in MHz params[#].signal number Network's signal level in dBm Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scanresults\", \"params\": [ { \"ssid\": \"MyCorporateNetwork\", \"pairs\": [ { \"method\": \"WPA\", \"keys\": [ \"psk\" ] } ], \"bssid\": \"94:b4:0f:77:cc:71\", \"frequency\": 5180, \"signal\": -44 } ] } networkchange event Signals that a network property has changed. e.g. frequency. Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.networkchange\" } connectionchange event Notifies about connection state change. i.e. connected/disconnected. Parameters Name Type Description params string SSID of the connected network in case of connect or empty in case of disconnect Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.connectionchange\", \"params\": \"MyCorporateNetwork\" }","title":"WiFiControlAPI"},{"location":"WiFiControlAPI/#wifi-control-api","text":"Version: 1.0 Status: :black_circle::white_circle::white_circle: WifiControl interface for Thunder framework.","title":"WiFi Control API"},{"location":"WiFiControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"WiFiControlAPI/#introduction","text":"","title":"Introduction"},{"location":"WiFiControlAPI/#scope","text":"This document describes purpose and functionality of the WifiControl interface. It includes detailed specification about its methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"WiFiControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"WiFiControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"WiFiControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"WiFiControlAPI/#description","text":"WifiControl JSON-RPC interface.","title":"Description"},{"location":"WiFiControlAPI/#methods","text":"The following methods are provided by the WifiControl interface: WifiControl interface methods: Method Description delete Forgets the configuration of a network store Stores the configurations in persistent storage scan Searches for available networks connect Attempts connection to a network disconnect Disconnects from a network","title":"Methods"},{"location":"WiFiControlAPI/#delete-method","text":"Forgets the configuration of a network.","title":"delete method"},{"location":"WiFiControlAPI/#parameters","text":"Name Type Description params object params.ssid string Identifier of a network","title":"Parameters"},{"location":"WiFiControlAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"WiFiControlAPI/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Returned when unable to update config list stored on disk","title":"Errors"},{"location":"WiFiControlAPI/#example","text":"","title":"Example"},{"location":"WiFiControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.delete\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } }","title":"Request"},{"location":"WiFiControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WiFiControlAPI/#store-method","text":"Stores the configurations in persistent storage.","title":"store method"},{"location":"WiFiControlAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"WiFiControlAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"WiFiControlAPI/#errors_1","text":"Code Message Description 40 ERROR_WRITE_ERROR Returned when the operation failed","title":"Errors"},{"location":"WiFiControlAPI/#example_1","text":"","title":"Example"},{"location":"WiFiControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.store\" }","title":"Request"},{"location":"WiFiControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WiFiControlAPI/#scan-method","text":"Searches for available networks. Also see: scanresults","title":"scan method"},{"location":"WiFiControlAPI/#parameters_2","text":"This method takes no parameters.","title":"Parameters"},{"location":"WiFiControlAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"WiFiControlAPI/#errors_2","text":"Code Message Description 12 ERROR_INPROGRESS Returned when scan is already in progress 2 ERROR_UNAVAILABLE Returned when scanning is not available for some reason","title":"Errors"},{"location":"WiFiControlAPI/#example_2","text":"","title":"Example"},{"location":"WiFiControlAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.scan\" }","title":"Request"},{"location":"WiFiControlAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WiFiControlAPI/#connect-method","text":"Attempts connection to a network. Also see: connectionchange","title":"connect method"},{"location":"WiFiControlAPI/#parameters_3","text":"Name Type Description params object params.ssid string Identifier of a network","title":"Parameters"},{"location":"WiFiControlAPI/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"WiFiControlAPI/#errors_3","text":"Code Message Description 43 ERROR_NOT_EXIST Returned when the network with a the given SSID doesn't exists 22 ERROR_UNKNOWN_KEY Returned when the network with a the given security type doesn't exists 2 ERROR_UNAVAILABLE Returned when connection fails if there is no associated bssid to connect and not defined as AccessPoint. Rescan and try to connect 38 ERROR_INVALID_SIGNATURE Returned when connection is attempted with wrong password 9 ERROR_ALREADY_CONNECTED Returned when connection already exists 4 ERROR_ASYNC_ABORTED Returned when connection attempt fails for other reasons","title":"Errors"},{"location":"WiFiControlAPI/#example_3","text":"","title":"Example"},{"location":"WiFiControlAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.connect\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } }","title":"Request"},{"location":"WiFiControlAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WiFiControlAPI/#disconnect-method","text":"Disconnects from a network. Also see: connectionchange","title":"disconnect method"},{"location":"WiFiControlAPI/#parameters_4","text":"Name Type Description params object params.ssid string Identifier of a network","title":"Parameters"},{"location":"WiFiControlAPI/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"WiFiControlAPI/#errors_4","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Returned when the network with a the given SSID doesn't exists 4 ERROR_ASYNC_ABORTED Returned when disconnection attempt fails for other reasons","title":"Errors"},{"location":"WiFiControlAPI/#example_4","text":"","title":"Example"},{"location":"WiFiControlAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.disconnect\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } }","title":"Request"},{"location":"WiFiControlAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WiFiControlAPI/#properties","text":"The following properties are provided by the WifiControl interface: WifiControl interface properties: Property Description status RO Network status networks RO Available networks configs RO All WiFi configurations config Single WiFi configuration debug WO Sets debug level","title":"Properties"},{"location":"WiFiControlAPI/#status-property","text":"Provides access to the network status. This property is read-only .","title":"status property"},{"location":"WiFiControlAPI/#value","text":"Name Type Description (property) object Network status (property).connected string Identifier of the connected network (property).scanning boolean Indicates whether a scanning for available network is in progress","title":"Value"},{"location":"WiFiControlAPI/#example_5","text":"","title":"Example"},{"location":"WiFiControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.status\" }","title":"Get Request"},{"location":"WiFiControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"connected\": \"MyCorporateNetwork\", \"scanning\": false } }","title":"Get Response"},{"location":"WiFiControlAPI/#networks-property","text":"Provides access to the available networks. This property is read-only .","title":"networks property"},{"location":"WiFiControlAPI/#value_1","text":"Name Type Description (property) array Available networks (property)[#] object (property)[#].ssid string Identifier of a network (property)[#].pairs array (property)[#].pairs[#] object (property)[#].pairs[#].method string Encryption method used by the network (property)[#].pairs[#].keys array (property)[#].pairs[#].keys[#] string Types of supported keys (property)[#]?.bssid string (optional) 48-bits long BSS identifier (might be MAC format) (property)[#].frequency number Network's frequency in MHz (property)[#].signal number Network's signal level in dBm","title":"Value"},{"location":"WiFiControlAPI/#example_6","text":"","title":"Example"},{"location":"WiFiControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.networks\" }","title":"Get Request"},{"location":"WiFiControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"MyCorporateNetwork\", \"pairs\": [ { \"method\": \"WPA\", \"keys\": [ \"psk\" ] } ], \"bssid\": \"94:b4:0f:77:cc:71\", \"frequency\": 5180, \"signal\": -44 } ] }","title":"Get Response"},{"location":"WiFiControlAPI/#configs-property","text":"Provides access to the all WiFi configurations. This property is read-only .","title":"configs property"},{"location":"WiFiControlAPI/#value_2","text":"Name Type Description (property) array All WiFi configurations (property)[#] object (property)[#].ssid string Identifier of a network (property)[#]?.type string (optional) Type of protection. WPA_WPA2 means WPA, WPA2 and mixed types are allowed (must be one of the following: Unknown , Unsecure , WPA , WPA2 , WPA_WPA2 , Enterprise ) (property)[#].hidden boolean Indicates whether a network is hidden (property)[#].accesspoint boolean Indicates if the network operates in AP mode (property)[#]?.psk string (optional) Network's PSK in plaintext (irrelevant if hash is provided) (property)[#]?.hash string (optional) Network's PSK as a hash (property)[#].identity string User credentials (username part) for EAP (property)[#].password string User credentials (password part) for EAP","title":"Value"},{"location":"WiFiControlAPI/#errors_5","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Configuration does not exist","title":"Errors"},{"location":"WiFiControlAPI/#example_7","text":"","title":"Example"},{"location":"WiFiControlAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.configs\" }","title":"Get Request"},{"location":"WiFiControlAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } ] }","title":"Get Response"},{"location":"WiFiControlAPI/#config-property","text":"Provides access to the single WiFi configuration.","title":"config property"},{"location":"WiFiControlAPI/#value_3","text":"Name Type Description (property) object Single WiFi configuration (property).ssid string Identifier of a network (property)?.type string (optional) Type of protection. WPA_WPA2 means WPA, WPA2 and mixed types are allowed (must be one of the following: Unknown , Unsecure , WPA , WPA2 , WPA_WPA2 , Enterprise ) (property).hidden boolean Indicates whether a network is hidden (property).accesspoint boolean Indicates if the network operates in AP mode (property)?.psk string (optional) Network's PSK in plaintext (irrelevant if hash is provided) (property)?.hash string (optional) Network's PSK as a hash (property).identity string User credentials (username part) for EAP (property).password string User credentials (password part) for EAP The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.config@MyCorporateNetwork . If not specified all configurations are returned.","title":"Value"},{"location":"WiFiControlAPI/#errors_6","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Configuration does not exist 23 ERROR_INCOMPLETE_CONFIG Passed in configuration is invalid","title":"Errors"},{"location":"WiFiControlAPI/#example_8","text":"","title":"Example"},{"location":"WiFiControlAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@MyCorporateNetwork\" }","title":"Get Request"},{"location":"WiFiControlAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } }","title":"Get Response"},{"location":"WiFiControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@MyCorporateNetwork\", \"params\": { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } }","title":"Set Request"},{"location":"WiFiControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WiFiControlAPI/#debug-property","text":"Provides access to the sets debug level. This property is write-only .","title":"debug property"},{"location":"WiFiControlAPI/#value_4","text":"Name Type Description (property) number Debug level","title":"Value"},{"location":"WiFiControlAPI/#errors_7","text":"Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"WiFiControlAPI/#example_9","text":"","title":"Example"},{"location":"WiFiControlAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.debug\", \"params\": 0 }","title":"Set Request"},{"location":"WiFiControlAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WiFiControlAPI/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WifiControl interface: WifiControl interface events: Event Description scanresults Signals that the scan operation has finished networkchange Signals that a network property has changed connectionchange Notifies about connection state change","title":"Notifications"},{"location":"WiFiControlAPI/#scanresults-event","text":"Signals that the scan operation has finished.","title":"scanresults event"},{"location":"WiFiControlAPI/#parameters_5","text":"Name Type Description params array params[#] object params[#].ssid string Identifier of a network params[#].pairs array params[#].pairs[#] object params[#].pairs[#].method string Encryption method used by the network params[#].pairs[#].keys array params[#].pairs[#].keys[#] string Types of supported keys params[#]?.bssid string (optional) 48-bits long BSS identifier (might be MAC format) params[#].frequency number Network's frequency in MHz params[#].signal number Network's signal level in dBm","title":"Parameters"},{"location":"WiFiControlAPI/#example_10","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scanresults\", \"params\": [ { \"ssid\": \"MyCorporateNetwork\", \"pairs\": [ { \"method\": \"WPA\", \"keys\": [ \"psk\" ] } ], \"bssid\": \"94:b4:0f:77:cc:71\", \"frequency\": 5180, \"signal\": -44 } ] }","title":"Example"},{"location":"WiFiControlAPI/#networkchange-event","text":"Signals that a network property has changed. e.g. frequency.","title":"networkchange event"},{"location":"WiFiControlAPI/#parameters_6","text":"This event carries no parameters.","title":"Parameters"},{"location":"WiFiControlAPI/#example_11","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.networkchange\" }","title":"Example"},{"location":"WiFiControlAPI/#connectionchange-event","text":"Notifies about connection state change. i.e. connected/disconnected.","title":"connectionchange event"},{"location":"WiFiControlAPI/#parameters_7","text":"Name Type Description params string SSID of the connected network in case of connect or empty in case of disconnect","title":"Parameters"},{"location":"WiFiControlAPI/#example_12","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.connectionchange\", \"params\": \"MyCorporateNetwork\" }","title":"Example"},{"location":"WifiControlPlugin/","text":"Wifi Control Plugin Version: 1.0 Status: :black_circle::black_circle::white_circle: WifiControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the WifiControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The WiFi Control plugin allows to manage various aspects of wireless connectivity. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WifiControl ) classname string Class name: WifiControl locator string Library name: libWPEWifiControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.connector string (optional) Connector name configuration?.interface string (optional) Interface name configuration?.application string (optional) Application name configuration?.preferred string (optional) Preferred configuration?.autoconnect string (optional) Enable autoconnect configuration?.retryinterval string (optional) Retry interval Methods The following methods are provided by the WifiControl plugin: WifiControl interface methods: Method Description delete Forgets the configuration of a network store Stores the configurations in persistent storage scan Searches for available networks connect Attempts connection to a network disconnect Disconnects from a network delete method Forgets the configuration of a network. Parameters Name Type Description params object params.ssid string Identifier of a network Result Name Type Description result null Always null Errors Code Message Description 2 ERROR_UNAVAILABLE Returned when unable to update config list stored on disk Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.delete\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } store method Stores the configurations in persistent storage. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 40 ERROR_WRITE_ERROR Returned when the operation failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.store\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } scan method Searches for available networks. Also see: scanresults Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Code Message Description 12 ERROR_INPROGRESS Returned when scan is already in progress 2 ERROR_UNAVAILABLE Returned when scanning is not available for some reason Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.scan\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } connect method Attempts connection to a network. Also see: connectionchange Parameters Name Type Description params object params.ssid string Identifier of a network Result Name Type Description result null Always null Errors Code Message Description 43 ERROR_NOT_EXIST Returned when the network with a the given SSID doesn't exists 22 ERROR_UNKNOWN_KEY Returned when the network with a the given security type doesn't exists 2 ERROR_UNAVAILABLE Returned when connection fails if there is no associated bssid to connect and not defined as AccessPoint. Rescan and try to connect 38 ERROR_INVALID_SIGNATURE Returned when connection is attempted with wrong password 9 ERROR_ALREADY_CONNECTED Returned when connection already exists 4 ERROR_ASYNC_ABORTED Returned when connection attempt fails for other reasons Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.connect\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } disconnect method Disconnects from a network. Also see: connectionchange Parameters Name Type Description params object params.ssid string Identifier of a network Result Name Type Description result null Always null Errors Code Message Description 22 ERROR_UNKNOWN_KEY Returned when the network with a the given SSID doesn't exists 4 ERROR_ASYNC_ABORTED Returned when disconnection attempt fails for other reasons Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.disconnect\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the WifiControl plugin: WifiControl interface properties: Property Description status RO Network status networks RO Available networks configs RO All WiFi configurations config Single WiFi configuration debug WO Sets debug level status property Provides access to the network status. This property is read-only . Value Name Type Description (property) object Network status (property).connected string Identifier of the connected network (property).scanning boolean Indicates whether a scanning for available network is in progress Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.status\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"connected\": \"MyCorporateNetwork\", \"scanning\": false } } networks property Provides access to the available networks. This property is read-only . Value Name Type Description (property) array Available networks (property)[#] object (property)[#].ssid string Identifier of a network (property)[#].pairs array (property)[#].pairs[#] object (property)[#].pairs[#].method string Encryption method used by the network (property)[#].pairs[#].keys array (property)[#].pairs[#].keys[#] string Types of supported keys (property)[#]?.bssid string (optional) 48-bits long BSS identifier (might be MAC format) (property)[#].frequency number Network's frequency in MHz (property)[#].signal number Network's signal level in dBm Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.networks\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"MyCorporateNetwork\", \"pairs\": [ { \"method\": \"WPA\", \"keys\": [ \"psk\" ] } ], \"bssid\": \"94:b4:0f:77:cc:71\", \"frequency\": 5180, \"signal\": -44 } ] } configs property Provides access to the all WiFi configurations. This property is read-only . Value Name Type Description (property) array All WiFi configurations (property)[#] object (property)[#].ssid string Identifier of a network (property)[#]?.type string (optional) Type of protection. WPA_WPA2 means WPA, WPA2 and mixed types are allowed (must be one of the following: Unknown , Unsecure , WPA , WPA2 , WPA_WPA2 , Enterprise ) (property)[#].hidden boolean Indicates whether a network is hidden (property)[#].accesspoint boolean Indicates if the network operates in AP mode (property)[#]?.psk string (optional) Network's PSK in plaintext (irrelevant if hash is provided) (property)[#]?.hash string (optional) Network's PSK as a hash (property)[#].identity string User credentials (username part) for EAP (property)[#].password string User credentials (password part) for EAP Errors Code Message Description 22 ERROR_UNKNOWN_KEY Configuration does not exist Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.configs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } ] } config property Provides access to the single WiFi configuration. Value Name Type Description (property) object Single WiFi configuration (property).ssid string Identifier of a network (property)?.type string (optional) Type of protection. WPA_WPA2 means WPA, WPA2 and mixed types are allowed (must be one of the following: Unknown , Unsecure , WPA , WPA2 , WPA_WPA2 , Enterprise ) (property).hidden boolean Indicates whether a network is hidden (property).accesspoint boolean Indicates if the network operates in AP mode (property)?.psk string (optional) Network's PSK in plaintext (irrelevant if hash is provided) (property)?.hash string (optional) Network's PSK as a hash (property).identity string User credentials (username part) for EAP (property).password string User credentials (password part) for EAP The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.config@MyCorporateNetwork . If not specified all configurations are returned. Errors Code Message Description 22 ERROR_UNKNOWN_KEY Configuration does not exist 23 ERROR_INCOMPLETE_CONFIG Passed in configuration is invalid Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@MyCorporateNetwork\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@MyCorporateNetwork\", \"params\": { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } debug property Provides access to the sets debug level. This property is write-only . Value Name Type Description (property) number Debug level Errors Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.debug\", \"params\": 0 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WifiControl plugin: WifiControl interface events: Event Description scanresults Signals that the scan operation has finished networkchange Signals that a network property has changed connectionchange Notifies about connection state change scanresults event Signals that the scan operation has finished. Parameters Name Type Description params array params[#] object params[#].ssid string Identifier of a network params[#].pairs array params[#].pairs[#] object params[#].pairs[#].method string Encryption method used by the network params[#].pairs[#].keys array params[#].pairs[#].keys[#] string Types of supported keys params[#]?.bssid string (optional) 48-bits long BSS identifier (might be MAC format) params[#].frequency number Network's frequency in MHz params[#].signal number Network's signal level in dBm Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scanresults\", \"params\": [ { \"ssid\": \"MyCorporateNetwork\", \"pairs\": [ { \"method\": \"WPA\", \"keys\": [ \"psk\" ] } ], \"bssid\": \"94:b4:0f:77:cc:71\", \"frequency\": 5180, \"signal\": -44 } ] } networkchange event Signals that a network property has changed. e.g. frequency. Parameters This event carries no parameters. Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.networkchange\" } connectionchange event Notifies about connection state change. i.e. connected/disconnected. Parameters Name Type Description params string SSID of the connected network in case of connect or empty in case of disconnect Example { \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.connectionchange\", \"params\": \"MyCorporateNetwork\" }","title":"WifiControlPlugin"},{"location":"WifiControlPlugin/#wifi-control-plugin","text":"Version: 1.0 Status: :black_circle::black_circle::white_circle: WifiControl plugin for Thunder framework.","title":"Wifi Control Plugin"},{"location":"WifiControlPlugin/#table-of-contents","text":"Introduction Description Configuration Methods Properties Notifications","title":"Table of Contents"},{"location":"WifiControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"WifiControlPlugin/#scope","text":"This document describes purpose and functionality of the WifiControl plugin. It includes detailed specification about its configuration, methods and properties provided, as well as notifications sent.","title":"Scope"},{"location":"WifiControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"WifiControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"WifiControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"WifiControlPlugin/#description","text":"The WiFi Control plugin allows to manage various aspects of wireless connectivity. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"WifiControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WifiControl ) classname string Class name: WifiControl locator string Library name: libWPEWifiControl.so autostart boolean Determines if the plugin shall be started automatically along with the framework configuration object (optional) configuration?.connector string (optional) Connector name configuration?.interface string (optional) Interface name configuration?.application string (optional) Application name configuration?.preferred string (optional) Preferred configuration?.autoconnect string (optional) Enable autoconnect configuration?.retryinterval string (optional) Retry interval","title":"Configuration"},{"location":"WifiControlPlugin/#methods","text":"The following methods are provided by the WifiControl plugin: WifiControl interface methods: Method Description delete Forgets the configuration of a network store Stores the configurations in persistent storage scan Searches for available networks connect Attempts connection to a network disconnect Disconnects from a network","title":"Methods"},{"location":"WifiControlPlugin/#delete-method","text":"Forgets the configuration of a network.","title":"delete method"},{"location":"WifiControlPlugin/#parameters","text":"Name Type Description params object params.ssid string Identifier of a network","title":"Parameters"},{"location":"WifiControlPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"WifiControlPlugin/#errors","text":"Code Message Description 2 ERROR_UNAVAILABLE Returned when unable to update config list stored on disk","title":"Errors"},{"location":"WifiControlPlugin/#example","text":"","title":"Example"},{"location":"WifiControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.delete\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } }","title":"Request"},{"location":"WifiControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WifiControlPlugin/#store-method","text":"Stores the configurations in persistent storage.","title":"store method"},{"location":"WifiControlPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"WifiControlPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"WifiControlPlugin/#errors_1","text":"Code Message Description 40 ERROR_WRITE_ERROR Returned when the operation failed","title":"Errors"},{"location":"WifiControlPlugin/#example_1","text":"","title":"Example"},{"location":"WifiControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.store\" }","title":"Request"},{"location":"WifiControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WifiControlPlugin/#scan-method","text":"Searches for available networks. Also see: scanresults","title":"scan method"},{"location":"WifiControlPlugin/#parameters_2","text":"This method takes no parameters.","title":"Parameters"},{"location":"WifiControlPlugin/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"WifiControlPlugin/#errors_2","text":"Code Message Description 12 ERROR_INPROGRESS Returned when scan is already in progress 2 ERROR_UNAVAILABLE Returned when scanning is not available for some reason","title":"Errors"},{"location":"WifiControlPlugin/#example_2","text":"","title":"Example"},{"location":"WifiControlPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.scan\" }","title":"Request"},{"location":"WifiControlPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WifiControlPlugin/#connect-method","text":"Attempts connection to a network. Also see: connectionchange","title":"connect method"},{"location":"WifiControlPlugin/#parameters_3","text":"Name Type Description params object params.ssid string Identifier of a network","title":"Parameters"},{"location":"WifiControlPlugin/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"WifiControlPlugin/#errors_3","text":"Code Message Description 43 ERROR_NOT_EXIST Returned when the network with a the given SSID doesn't exists 22 ERROR_UNKNOWN_KEY Returned when the network with a the given security type doesn't exists 2 ERROR_UNAVAILABLE Returned when connection fails if there is no associated bssid to connect and not defined as AccessPoint. Rescan and try to connect 38 ERROR_INVALID_SIGNATURE Returned when connection is attempted with wrong password 9 ERROR_ALREADY_CONNECTED Returned when connection already exists 4 ERROR_ASYNC_ABORTED Returned when connection attempt fails for other reasons","title":"Errors"},{"location":"WifiControlPlugin/#example_3","text":"","title":"Example"},{"location":"WifiControlPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.connect\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } }","title":"Request"},{"location":"WifiControlPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WifiControlPlugin/#disconnect-method","text":"Disconnects from a network. Also see: connectionchange","title":"disconnect method"},{"location":"WifiControlPlugin/#parameters_4","text":"Name Type Description params object params.ssid string Identifier of a network","title":"Parameters"},{"location":"WifiControlPlugin/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"WifiControlPlugin/#errors_4","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Returned when the network with a the given SSID doesn't exists 4 ERROR_ASYNC_ABORTED Returned when disconnection attempt fails for other reasons","title":"Errors"},{"location":"WifiControlPlugin/#example_4","text":"","title":"Example"},{"location":"WifiControlPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.disconnect\", \"params\": { \"ssid\": \"MyCorporateNetwork\" } }","title":"Request"},{"location":"WifiControlPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"WifiControlPlugin/#properties","text":"The following properties are provided by the WifiControl plugin: WifiControl interface properties: Property Description status RO Network status networks RO Available networks configs RO All WiFi configurations config Single WiFi configuration debug WO Sets debug level","title":"Properties"},{"location":"WifiControlPlugin/#status-property","text":"Provides access to the network status. This property is read-only .","title":"status property"},{"location":"WifiControlPlugin/#value","text":"Name Type Description (property) object Network status (property).connected string Identifier of the connected network (property).scanning boolean Indicates whether a scanning for available network is in progress","title":"Value"},{"location":"WifiControlPlugin/#example_5","text":"","title":"Example"},{"location":"WifiControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.status\" }","title":"Get Request"},{"location":"WifiControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"connected\": \"MyCorporateNetwork\", \"scanning\": false } }","title":"Get Response"},{"location":"WifiControlPlugin/#networks-property","text":"Provides access to the available networks. This property is read-only .","title":"networks property"},{"location":"WifiControlPlugin/#value_1","text":"Name Type Description (property) array Available networks (property)[#] object (property)[#].ssid string Identifier of a network (property)[#].pairs array (property)[#].pairs[#] object (property)[#].pairs[#].method string Encryption method used by the network (property)[#].pairs[#].keys array (property)[#].pairs[#].keys[#] string Types of supported keys (property)[#]?.bssid string (optional) 48-bits long BSS identifier (might be MAC format) (property)[#].frequency number Network's frequency in MHz (property)[#].signal number Network's signal level in dBm","title":"Value"},{"location":"WifiControlPlugin/#example_6","text":"","title":"Example"},{"location":"WifiControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.networks\" }","title":"Get Request"},{"location":"WifiControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"MyCorporateNetwork\", \"pairs\": [ { \"method\": \"WPA\", \"keys\": [ \"psk\" ] } ], \"bssid\": \"94:b4:0f:77:cc:71\", \"frequency\": 5180, \"signal\": -44 } ] }","title":"Get Response"},{"location":"WifiControlPlugin/#configs-property","text":"Provides access to the all WiFi configurations. This property is read-only .","title":"configs property"},{"location":"WifiControlPlugin/#value_2","text":"Name Type Description (property) array All WiFi configurations (property)[#] object (property)[#].ssid string Identifier of a network (property)[#]?.type string (optional) Type of protection. WPA_WPA2 means WPA, WPA2 and mixed types are allowed (must be one of the following: Unknown , Unsecure , WPA , WPA2 , WPA_WPA2 , Enterprise ) (property)[#].hidden boolean Indicates whether a network is hidden (property)[#].accesspoint boolean Indicates if the network operates in AP mode (property)[#]?.psk string (optional) Network's PSK in plaintext (irrelevant if hash is provided) (property)[#]?.hash string (optional) Network's PSK as a hash (property)[#].identity string User credentials (username part) for EAP (property)[#].password string User credentials (password part) for EAP","title":"Value"},{"location":"WifiControlPlugin/#errors_5","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Configuration does not exist","title":"Errors"},{"location":"WifiControlPlugin/#example_7","text":"","title":"Example"},{"location":"WifiControlPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.configs\" }","title":"Get Request"},{"location":"WifiControlPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } ] }","title":"Get Response"},{"location":"WifiControlPlugin/#config-property","text":"Provides access to the single WiFi configuration.","title":"config property"},{"location":"WifiControlPlugin/#value_3","text":"Name Type Description (property) object Single WiFi configuration (property).ssid string Identifier of a network (property)?.type string (optional) Type of protection. WPA_WPA2 means WPA, WPA2 and mixed types are allowed (must be one of the following: Unknown , Unsecure , WPA , WPA2 , WPA_WPA2 , Enterprise ) (property).hidden boolean Indicates whether a network is hidden (property).accesspoint boolean Indicates if the network operates in AP mode (property)?.psk string (optional) Network's PSK in plaintext (irrelevant if hash is provided) (property)?.hash string (optional) Network's PSK as a hash (property).identity string User credentials (username part) for EAP (property).password string User credentials (password part) for EAP The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.config@MyCorporateNetwork . If not specified all configurations are returned.","title":"Value"},{"location":"WifiControlPlugin/#errors_6","text":"Code Message Description 22 ERROR_UNKNOWN_KEY Configuration does not exist 23 ERROR_INCOMPLETE_CONFIG Passed in configuration is invalid","title":"Errors"},{"location":"WifiControlPlugin/#example_8","text":"","title":"Example"},{"location":"WifiControlPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@MyCorporateNetwork\" }","title":"Get Request"},{"location":"WifiControlPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } }","title":"Get Response"},{"location":"WifiControlPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@MyCorporateNetwork\", \"params\": { \"ssid\": \"MyCorporateNetwork\", \"type\": \"WPA_WPA2\", \"hidden\": false, \"accesspoint\": true, \"psk\": \"secretpresharedkey\", \"hash\": \"59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\", \"identity\": \"user\", \"password\": \"password\" } }","title":"Set Request"},{"location":"WifiControlPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WifiControlPlugin/#debug-property","text":"Provides access to the sets debug level. This property is write-only .","title":"debug property"},{"location":"WifiControlPlugin/#value_4","text":"Name Type Description (property) number Debug level","title":"Value"},{"location":"WifiControlPlugin/#errors_7","text":"Code Message Description 2 ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"WifiControlPlugin/#example_9","text":"","title":"Example"},{"location":"WifiControlPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.debug\", \"params\": 0 }","title":"Set Request"},{"location":"WifiControlPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"WifiControlPlugin/#notifications","text":"Notifications are autonomous events, triggered by the internals of the implementation, and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WifiControl plugin: WifiControl interface events: Event Description scanresults Signals that the scan operation has finished networkchange Signals that a network property has changed connectionchange Notifies about connection state change","title":"Notifications"},{"location":"WifiControlPlugin/#scanresults-event","text":"Signals that the scan operation has finished.","title":"scanresults event"},{"location":"WifiControlPlugin/#parameters_5","text":"Name Type Description params array params[#] object params[#].ssid string Identifier of a network params[#].pairs array params[#].pairs[#] object params[#].pairs[#].method string Encryption method used by the network params[#].pairs[#].keys array params[#].pairs[#].keys[#] string Types of supported keys params[#]?.bssid string (optional) 48-bits long BSS identifier (might be MAC format) params[#].frequency number Network's frequency in MHz params[#].signal number Network's signal level in dBm","title":"Parameters"},{"location":"WifiControlPlugin/#example_10","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.scanresults\", \"params\": [ { \"ssid\": \"MyCorporateNetwork\", \"pairs\": [ { \"method\": \"WPA\", \"keys\": [ \"psk\" ] } ], \"bssid\": \"94:b4:0f:77:cc:71\", \"frequency\": 5180, \"signal\": -44 } ] }","title":"Example"},{"location":"WifiControlPlugin/#networkchange-event","text":"Signals that a network property has changed. e.g. frequency.","title":"networkchange event"},{"location":"WifiControlPlugin/#parameters_6","text":"This event carries no parameters.","title":"Parameters"},{"location":"WifiControlPlugin/#example_11","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.networkchange\" }","title":"Example"},{"location":"WifiControlPlugin/#connectionchange-event","text":"Notifies about connection state change. i.e. connected/disconnected.","title":"connectionchange event"},{"location":"WifiControlPlugin/#parameters_7","text":"Name Type Description params string SSID of the connected network in case of connect or empty in case of disconnect","title":"Parameters"},{"location":"WifiControlPlugin/#example_12","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.events.1.connectionchange\", \"params\": \"MyCorporateNetwork\" }","title":"Example"}]}